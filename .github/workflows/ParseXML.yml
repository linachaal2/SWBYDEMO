name: Parsing XML
on: workflow_dispatch

jobs:
  build:
    runs-on: macos-latest #ubuntu-latest #ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - 'latest'
    permissions:
      pull-requests: write
      contents: write
      
    concurrency:
      group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
      cancel-in-progress: true  
    
    steps:
    - uses: actions/checkout@v4
      with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0 
          
    # Save Branch Name, branch name will be used later if we switch to main branch       
    - name:  Save Branch Name 
      id: saveBranchName
      shell: bash
      run: |  
          echo "BRANCH_NAME=${{ github.head_ref }}"  >> $GITHUB_OUTPUT
    - name:  Print Branch Name 
      shell: bash
      run: |  
          echo "BRANCH_NAME=${{ steps.saveBranchName.outputs.BRANCH_NAME }}"    
          
    # Validate the rollout number for current branch
    - name: Parse BranchRolloutNumber XML
      id: getCurrentBranchRolloutNumber
      uses: mavrosxristoforos/get-xml-info@1.0
      with:
        xml-file: 'scripts/rollout_gen/generic/BranchRolloutNumber.xml'
        xpath: '//branch_rollout_number'
    - name: Print Current Branch Rollout Number
      id: CurrentBranchRolloutNumber
      shell: bash
      run: |   
         echo "Current Branch Rollout Number: ${{ steps.getCurrentBranchRolloutNumber.outputs.info }}"
         echo "CURRENT_BRANCH_ROLLOUT_NUMBER = ${{ steps.getCurrentBranchRolloutNumber.outputs.info }}"  >> $GITHUB_OUTPUT
    
    - name: Get the highest rollout number 
      shell: bash
      run: |
        if ${{ steps.CurrentBranchRolloutNumber.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER != 'X' }}; then
          echo "ROLLOUT_NUMBER_VALUE=${{ steps.regex-match.outputs.match }}"  
        else
          echo "Need to get the highest rollout number"
          echo "ROLLOUT_NUMBER_VALUE='X'" 
        fi 

    #brew install libxml2
   # - name: Update Homebrew formula
   #   uses: dawidd6/action-homebrew-bump-formula@v3
   #   with:
        # Required, custom GitHub access token with the 'public_repo' and 'workflow' scopes
   #     token: ${{ secrets.ACTIONS_KEY }}
   #     formula: libxml2
    - name: perl info
      run: |
          perl --version
    - name: setup locallib
      run: |
          PERL_LOCAL_LIB_ROOT="$HOME/perl5"
          >>"$GITHUB_ENV" echo "PERL_LOCAL_LIB_ROOT=$PERL_LOCAL_LIB_ROOT"
          >>"$GITHUB_ENV" echo "PERL5LIB=$PERL_LOCAL_LIB_ROOT/lib/perl5"
          >>"$GITHUB_ENV" echo "PERL_MB_OPT=--install_base \"$PERL_LOCAL_LIB_ROOT/\""
          >>"$GITHUB_ENV" echo "PERL_MM_OPT=INSTALL_BASE=$PERL_LOCAL_LIB_ROOT"
          >>"$GITHUB_ENV" echo "PATH=$PERL_LOCAL_LIB_ROOT/bin:$PATH"
    - name: install cpanm
      run: cpan App::cpanminus
    - name: test cpanm
      run: cpanm -v XML::LibXML
    - name: Parse Rollout Settings XML to get the New Rollout Number
      run: |  
         perl ${{ github.workspace }}/scripts/parseXMLfile.pl \
             -b "NEWBRANCH" \
             -f "${{ github.workspace }}/scripts/rollout_gen/generic/rollout_settings.xml"
      #-b "${{ steps.saveBranchName.outputs.BRANCH_NAME }}" \
   
     
