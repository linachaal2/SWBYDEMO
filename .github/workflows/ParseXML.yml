name: Parsing XML
on: workflow_dispatch
permissions:
  pull-requests: write
  contents: write
  
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true  
jobs:
  a:
    name: a
    runs-on: macos-latest #ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0 
      # Validate the rollout number for current branch
      - name: Parse BranchRolloutNumber XML
        id: getCurrentBranchRolloutNumberEX
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
         xml-file: 'scripts/rollout_gen/generic/BranchRolloutNumber.xml'
         xpath: '//branch_rollout_number'
      - name: Print Current Branch Rollout Number
        id: CurRolloutNumberEX
        shell: bash
        run: |   
         echo "Current Branch Rollout Number: ${{ steps.getCurrentBranchRolloutNumberEX.outputs.info }}"
         echo "CURRENT_BRANCH_ROLLOUT_NUMBER='${{ steps.getCurrentBranchRolloutNumberEX.outputs.info }}'" >> "$GITHUB_OUTPUT"
         echo "CURRENT_BRANCH_ROLLOUT_NUMBER : $CURRENT_BRANCH_ROLLOUT_NUMBER"   
      - run: echo "A"
     # - id: CurRolloutNumberEX
     #   run: |
     #    CURRENT_BRANCH_ROLLOUT_NUMBER="X"
     #    echo "CURRENT_BRANCH_ROLLOUT_NUMBER='X'" >> "$GITHUB_OUTPUT"
     #    echo "CURRENT_BRANCH_ROLLOUT_NUMBER : $CURRENT_BRANCH_ROLLOUT_NUMBER"
        #  echo "run_job_b='hello world'" >> $GITHUB_OUTPUT
    outputs:
      CURRENT_BRANCH_ROLLOUT_NUMBER: ${{ steps.CurRolloutNumberEX.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER }}
  b:
    name: b
    runs-on: macos-latest
    needs: a
    if: contains(needs.a.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER, 'X')
    steps:
      - id: NewRolloutNumberEX
        run: |
         echo "B"
         NEW_BRANCH_ROLLOUT_NUMBER="100"
         echo "NEW_BRANCH_ROLLOUT_NUMBER='100'" >> "$GITHUB_OUTPUT"
         echo "NEW_BRANCH_ROLLOUT_NUMBER : $NEW_BRANCH_ROLLOUT_NUMBER"
    outputs:
      NEW_BRANCH_ROLLOUT_NUMBER: ${{ steps.NewRolloutNumberEX.outputs.NEW_BRANCH_ROLLOUT_NUMBER }}    
  c:
    name: c
    runs-on: macos-latest
    needs: [a,b]
    if: always() && !cancelled() && contains(needs.*.result, 'success')
    steps:
      - run: |
         echo "C"
         if ${{ needs.b.outputs.NEW_BRANCH_ROLLOUT_NUMBER != '' }}; then
          echo "NEW ROLLOUT_NUMBER_VALUE is created"
          echo "ROLLOUT_NUMBER_VALUE=${{needs.b.outputs.NEW_BRANCH_ROLLOUT_NUMBER}}"  
         else
          echo "Current ROLLOUT_NUMBER_VALUE"
          echo "ROLLOUT_NUMBER_VALUE=${{needs.a.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER}}"
         fi 
    # - run: echo ${{needs.a.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER}}
    #  - run: echo ${{needs.b.outputs.NEW_BRANCH_ROLLOUT_NUMBER}}

#########################################################################################
#                      GetBranchRolloutNumberJob                                        #
#########################################################################################
    
  GetBranchRolloutNumberJob:
    name: GetBranchRolloutNumberJob
    runs-on: macos-latest #ubuntu-latest #ubuntu-22.04    
    steps:
    - uses: actions/checkout@v4
      with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0 
          
    # Save Branch Name, branch name will be used later if we switch to main branch       
    - name:  Current Branch Name 
      id: CurrentBranchName
      shell: bash
      run: |  
          echo "BRANCH_NAME=${{ github.head_ref }}"  >> $GITHUB_OUTPUT
    - name:  Print Branch Name 
      shell: bash
      run: |  
          echo "BRANCH_NAME=${{ steps.saveBranchName.outputs.BRANCH_NAME }}"    
          
    # Validate the rollout number for current branch
    - name: Parse BranchRolloutNumber XML
      id: getCurrentBranchRolloutNumber
      uses: mavrosxristoforos/get-xml-info@1.0
      with:
        xml-file: 'scripts/rollout_gen/generic/BranchRolloutNumber.xml'
        xpath: '//branch_rollout_number'
    - name: Print Current Branch Rollout Number
      id: CurrentBranchRolloutNumber
      shell: bash
      run: |   
         echo "Current Branch Rollout Number: ${{ steps.getCurrentBranchRolloutNumber.outputs.info }}"
         echo "CURRENT_BRANCH_ROLLOUT_NUMBER = '${{ steps.getCurrentBranchRolloutNumber.outputs.info }}'"  >> $GITHUB_OUTPUT
         echo "CURRENT_BRANCH_ROLLOUT_NUMBER : $CURRENT_BRANCH_ROLLOUT_NUMBER"
    outputs:
      CURRENT_BRANCH_ROLLOUT_NUMBER: ${{ steps.CurrentBranchRolloutNumber.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER }}

  CreatingRolloutPackageJobS:
    name: CreatingRolloutPackageJobS
    runs-on: macos-latest
    needs: [GetBranchRolloutNumberJob]
    if: always() && !cancelled() && contains(needs.*.result, 'success')
   
    steps:
      - run: echo ${{needs.GetBranchRolloutNumberJob.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER}}     

#########################################################################################
#                      GettingANewRolloutNumberJob                                      #
#########################################################################################
  GettingANewRolloutNumberJob:
    name: GettingANewRolloutNumberJob
    needs: GetBranchRolloutNumberJob
    if: contains(needs.GetBranchRolloutNumberJob.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER, 'X')
    runs-on: macos-latest
    steps:
      - name: Check out the repository to the runner
        uses: actions/checkout@v4
      - run: echo  ${{needs.GetBranchRolloutNumberJob.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER}}  
      - name: Parse Rollout Settings XML to get the New Rollout Number
        id: NewRolloutNumber
        run: |  
         NEW_BRANCH_ROLLOUT_NUMBER="33"
         echo "NEW_BRANCH_ROLLOUT_NUMBER : $NEW_BRANCH_ROLLOUT_NUMBER"
         echo "NEW_BRANCH_ROLLOUT_NUMBER=$NEW_BRANCH_ROLLOUT_NUMBER" >> "$GITHUB_OUTPUT"

    outputs:
      NEW_BRANCH_ROLLOUT_NUMBER: ${{ steps.NewRolloutNumber.outputs.NEW_BRANCH_ROLLOUT_NUMBER }} 

#########################################################################################
#                       CreatingRolloutPackageJob                                       #
#########################################################################################   
  CreatingRolloutPackageJob:
    name: CreatingRolloutPackageJob
    runs-on: macos-latest
    needs: [GetBranchRolloutNumberJob,GettingANewRolloutNumberJob]
    if: always() && !cancelled() && contains(needs.*.result, 'success')
   
    steps:
      - run: echo ${{needs.GetBranchRolloutNumberJob.outputs.CURRENT_BRANCH_ROLLOUT_NUMBER}}

    
        
      
     
