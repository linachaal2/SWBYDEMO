name: Changed Files test

on:
  pull_request:
    branches:
      - b2
  workflow_dispatch:
    inputs:
      rollout_number:
        description: 'Rollout number'
        required: true
        default: '999'
      rollout_version:
        description: 'Rollout version'
        required: false
        default: ''

jobs:
  # -------------------------------------------------------------
  # Event `pull_request`: Returns all changed pull request files.
  # --------------------------------------------------------------
  changed_files:
    # NOTE:
    # - This is limited to pull_request* events and would raise an error for other events.
    # - A maximum of 3000 files can be returned.
    # - For more flexibility and no limitations see "Using local .git history" above.

    runs-on: self-hosted #ubuntu-latest 
    name: Test changed-files
    permissions:
      pull-requests: read

    steps:
      - name: Set enviroment
        shell: bash
        run: |
          echo "Path is ... $PATH"
          PATH=$PATH:$(which git)
          echo "Path is ... $PATH"
          echo "Branch is ... ${{ github.head_ref }}"         
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
          echo "secret=second_value" >> "$GITHUB_ENV"
          export PR_BASE_SHA=${{ github.event.pull_request.base.sha }}
          echo "PR_BASE_SHA: $PR_BASE_SHA"
          echo "PR_BASE_SHA_SHORT=$(git rev-parse --short "$PR_BASE_SHA")"           
          export PR_HEAD_SHA=${{ github.event.pull_request.head.sha }}
          echo "PR_HEAD_SHA: $PR_HEAD_SHA"
          echo "PR_HEAD_SHA_SHORT=$(git rev-parse --short "$PR_HEAD_SHA")"         
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_SHA_SHORT=$(git rev-parse --short "$GITHUB_SHA")"           
          export PR_BASE_REF=${{ github.event.pull_request.base.ref }}
          echo "PR_BASE_REF: $PR_HEAD_REF"       
          export PR_HEAD_REF=${{ github.event.pull_request.head.ref }}
          echo "PR_HEAD_REF: $PR_HEAD_REF" 
          echo "git rev-parse ${{ github.sha }}^"
          echo "git rev-parse ${{ github.sha }}^@ | grep -Fvx ${{ github.event.pull_request.head.sha }}"
          #export LATEST_BASE_COMMIT=git rev-parse ${{ github.sha }}^@ | grep -Fvx ${{ github.event.pull_request.head.sha }}
          #echo "$LATEST_BASE_COMMIT"
          git diff --name-only "$PR_BASE_SHA $PR_HEAD_SHA"
          #git diff --name-only "$GITHUB_BASE_REF.${{ github.head_ref }}"
      - name: Read enviroment
        shell: bash
        run: |
          echo "BRANCH: ${{ env.branch }}"
          echo "SHA_SHORT: ${{ env.sha_short }}"
          echo "secret: ${{ env.secret }}"
          perl HelloWorldPerl.pl ${{ env.branch }} ${{ env.sha_short }}
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in "$ALL_CHANGED_FILES"; do
            echo "$file was changed"
          done
          
      - name: Get changed files and write the outputs to a JSON file
        id: changed-files-write-output-files-json
        uses: tj-actions/changed-files@v41
        with:
          json: true
          write_output_files: true
          output_dir: './tmp/outputs'
          rollout-number: '${{ github.event.inputs.rollout_number }}'

      - name: Checkout into dir1
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: dir1
  
      - name: Run changed-files with defaults in dir1
        id: changed-files-for-dir1
        uses: tj-actions/changed-files@v42
        with:
          path: dir1
  
      - name: List all added files in dir1
        env:
          ADDED_FILES: |-
            ${{ steps.changed-files-for-dir1.outputs.added_files }}
        run: |
          for file in ${ADDED_FILES}; do
            echo "$file was added"
          done
