alg_id,alg_grp_id,alg_typ_cd,alg_descr,need_evt_flg,need_evt_arg_flg,need_next_eo_seg_flg,need_this_eo_seg_flg,var_arg_list_flg,overstack_arg_flg,always_local_flg,code,code_len,u_version,ins_dt,last_upd_dt,ins_user_id,last_upd_user_id
"A_TEST_PRE","SL_IFD_PRE","MOCA","Test Pre","F","F","F","F","F","F","T","publish data where aldo='X'",27,1,"20210202172852","","SLIMP_I",""
"ALG_SHIPMENT_ORDER_INFO","SL_RETR_MTHD_IMPL","MOCA","Get shipment order information","F","F","F","F","F","F","T","[select distinct ord.wh_id,
        ord.client_id
   from ord,
        shipment_line shl
  where ord.client_id = shl.client_id
    and ord.ordnum = shl.ordnum
    and ord.wh_id = shl.wh_id
    and shl.ship_id = :i_c_ship_id
    and shl.ship_line_id like nvl(:i_c_ship_line_id, '%')]
|
get translated warehouse ID
|
[select distinct shl.ship_id,
        shl.ordnum,
        shl.client_id,
        ord.btcust,
        ord.rtcust,
        ord.stcust,
        ord.cponum,
        shl.wh_id,
        @trans_wh_id trans_wh_id
   from ord,
        shipment_line shl
  where ord.client_id = shl.client_id
    and ord.ordnum = shl.ordnum
    and ord.wh_id = shl.wh_id
    and ord.client_id = @client_id
    and shl.ship_id = :i_c_ship_id
    and shl.ship_line_id like nvl(:i_c_ship_line_id, '%')
   order by shl.ship_id,
            shl.ordnum]
",836,1,"20210202172853","","SLIMP_I",""
"APPT_PREPARE","SL_IFD_PRE","MOCA","Removes appointment notes so that they can be recreated on the download.","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
{
    [select count(*) cnt
       from appt_note
      where appt_id = :i_c_appt_id]
    |
    if (@cnt>0)
    {
        /* Remove notes. We'll recreate them in the download. */
          remove appointment note
           where appt_id = :i_c_appt_id catch (-1403, 510)
    }

}",325,1,"20210202172853","","SLIMP_I",""
"BLK_CPO_SEG_FOR_CAN_DA","SL_IFD_SEG_BLOCK","MOCA","Skip Purchase Order information if Customer Purchase Order is not present for Canonical DA event.","F","F","F","F","F","F","T","if (:i_c_cponum = '')
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",106,1,"20210202173416","","SLIMP_I",""
"BLK_FOR_APPT_SLOT_REQ","SL_IFD_SEG_BLOCK","MOCA","Block the segment if the carcod for the Appointment doesn't exist","F","F","F","F","F","F","F","if (:i_c_carcod and :i_c_carcod != '')
{
   publish data where blkval = 'F'
}   
else 
{
  publish data where blkval = 'T'
}",124,1,"20210202173542","","SLIMP_I",""
"BLK_FOR_LOD_DEPT_PAR_LVL","SL_IFD_SEG_BLOCK","MOCA","Block the segment if the parent Logistic Unit doesn't exist","F","F","F","F","F","F","T","if (:i_c_par_lvl_num and :i_c_par_lvl_num != '0')
{
   publish data where blkval = 'T'
}   
else 
{
  publish data where blkval = 'F'
}",135,1,"20210202173416","","SLIMP_I",""
"BLK_INB_SHIPMENT_DELETE","SL_IFD_SEG_BLOCK","MOCA","Skip shipments with receiving warehouses that are unknown. Skip shipments that are not marked for deleting.","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
[select wh.wh_id
     from wh
left join cstmst
       on cstmst.cstnum = wh.wh_id
    where wh.wh_id = @SHIPTOLOCATION  
      and ('DELETE' = @DOCUMENTACTIONCODE)] catch(-1403)
|
if (@? = -1403)
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",322,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"BLK_INB_SHIPMENT_REFRESH","SL_IFD_SEG_BLOCK","MOCA","Skip shipments with receiving warehouses that are unknown. Skip shipments that are marked for deleting.","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
get installed configuration
    where config = 'THIRD-PARTY-LOGISTICS'
|
if (@installed = 0)
{
    publish data where CLIENT_ID = '----'
}
|
[select wh.wh_id
      from wh
 left join cstmst
        on cstmst.cstnum = wh.wh_id
     where wh.wh_id = @SHIPTOLOCATION 
       and cstmst.client_id = @CLIENT_ID
       and ('ADD' = @DOCUMENTACTIONCODE or 'CHANGE_BY_REFRESH' = @DOCUMENTACTIONCODE)] catch(-1403)
|
if (@? = -1403)
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",550,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"BLK_INCLUDE_SHIPMENT_LINE","SL_IFD_SEG_BLOCK","MOCA","Block the shipment line when won status is product picked and INCLUDE-SHIPMENT-LINE policy is disabled","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if(@OUTBOUND_STATUS = 'PRODUCT_PICKED')
{
list policies
    			
    where polcod = 'CANONICAL'
    			
      and polvar = 'WAREHOUSING-OUTBOUND-NOTIFICATION'
   
      and polval = 'INCLUDE-SHIPMENT-LINE' 
    	
      and wh_id = @wh_id catch(-1403)
| 		
publish data 
      where include_shipment_line = nvl(@rtnum1, 0)
|
if ( @include_shipment_line = 0)
{
    publish data where blkval = 'T'
}
else
{
   publish data where blkval = 'F'
}
}
else
{
publish data where blkval = 'T'
}",524,1,"20210202173359","","SLIMP_I",""
"BLK_TM_CONSL_INFO","SL_IFD_SEG_BLOCK","MOCA","block_tm_cons_flg flag to publish the value at the time of order download.","F","F","F","F","F","F","T","if (:i_c_block_tm_cons_flg = 'T')
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",118,1,"20210202173525","","SLIMP_I",""
"BLK_UNKNOWN_SHIP_WAREHOUSE","SL_IFD_SEG_BLOCK","MOCA","Skip shipments with shipping warehouses that are unknown","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if(:i_c_shipfromlocation is not )
{
get warehouse id from host external id 
    where host_ext_id = :i_c_shipfromlocation catch(-1403)
|
if (@? = -1403)
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}
}
else
{
get inbound full validation flag
    |
    if (@inb_full_vld_flg)
    {
        log full validation error message
            where err_code = 802
              and argdsc = 'ShipFrom'
              and argid = 'ShipFrom'
    }
}",522,1,"20210202173249","","SLIMP_I",""
"BLKITM_IF_SL_AND_NOT_DEFAULT","SL_IFD_SEG_BLOCK","MOCA","Specific Item Warehouse Configurations cannot be Downloaded from the Host, so we will block Specific Item Configurations from being sent to the Host.
Also block when we download a Item from the HOST system.","F","F","F","F","F","F","T","if (:i_c_wh_id != '----' or @mode = 'SEAMLES')
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",123,1,"20210202172853","","SLIMP_I",""
"BLOCK_BARCOD_LSTSEG_FOR_RPS","SL_IFD_SEG_BLOCK","MOCA","Block the bar code list segment when we dont have any altrenate Items for the Item being sent to RPS","F","F","F","F","F","F","T","list alternate part numbers rm
    where prtnum         = :i_c_prtnum
        and prt_client_id = :i_c_prt_client_id catch (-1403)
|
if (@? = -1403)
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",233,1,"20210202172853","","SLIMP_I",""
"BLOCK_BLIND_RECEIPT_SHIPFROM","SL_IFD_SEG_BLOCK","MOCA","Blocks the Blind Receipt Ship-From segment based on the presence of "supnum"","F","F","F","F","F","F","T","if (:i_c_supnum = '')
{
   publish data where blkval = 'T'
}
else
{
   publish data where blkval = 'F'
}",104,1,"20210202173458","","SLIMP_I",""
"BLOCK_BLIND_RECEIVING","RECEIVING","MOCA","This Algorithm will retrieve if an adjustment is a Blind Receiving or not","F","F","F","F","F","F","T","if(:i_c_actcod = 'IDNTFY_UNXP')
{
    [select 'T' from dual]
}
else 
{
    [select 'F' from dual]
}",99,2,"20210202172853","20210202173458","SLIMP_I","SLIMP_I"
"BLOCK_CHANGE_RETURN_ORDER","SL_IFD_SEG_BLOCK","MOCA","If the return order is in process, then block change return order","F","F","F","F","F","F","T","[select nvl(retsts,0)  retsts from rethdr
   where rmanum = :i_c_rmanum and  wh_id = :i_c_whse_id]
|
if (@retsts != 0)
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",203,1,"20210202172853","","SLIMP_I",""
"BLOCK_CMP_FOR_NON_CMPTRK","SL_IFD_BLOCK","MOCA","Block Components if Component Track Flag is False.","F","F","F","F","F","F","T","[select cmp_trk_flg from wkohdr where wkonum = :i_c_trknum ]
|
 if (@cmp_trk_flg = '0')
{
        [select 'F' from dual]
}
else
{
        [select 'T' from dual]
}",162,1,"20210202172853","","SLIMP_I",""
"BLOCK_DAQTYVARIANCE","SL_IFD_BLOCK","MOCA","Block RIFD DDAQTYVARIANCE when the despatched quantity is zero.","F","F","F","F","F","F","T","if (:i_c_untqty = '0' or :i_c_untqty = '')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",119,1,"20210202173416","","SLIMP_I",""
"BLOCK_DELETE_RETURN_ORDER","SL_IFD_SEG_BLOCK","MOCA","If retsts of return header is not 0, block the delete order","F","F","F","F","F","F","T","[select nvl(retsts,0)  retsts from rethdr
   where rmanum = :i_c_rmanum and  wh_id = :i_c_whse_id]
|
if (@retsts != 0)
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",203,1,"20210202172853","","SLIMP_I",""
"BLOCK_DESPATCHADVICEROOT","SL_IFD_BLOCK","MOCA","Block RIFD DESPATCHADVICEROOT if the carrier type is Parcel/LTL/FTL.","F","F","F","F","F","F","T","if (:i_c_cartyp = 'S' or :i_c_cartyp = 'L' or :i_c_cartyp = 'T')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",141,1,"20210202173416","","SLIMP_I",""
"BLOCK_DEST_INTER_WH_IFD_SEG","SL_IFD_SEG_BLOCK","MOCA","Block the IFD Segments if the route to customers asn_sys does not match the destination system","F","F","F","F","F","F","T","
if(:i_c_dest_sys_id = :i_c_asn_sys) {
  publish data where block_flg = 'F'
} else {
  publish data where block_flg = 'T'
}",123,1,"20210202172853","","SLIMP_I",""
"BLOCK_DUTY_POS_ADJ","SL_IFD_SEG_BLOCK","MOCA","Blocks positive adjustment transaction to duty when adjustment is negative.","F","F","F","F","F","F","T","[select sum (untqty) untqty
   from invadj
 where cstms_cnsgnmnt_id=:i_c_cstms_cnsgnmnt_id
     and wh_id=:i_c_wh_id]
|
    if (@untqty > 0)
    {
       publish data where block_flg  = 'T'
    }
    else
    {
        publish data where block_flg = 'F'
    }
",260,1,"20210202172853","","SLIMP_I",""
"BLOCK_EXPIRATION_DATE","SL_IFD_SEG_BLOCK","MOCA","Blocks the segment from being produced based on the presence of the expire_dte variable.","F","F","F","F","F","F","T","if (:i_c_expdte = '')
{
   publish data where blkval = 'T'
}
else
{
   publish data where blkval = 'F'
}",104,1,"20210202173458","","SLIMP_I",""
"BLOCK_FOR_ADD_CHANGE","SL_IFD_BLOCK","MOCA","","F","F","F","F","F","F","T","if (:i_c_trntyp = 'D')
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",99,5,"20210202172853","","SLIMP_I",""
"BLOCK_FOR_DELETE","SL_IFD_BLOCK","MOCA","block for deletes","F","F","F","F","F","F","T","if (:i_c_trntyp != 'D')
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",100,1,"20210202172853","","SLIMP_I",""
"BLOCK_FOR_DTL_RULE","SL_IFD_BLOCK","MOCA","Blocking algorithm for allocation rules associated with work order detail","F","F","F","F","F","F","T","if (:i_c_wko_typ != 'ASMBLE' OR :i_c_nocomp_flg = 1)
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",129,1,"20210202172853","","SLIMP_I",""
"BLOCK_FOR_HDR_RULE","SL_IFD_BLOCK","MOCA","Blocking algorithm for allocation rules associated with work order headers","F","F","F","F","F","F","T","if (:i_c_wko_typ != 'DISASMBLE' OR :i_c_nocomp_flg = 1)
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",132,1,"20210202172853","","SLIMP_I",""
"BLOCK_FOR_IMPORT_MOVE","SL_IFD_BLOCK","MOCA","Block for move import from TM.","F","F","F","F","F","F","T","{if (:i_c_stop_seq is  and :i_c_tms_stop_seq is )
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'}",135,1,"20210202172853","","SLIMP_I",""
"BLOCK_FOR_IMPORT_MOVE_DCS","SL_IFD_BLOCK","MOCA","Block for Import Move to DCS.","F","F","F","F","F","F","T","if (:i_c_pickup_flg = 1)
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",109,1,"20210202172853","","SLIMP_I",""
"BLOCK_FOR_INV_ADJ","SL_EO_SEG_BLOCK","MOCA","This block is for INV_ADJ when the change is for an inventory attribute and the ATTR_CHG_FLG is 1","F","F","F","F","F","F","T","if(:i_n_ATTR_CHG_FLG = '1') 
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",105,6,"20210202172853","20210202173458","SLIMP_I","SLIMP_I"
"BLOCK_FOR_MOVE_PALLET","SL_IFD_BLOCK","MOCA","Block for MOVE IMPORT when there is a Case Segment","F","F","F","F","F","F","T","{if (:i_c_qty is )
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'}",100,1,"20210202172853","","SLIMP_I",""
"BLOCK_FOR_SEND_TO_HOST","SL_IFD_BLOCK","MOCA","block for send to host","F","F","F","F","F","F","T","if (:i_c_send_to_host = 0)
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",103,1,"20210202172853","","SLIMP_I",""
"BLOCK_FOR_SPECIFIC_WON_STATUS","SL_IFD_SEG_BLOCK","MOCA","blocking this segment when won_status will be "PRODUCT_PICKED"","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
list policies			
    where polcod = 'CANONICAL'		
      and polvar = 'WAREHOUSING-OUTBOUND-NOTIFICATION'
      and polval = 'INCLUDE-SHIPMENT-LINE' 
      and wh_id = @wh_id catch(-1403)
| 		
publish data 
      where include_shipment_line = nvl(@rtnum1, 0)
|
if(@OUTBOUND_STATUS = 'STOCK_ALLOCATED' OR @OUTBOUND_STATUS = 'STOCK_ALLOCATION_UNSUCCESSFUL' OR @include_shipment_line = 0)
{
    publish data where blkval = 'F'
}
else
{
   publish data where blkval = 'T'
}
",511,1,"20210202173359","","SLIMP_I",""
"BLOCK_IF_NOT_PLAY_ON_WKO_RVS","SL_EO_SEG_BLOCK","MOCA","Block if system is not playing a work order reversal","F","F","F","F","F","F","T","{

    if (:i_c_wkonum is not )

    {

        [select 'F' from dual]

    }

    else

    {

        [select 'T' from dual]

    }

}",140,1,"20210202172853","","SLIMP_I",""
"BLOCK_IF_PLAY_ON_TRKSTS_CLOSED","SL_EO_SEG_BLOCK","MOCA","Block If system is set up to play receipt transactions at Close, and this trk is not closed.","T","T","F","F","F","F","T","{

    if (:i_c_wkonum is not )

    {

        [select 'T' from dual]

    }

    else

    {

        [select clsdte

           from rcvtrk

          where trknum = :i_c_trknum

            and wh_id = :i_c_wh_id]

        |

        if (@clsdte is )

        {

            list policies where polcod = 'RECEIVE-INVENTORY'

                            and polvar = 'CLOSE-TRUCK'

                            and polval = 'SEND-TRANX-ON-CLOSE'

                            and wh_id = :i_c_wh_id catch (-1403)

            |

            if (@? = 0)

            {

                if (@rtnum1 = 1)

                {

                    [select 'T' from dual]

                }

                else

                {

                    [select 'F' from dual]

                }

            }

            else

            {

                [select 'F' from dual]

            }

        }

        else

        {

            [select 'F' from dual]

        }

    }

}",992,1,"20210202172853","","SLIMP_I",""
"BLOCK_INTER_WAREHOUSE_IFD_SEG","SL_IFD_SEG_BLOCK","MOCA","FILL INL ATER","F","F","F","F","F","F","T","
[select 1
   from car_move
   join stop
     on stop.car_move_id = car_move.car_move_id
   join shipment
     on shipment.stop_id = stop.stop_id
   join shipment_line
     on shipment_line.ship_id = shipment.ship_id
   join ord
     on ord.ordnum = shipment_line.ordnum
    and ord.wh_id = shipment_line.wh_id
    and ord.client_id = shipment_line.client_id
   join cstmst
     on cstmst.cstnum = ord.rtcust
    and cstmst.client_id = ord.client_id
  where car_move.trlr_id = :i_c_trailer_id
    and cstmst.asn_sys is not 
  having count(cstmst.asn_sys) > 0] catch(-1403)
|
if (@? = -1403)
{
    publish data where block_flg = 'T'
}
else
{
    publish data where block_flg = 'F'
}",685,1,"20210202172853","","SLIMP_I",""
"BLOCK_INV_STS_SEND_TO_LENS","SL_IFD_BLOCK","MOCA","block for send to host","F","F","F","F","F","F","T","if (:i_c_result_of_hold = 1)
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",105,1,"20210202172853","","SLIMP_I",""
"BLOCK_INVENTORY_RECEIPT","SL_IFD_SEG_BLOCK","MOCA","Block Inventory Receipt Trans","T","T","F","T","F","T","T","block inventory receipt",23,1,"20210202172853","","SLIMP_I",""
"BLOCK_INVENTORY_STATUS_CHNG","SL_EO_SEG_BLOCK","MOCA","Block Inventory Status Change","T","T","F","T","F","F","T","sl_es_sap_get stk_sts where wms_stk_sts = :i_c_hstsrc
|
if (@hst_stk_sts != '')
  publish data where f_host = @hst_stk_sts
else
  publish data where f_host = :i_c_hstsrc
|
sl_es_sap_get stk_sts where wms_stk_sts = :i_c_hstdst
|
if (@hst_stk_sts != '')
  publish data where t_host = @hst_stk_sts
else
  publish data where t_host = :i_c_hstdst
|
sl_es_sap_get hst_loc where wms_stk_sts = :i_c_hstsrc |
publish data where f_loc = @hst_loc
|
sl_es_sap_get hst_loc where wms_stk_sts = :i_c_hstdst |
publish data where t_loc = @hst_loc
|
if (@f_host != '' and @t_host != '' and ( (@f_host != @t_host) or (@f_loc != @t_loc) ))
        [select 'F' from dual]
else
        [select 'T' from dual]",686,1,"20210202172853","","SLIMP_I",""
"BLOCK_ITEM_IF_NOT_DEFAULT","SL_EO_SEG_BLOCK","MOCA","Specific Item Warehouse Configurations cannot be Downloaded from the Host, so we will block Specific Item Configurations from being sent to the Host.","F","F","F","F","F","F","T","if (:i_c_wh_id != '----')
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",102,1,"20210202172853","","SLIMP_I",""
"BLOCK_MOVE_INVENTORY","SL_EO_SEG_BLOCK","MOCA","Block Move Inventory","T","T","F","T","F","T","T","block process move",18,1,"20210202172853","","SLIMP_I",""
"BLOCK_NONPRD_PART","SL_EO_SEG_BLOCK","MOCA","Block If the Item is not configured as a Production Inventory Item (prdflg = 0)","T","T","F","F","F","F","T","{
    if (:i_c_prt_client_id = '' or :i_c_prt_client_id = @absent_ind_char)
    {
        if (:i_c_client_id != '' and :i_c_client_id != @absent_ind_char)
        {
            [select :i_c_client_id prt_client_id from dual]
        }
        else
        {
            if (:i_c_host_client_id != '' and :i_c_host_client_id != @absent_ind_char)
            {
                [select :i_c_host_client_id prt_client_id from dual]
            }
            else
            {
                sl_get sys_data_attr where sys_id = :i_c_sys_id
                |
                sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
                |
                [select @SysParmValue prt_client_id from dual]
            }
        }
    }
    else
    {
        [select :i_c_prt_client_id prt_client_id from dual]
    }
    |
    [select prdflg
       from prtmst_view
      where prtnum = :i_c_prtnum
        and prt_client_id = @prt_client_id
        and wh_id = :i_c_wh_id]
    |
    if (@prdflg = '0')
    {
        [select 'T' from dual]
    }
    else
    {
        [select 'F' from dual]
    }
}",1101,5,"20210202172853","","SLIMP_I",""
"BLOCK_NONPRD_PART_FOR_ORD","SL_EO_SEG_BLOCK","MOCA","Block If the Item is not configured as a Production Inventory Item (prdflg = 0)","T","T","F","F","F","F","T","{
    if (:i_c_prt_client_id = '' or :i_c_prt_client_id = @absent_ind_char)
    {
        if (:i_c_client_id != '' and :i_c_client_id != @absent_ind_char)
        {
            [select :i_c_client_id prt_client_id from dual]
        }
        else
        {
            if (:i_c_host_client_id != '' and :i_c_host_client_id != @absent_ind_char)
            {
                [select :i_c_host_client_id prt_client_id from dual]
            }
            else
            {
                sl_get sys_data_attr where sys_id = :i_c_sys_id
                |
                sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
                |
                [select @SysParmValue prt_client_id from dual]
            }
        }
    }
    else
    {
        [select :i_c_prt_client_id prt_client_id from dual]
    }
    |
    [select prdflg
       from prtmst,
            ord_line
      where ord_line.prtnum = prtmst.prtnum
         and ord_line.prt_client_id = prtmst.prt_client_id
         and ord_line.ordnum = :i_c_ordnum
         and ord_line.prt_client_id = @prt_client_id
         and ord_line.ordlin = :i_c_ordlin
         and ord_line.ordsln = :i_c_ordsln]
    |
    if (@prdflg = '0')
    {
        [select 'T' from dual]
    }
    else
    {
        [select 'F' from dual]
    }
}",1296,1,"20210202172853","","SLIMP_I",""
"BLOCK_NONPRD_SEAMLES_ITM","SL_EO_SEG_BLOCK","MOCA","Block If the Item is not configured as a Production Inventory Item (prdflg = 0) or when we download a Item from the HOST system.","F","F","F","F","F","F","T","{
    if (:i_c_prt_client_id = '' or :i_c_prt_client_id = @absent_ind_char)
    {
        if (:i_c_client_id != '' and :i_c_client_id != @absent_ind_char)
        {
            [select :i_c_client_id prt_client_id from dual]
        }
        else
        {
            if (:i_c_host_client_id != '' and :i_c_host_client_id != @absent_ind_char)
            {
                [select :i_c_host_client_id prt_client_id from dual]
            }
            else
            {
                sl_get sys_data_attr where sys_id = :i_c_sys_id
                |
                sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
                |
                [select @SysParmValue prt_client_id from dual]
            }
        }
    }
    else
    {
        [select :i_c_prt_client_id prt_client_id from dual]
    }
    |
    [select prdflg
       from prtmst_view
      where prtnum = :i_c_prtnum
        and prt_client_id = @prt_client_id
        and wh_id = :i_c_wh_id]
    |
    if (@prdflg = '0' or @mode = 'SEAMLES')
    {
        [select 'T' from dual]
    }
    else
    {
        [select 'F' from dual]
    }
}",1122,1,"20210202172853","","SLIMP_I",""
"BLOCK_NULL_CLIENT_ID","SL_EO_SEG_BLOCK","MOCA","Block When Prt Client ID is Null","T","T","F","T","F","F","T","{
if (:i_c_prt_client_id != '')
        [select 'F' from dual]
else
        [select 'T' from dual]
}",100,1,"20210202172853","","SLIMP_I",""
"BLOCK_PREP_FOR_SHIPPING","SL_IFD_BLOCK","MOCA","Block Prep for Shipping IFD","F","F","F","F","F","F","T","if (:i_c_process_type = 'PREPFORSHP')
{
  [ select 'T' from dual]
}
else
{
  [ select 'F' from dual]
}",102,1,"20210202172853","","SLIMP_I",""
"BLOCK_PRODUCT_VARIANT_ID","SL_IFD_SEG_BLOCK","MOCA","Blocks a segment based on the presence of product variant identifier","F","F","F","F","F","F","T","if (:i_c_revlvl = '----')
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",110,1,"20210202173416","","SLIMP_I",""
"BLOCK_PRODUCTION_DATE","SL_IFD_SEG_BLOCK","MOCA","Blocks a segment based on the presence of mandte","F","F","F","F","F","F","T","if (:i_c_mandte = '')
{
    publish data where blkval = 'T'
}
else
{
    publish data where blkval = 'F'
}",106,1,"20210202173458","","SLIMP_I",""
"BLOCK_SEG_FOR_GS1_APPT_HOSTID","SL_IFD_SEG_BLOCK","MOCA","Block the segment if the car_move_id or host_ext_id for the appointment is empty","F","F","F","F","F","F","T","
if (:i_c_car_move_id is NOT NULL)
{
    /*Fetch host_ext_id i.e. load id from car_move. If present then process, Otherwise block the segment.*/
    [select host_ext_id from car_move where car_move_id = @car_move_id]
    |
    if (@host_ext_id )
    {
        publish data where blkval = 'T'
    }   
    else 
    {
    publish data where blkval = 'F'
    }
} else {
    publish data where blkval = 'F'
}",405,1,"20210202173542","","SLIMP_I",""
"BLOCK_SEG_FOR_GS1_CARRIER","SL_IFD_SEG_BLOCK","MOCA","Block the segment if the carrier is empty","F","F","F","F","F","F","F","if (:i_c_carcod)
{
   publish data where blkval = 'T'
}   
else 
{
  publish data where blkval = 'F'
}",102,1,"20210202173407","","SLIMP_I",""
"BLOCK_SEG_FOR_GS1_DLN","SL_IFD_SEG_BLOCK","MOCA","Block the segment if the driver's license number is empty","F","F","F","F","F","F","F","[select driver_lic_num from trlr where trlr_id = :i_c_trlr_id]
|
if (@driver_lic_num)
{
   publish data where blkval = 'T'
}   
else 
{
  publish data where blkval = 'F'
}",171,1,"20210202173415","","SLIMP_I",""
"BLOCK_SEG_FOR_GS1_DRIVER_NAME","SL_IFD_SEG_BLOCK","MOCA","Block the segment if the driver name is empty","F","F","F","F","F","F","F","if (:i_c_driver_nam = )
{
   publish data where blkval = 'T'
}   
else 
{
  publish data where blkval = 'F'
}",113,1,"20210202173506","","SLIMP_I",""
"BLOCK_SEG_FOR_GS1_TMI","SL_IFD_SEG_BLOCK","MOCA","Block the segment if the transportMeansID is empty","F","F","F","F","F","F","F","[select tractor_num
   from trlr 
 where trlr_id = :i_c_trlr_id] catch(-1403)
|
if (@tractor_num)
{
    publish data where blkval = 'T'
}   
else 
{
    publish data where blkval = 'F'
}
",187,1,"20210202173416","","SLIMP_I",""
"BLOCK_SEG_FOR_GS1_TRACTOR_NUM","SL_IFD_SEG_BLOCK","MOCA","Block the segment if the transportMeansID is empty","F","F","F","F","F","F","F","if (:i_c_tractor_num = )
{
   publish data where blkval = 'T'
}   
else 
{
  publish data where blkval = 'F'
}",114,1,"20210202173506","","SLIMP_I",""
"BLOCK_SEG_FOR_RPS","SL_EO_SEG_BLOCK","MOCA","Block the segment if the IIFD is from RPS.","F","F","F","F","F","F","T","if ( :i_c_sys_id = 'RPS')
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",102,6,"20210202172853","20210202173205","SLIMP_I","SLIMP_I"
"BLOCK_SHIP_NONPRD_PART","SL_EO_SEG_BLOCK","MOCA","Block If the Item is not configured as a Production Inventory Item (prdflg = 0)","T","T","F","F","F","F","T","{
    if (:i_c_prt_client_id = '' or :i_c_prt_client_id = @absent_ind_char)
    {
        if (:i_c_client_id != '' and :i_c_client_id != @absent_ind_char)
        {
            [select :i_c_client_id prt_client_id from dual]
        }
        else
        {
            if (:i_c_host_client_id != '' and :i_c_host_client_id != @absent_ind_char)
            {
                [select :i_c_host_client_id prt_client_id from dual]
            }
            else
            {
                sl_get sys_data_attr where sys_id = :i_c_sys_id
                |
                sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
                |
                [select @SysParmValue prt_client_id from dual]
            }
        }
    }
    else
    {
        [select :i_c_prt_client_id prt_client_id from dual]
    }
    |
    [select prtmst.prdflg
       from prtmst,
            ord_line
      where ord_line.ordnum = :i_c_ordnum
        and ord_line.client_id = @client_id
        and ord_line.ordlin = :i_c_ordlin
        and ord_line.ordsln = :i_c_ordsln
        and ord_line.prtnum = prtmst.prtnum
        and ord_line.prt_client_id = prtmst.prt_client_id]
    |
    if (@prdflg = '0')
    {
        [select 'T' from dual]
    }
    else
    {
        [select 'F' from dual]
    }
}",1290,1,"20210202172853","","SLIMP_I",""
"BLOCK_STOP_FOR_PICKUP","SL_IFD_SEG_BLOCK","MOCA","Block the Stop IFD segment if it's a pickup","F","F","F","F","F","F","T","if (:i_c_stoptype = 'P') {     [ select 'T' from dual] } else {     [ select 'F' from dual] }",93,1,"20210202172853","","SLIMP_I",""
"BLOCK_TMS_CAR_MOVE","SL_IFD_BLOCK","MOCA","Blocking algorithm used to block all non TL carrier moves from being sent to the TMS","F","F","F","F","F","F","F","[select count(*) tl_count
   from cardtl
  where carcod = :i_c_carcod
    and srvlvl = :i_c_srvlvl
    and cartyp != 'T' ]
|
if (@tl_count = 0)
{
    publish data
      where blkval = 'F'
}
else
{
    publish data
      where blkval = 'T'
}",240,1,"20210202172853","","SLIMP_I",""
"BLOCK_TMS_MOVE_IMP_RCPT_TRK","SL_IFD_BLOCK","MOCA","Algorithm to block the move import transaction.","F","F","F","F","F","F","T","[ select 1
    from wh, adrmst
   where wh.adr_id = adrmst.adr_id
     and adrmst.host_ext_id = :i_c_host_ext_id]catch(-1403)
|
if (@? = 0 and :i_c_delivery_flg = 1 and :i_c_trkref != '')
{
    publish data
      where blkval = 'F'
}
else
{
    publish data
      where blkval = 'T'
}",284,1,"20210202172853","","SLIMP_I",""
"BLOCK_TMS_MOVE_IMPORT_RCPT","SL_IFD_BLOCK","MOCA","Algorithm to block the move import transaction.","F","F","F","F","F","F","T","[ select count(*) sup_cnt
    from adrmst
    join supmst
      on supmst.adr_id = adrmst.adr_id
   where host_ext_id = :i_c_sf_host_ext_id ]
|
if (@sup_cnt = 0 or :i_c_delivery_flg = 1)
{
    publish data
      where blkval = 'F'
}
else
{
    publish data
      where blkval = 'T'
}",283,1,"20210202172853","","SLIMP_I",""
"BLOCK_TMS_SHIPMENT","SL_IFD_SEG_BLOCK","MOCA","Blocks shipments that are not marked as "delivery" shipments.  We need to create delivery stop for each outbound shipment","F","F","F","F","F","F","F","if (:i_c_delivery_flg = 1)
{
    publish data
      where blkval = 'F'
}
else
{
    publish data
      where blkval = 'T'
}",123,1,"20210202172853","","SLIMP_I",""
"BLOCK_TMS_SHIPMENT_LINE","SL_IFD_SEG_BLOCK","MOCA","Blocks shipment lines coming from TM if the shipment is not marked for delivery.","F","F","F","F","F","F","T","if (:i_c_delivery_flg = '0')
{
    publish data where blkflg = 'T'
}
else
{
    publish data where blkflg = 'F'
}",113,1,"20210202172853","","SLIMP_I",""
"BLOCK_TMS_TL_CAR_MOVE","SL_IFD_BLOCK","MOCA","Blocking algorithm for the TM actuals","F","F","F","F","F","F","F","[select count(*) tl_count
   from cardtl
  where carcod = :i_c_carcod
    and srvlvl = :i_c_srvlvl
    and cartyp != 'T' ]
|
if (@tl_count = 0)
{
    publish data
      where blkval = 'T'
}
else
{
    publish data
      where blkval = 'F'
}",240,1,"20210202172853","","SLIMP_I",""
"BLOCK_WH_ID_IN_SYSTEM_NAME","SL_IFD_BLOCK","MOCA","This blocking algorithm is used to block transaction by warehouse when the receiving system is not multi-warehouse enabled. The wh_id variable must be available and the system name must have the value of the wh_id in the name.","F","F","F","F","F","F","T","/* find the comma separator in the system id */
/* format = <system name>;<wh_id>  */
/* example = PALLETCTL;WMD1 */
publish data
  where start_pos = instr(:i_c_sys_id, ';')
|
/* if the comma is not found then don't block */
if (@start_pos = 0)
{
    publish data where blkval = 'T'
}
else
{
    /* if the comma is found then extract the warehouse from the */
    /* system. */
    publish data
      where system_warehouse = substr(:i_c_sys_id, @start_pos+1)
    |
    if (@system_warehouse = :i_c_wh_id)
    {
        /* if the warehouse ids match then don't block */
        publish data where blkval = 'T'
    }
    else
    {
        /* block if the warehouse ids don't match */
        publish data where blkval = 'F'
    }
}",731,1,"20210202172853","","SLIMP_I",""
"BLOCK_WHSE","SL_IFD_BLOCK","MOCA","Block Whse","F","F","F","F","F","F","T","{
   /*Block on warehouse ID */
   sl_get data_attr
            where src_sys_id = :i_c_evt_sys_id
              and value = trim(:i_c_whse_id)
   |
   if (@is_absent = 'T' or @is_nochg = 'T' or @is_ = 'T')
   {
        publish data where blkval='F'
   }
   else
   {
       [select min(sys_id) sys_id,rtrim(:i_c_whse_id) whse_id
          from sl_sys_def where native_nam= :i_c_whse_id]
      |
      if (:i_c_sys_id = @sys_id or @sys_id is )
           publish data where blkval='F'
      else
           publish data where blkval='T'
    }
|
publish data where blkval =@blkval
}",589,13,"20210202172853","","SLIMP_I",""
"BLOCK_WHSE_FOR_DELETE","SL_IFD_BLOCK","MOCA","Filter IFD Processing for delete and specific warehouse","F","F","F","F","F","F","T","{
/* Block on Transaction Type */
if (:i_c_trntyp != 'D')
    publish data where blkval = 'T'
else
{
    /*Block on warehouse ID in Non-Digital Supplier instances */
    sl_get data_attr
            where src_sys_id = :i_c_evt_sys_id
               and value = trim(:i_c_whse_id)
   |
   if (@is_absent = 'T' or @is_nochg = 'T' or @is_ = 'T')
   {
        publish data where blkval='F'
   }
   else
   {
        [select min(sys_id) sys_id,rtrim(:i_c_whse_id) whse_id
           from sl_sys_def where native_nam= :i_c_whse_id]
        |
        if (:i_c_sys_id = @sys_id or @sys_id is )
            publish data where blkval='F'
        else
            publish data where blkval='T'
   }
}
|
publish data where blkval =@blkval
}",736,1,"20210202172853","","SLIMP_I",""
"BLOCK_WKO_FOR_CMPTRK","SL_IFD_BLOCK","MOCA","Blocking algorithm for WKO Result IFD","F","F","F","F","F","F","T","[select cmp_trk_flg from wkohdr where wkonum = :i_c_wkonum ]
|
if (@cmp_trk_flg = '0')
{
        [select 'F' from dual]
}
else
{
        [select 'T' from dual]
}
",162,5,"20210202172853","","SLIMP_I",""
"CAFE_GET_REMOTE_STRING","SL_IFD_FLD","MOCA","Get Remote Execute String","F","F","F","F","F","F","T","sl_list sys_def where sys_id = :i_c_dest_sys_id | if (@service and @service != '' and @sl_host_sys_flg and @sl_host_sys_flg = 'F') {  publish data where      moca_nq_remote_str =  'remote("' || @service || '") ' } else {  publish data where moca_nq_remote_str ='' }",265,25,"20210202172853","","SLIMP_I",""
"CAI_CHECK_FOR_DELETE","SL_IFD_SEG_BLOCK","MOCA","Check For Delete","F","T","F","F","F","F","T","[select decode(:i_c_DELETE_FLAG, 'Y', 'T', 'F') from dual]",58,1,"20210202172853","","SLIMP_I",""
"CHECK_CUS_RET_ORD","SL_IFD_SEG_BLOCK","MOCA","Check DESADV01 for Customer Return Order","F","F","F","F","F","F","T","[select decode(rtrim(:i_c_sapordtyp), 'H', 'T', 'F') from dual]",63,1,"20210202172853","","SLIMP_I",""
"CHECK_CUS_TRNTYP_FOR_DELETE","SL_IFD_SEG_BLOCK","MOCA","Check For Delete","F","T","F","F","F","F","T","if ( :i_c_trntyp = 'D' )
   publish data where blkval = 'T'
else
   {
   if ( :i_c_host_ext_id = '')
    publish data where blkval = 'T'
   else
    publish data where blkval = 'F'
   }",185,1,"20210202172853","","SLIMP_I",""
"CHECK_FOR_CARRIER","SL_IFD_SEG_PROC","MOCA","Check for Carrier CREMAS01","F","F","F","F","F","F","T","[select decode(rtrim(:i_c_LFA1M_BRSCH), '001', 'T', 'F') from dual]",67,1,"20210202172853","","SLIMP_I",""
"CHECK_FOR_LENS_SYS_DISABLED","SL_IFD_BLOCK","MOCA","Check if LENS was modifed","F","F","F","F","F","F","T","[select decode(@sl_sys_parm_id, 'LENS_ENABLED', decode(@old_sl_sys_parm_val, 'TRUE', decode(@sl_sys_parm_val, 'FALSE', 'T','False', 'T', 'false','T','F','T','0','T','f','T','F'), 'T', decode(@sl_sys_parm_val, 'FALSE', 'T','False', 'T', 'false','T','F','T','0','T','f','T','F'), 'true', decode(@sl_sys_parm_val, 'FALSE', 'T','False', 'T', 'false','T','F','T','0','T','f','T','F'), 't', decode(@sl_sys_parm_val, 'FALSE', 'T','False', 'T', 'false','T','F','T','0','T','f','T','F'), '1', decode(@sl_sys_parm_val, 'FALSE', 'T','False', 'T', 'false','T','F','T','0','T','f','T','F'), 'True', decode(@sl_sys_parm_val, 'FALSE', 'T','False', 'T', 'false','T','F','T','0','T','f','T','F'), 'F'),'F') reslt from dual]
",707,1,"20210202172853","","SLIMP_I",""
"CHECK_FOR_LENS_SYS_ENABLED","SL_IFD_BLOCK","MOCA","Check if LENS was modifed","F","F","F","F","F","F","T","[select decode(@sl_sys_parm_id, 'LENS_ENABLED', decode(@old_sl_sys_parm_val, 'FALSE', decode(@sl_sys_parm_val, 'TRUE', 'T', 'true','T','T','T','1','T','t','T','F'), 'F', decode(@sl_sys_parm_val, 'TRUE', 'T', 'true','T','T','T','1','T','t','T','F'), 'false', decode(@sl_sys_parm_val, 'TRUE', 'T', 'true','T','T','T','1','T','t','T','F'), 'f', decode(@sl_sys_parm_val, 'TRUE', 'T', 'true','T','T','T','1','T','t','T','F'), '0', decode(@sl_sys_parm_val, 'TRUE', 'T', 'true','T','T','T','1','T','t','T','F'), 'False', decode(@sl_sys_parm_val, 'TRUE', 'T','True', 'T', 'true','T','T','T','1','T','t','T','F'), 'F'),'F') reslt from dual]
",632,1,"20210202172853","","SLIMP_I",""
"CHECK_FOR_REMOVE","SL_IFD_BLOCK","MOCA","Check For Remove","F","T","F","F","F","F","T","[select decode(:i_c_EO_MOCA_VERB, 'remove', 'T', 'F') from dual]",64,1,"20210202172853","","SLIMP_I",""
"CHECK_IF_ALLOC_RULE_IS_CPLX","SL_IFD_SEG_BLOCK","MOCA","Check if allocation rule is complex rule","F","F","F","F","F","F","T","[select decode(cplx_flg, '1', 'T', 'F') from alloc_rule_hdr where rule_nam = :i_c_rule_nam and wh_id = :i_c_wh_id]",114,1,"20210202172853","","SLIMP_I",""
"CHECK_IF_CUSTOMER_EXISTS","SL_IFD_SEG_PROC","MOCA","Checks if a customer exists in the database, and adds a default one if none exists.","F","F","F","F","F","F","T","
/*
 * Determine if the customer given exists.  If not, create it with
 * the address generated previously.
 */
[select 1
   from cstmst
  where client_id = :i_c_client_id
    and cstnum    = :i_c_cstnum] catch(-1403)
|
if (@? = -1403)
{
    [select adr_id
       from adrmst
     where client_id   = :i_c_client_id
        and host_ext_id = :i_c_host_ext_id] catch(-1403)
    |
    if (@? = 0)
    {
        create customer
        where cstnum    = :i_c_cstnum
           and client_id = :i_c_client_id
           and adr_id    = @adr_id
    }
}",547,5,"20210202172853","","SLIMP_I",""
"CHECK_INV_FOR_PROD_WO","SL_IFD_SEG_BLOCK","MOCA","Checks if Invoice Type is for a Work Order Receipt and distinguishes between a 'PROD' and a 'RET' supnum","F","F","F","F","F","F","T","[select
        rtrim(pd.rtstr2) wo_invtyp
from
        poldat pd
where
        pd.polcod= 'WORK-ORDER-PROCESSING'   and pd.polvar= 'MISCELLANEOUS'
        and pd.polval = 'RECEIVING-DEFAULTS' and pd.rtstr1 = 'invtyp' ]
|
if ( @wo_invtyp = :i_c_invtyp and :i_c_supnum = 'PROD' )
{
        [select 'T' from dual ]
}
else
{
        [select 'F' from dual ]
}",355,1,"20210202172853","","SLIMP_I",""
"CHECK_INV_FOR_RTS_WO","SL_IFD_SEG_BLOCK","MOCA","Checks if Invoice Type is for a Work Order Receipt and has a 'RET' supnum","F","F","F","F","F","F","T","[select
        rtrim(pd.rtstr2) wo_invtyp
from
        poldat pd
where
        pd.polcod= 'WORK-ORDER-PROCESSING'   and pd.polvar= 'MISCELLANEOUS'
        and pd.polval = 'RECEIVING-DEFAULTS' and pd.rtstr1 = 'invtyp' ]
|
if ( @wo_invtyp = :i_c_invtyp and :i_c_supnum = 'RET' )
{
        [select 'T' from dual ]
}
else
{
        [select 'F' from dual ]
}",354,1,"20210202172853","","SLIMP_I",""
"CHECK_INVSTS_BY_HLD_FLG","SL_IFD_FLD","MOCA","Checks if the invoice type is a Return type and translates it for DW","F","F","F","F","F","F","T","if(:i_c_hld_flg = '1')
{
   publish data where invsts = 'H'
}
else
{
   publish data where invsts = :i_c_invsts
}",113,9,"20210202172853","","SLIMP_I",""
"CHECK_INVTYP_FOR_DW","SL_IFD_FLD","MOCA","Checks if the invoice type is a Return type and translates it for DW","F","F","F","F","F","F","T","[select decode(:I_C_IFD_FLD_DATA, 'R', 'RTN', :I_C_IFD_FLD_DATA) from dual]",75,5,"20210202172853","","SLIMP_I",""
"CHECK_INVTYP_FOR_RCPT","SL_IFD_SEG_BLOCK","MOCA","Check Invoice Type For Standard Receipt","F","T","F","F","F","F","T","list policies where polcod= 'WORK-ORDER-PROCESSING'
                and polvar= 'MISCELLANEOUS'
                and polval = 'RECEIVING-DEFAULTS'
                and rtstr1 = 'invtyp'
                and wh_id = :i_c_wh_id
|
if (@rtstr2 != :i_c_invtyp)
{
    [select retflg from invtypmst where invtyp = :i_c_invtyp]
    |
    [select decode(@retflg, '1', 'F', 'T') from dual ]
}
else
{
    [select 'F' from dual ]
}",416,5,"20210202172853","","SLIMP_I",""
"CHECK_INVTYP_FOR_RET","SL_IFD_SEG_BLOCK","MOCA","Check Invoice Type For Return Receipt","F","F","F","F","F","F","T","[select retflg from invtypmst where invtyp = :i_c_invtyp]
|
[select decode(@retflg, '1', 'T', 'F') from dual ]
",111,1,"20210202172853","","SLIMP_I",""
"CHECK_INVTYP_FOR_WO","SL_IFD_SEG_BLOCK","MOCA","Check Invoice Type For Work Order Receipt","F","T","F","F","F","F","T","list policies where polcod= 'WORK-ORDER-PROCESSING'
                and polvar= 'MISCELLANEOUS'
                and polval = 'RECEIVING-DEFAULTS'
                and rtstr1 = 'invtyp'
                and wh_id = :i_c_wh_id
|
[select decode(:i_c_invtyp, @rtstr2, 'T', 'F') from dual ]",283,1,"20210202172853","","SLIMP_I",""
"CHECK_OKAY_TO_SEND_DCS_ASN","SL_IFD_BLOCK","MOCA","Check Okay to send ASN to other DCS","F","F","F","F","F","F","T","[select decode(sd.sys_id, , 'F', decode(sh.ordtyp, 'T', 'T', 'F')) blk_val
from adrmst a right outer join shphdr sh
  on (a.adrnum = sh.stcust)
 and (a.adrtyp = 'C')
 left outer join sl_sys_def sd on (sd.native_nam = rtrim(sh.stcust))
where sh.shipid = rpad(:i_c_shipid,20)
and  sh.shpseq = rpad(:i_c_shpseq,4)
and  sh.subsid = rpad(:i_c_subsid,4)
and  sh.ordnum = rpad(:i_c_ordnum,20)]",390,1,"20210202172853","","SLIMP_I",""
"CHECK_PART_EXISTS","SL_IFD_SEG_BLOCK","MOCA","Check Item exists in PRTMST","F","F","F","F","F","F","T","[select decode(min(prtnum), , 'F', 'T') prt_blk_val
from prtmst
where
       prtnum = :i_c_prtnum
  and  prt_client_id = :i_c_prt_client_id]",144,1,"20210202172853","","SLIMP_I",""
"CHECK_PARTFOOT_REFERENCE","SL_IFD_BLOCK","MOCA","Check Item Footprint Referential Integrity, Check If Item Footprint
Has Been Used In WM.","F","F","F","F","F","T","T","{
    /* Check for referential integrity for a Change transaction type */
    if (:i_c_trntyp = 'C')
    {
        /* Check all warehouses for four-wall inventory (FWI) referencing this
         * footprint. All warehouses will be checked if wh_id='----'.  Update
         * should not occur if such inventory exists for any warehouse. If the
         * check passes, the footprint definition will be updated for each
         * warehouse.
         *
         * This command returns 2003 if the footprint does not exist for the
         * default warehouse.
         */
        check part footprint referential integrity
            where prtnum = :i_c_prtnum
              and prt_client_id = :i_c_prt_client_id
              and ftpcod = :i_c_ftpcod
              and wh_id = :i_c_whse_id catch (@?)
        |
        if (@? = 2003)
        {
            publish data
                where blkval = 'F'
        }
        else if (@? != 0)
        {
            publish data where post_error_code = @?
               and post_error_msg = @!
            |
            get inbound full validation flag
            |
            if (@inb_full_vld_flg)
            {
                log full validation error message
                    where err_code = -1 * @post_error_code
                      and def_err_msg = @post_error_msg
                      and ifd_seg_id = 'PARTFOOT_SEG'
                      and <<OVERSTACKED_ARGS>>
            }
            |
            set return status where status = -1 * @post_error_code
                and message = @post_error_msg
        }
    }
    else
    {
        /* Do not block Add - it includes duplicate footprint check */
        publish data
            where blkval = 'F'
    }
}
",1733,1,"20210202172853","","SLIMP_I",""
"CHECK_TRNTYP_FOR_DELETE","SL_IFD_SEG_BLOCK","MOCA","Check For Delete","F","F","F","F","F","F","T","{if ( :i_c_trntyp = 'D' OR :i_c_nocomp_flg = 1)    publish data where blkval = 'T' else    publish data where blkval = 'F'}",123,26,"20210202172853","20210202173205","SLIMP_I","SLIMP_I"
"CHECK_WO_NOCOMP","SL_IFD_SEG_BLOCK","MOCA","Check For Delete","F","F","F","F","F","F","T","{if (:i_c_nocomp_flg = 1)    publish data where blkval = 'T' else    publish data where blkval = 'F'}",101,1,"20210202172853","","SLIMP_I",""
"CLOSE_UNEXPECTED","SL_IFD_BLOCK","MOCA","Block when the reason code on an Inventory Adjust WO is   =  CLS_UNEXPECTED_COMP","F","F","F","F","F","F","T","[select decode(:i_c_reacod, 'CLS_UNEXPECTED_COMP', 'T', 'F') from dual ]",72,1,"20210202172853","","SLIMP_I",""
"CONVERT_ABSENT_CHAR_TO_NULL","SL_IFD_FLD","MOCA","The absent char in Integrator will be converted to '*' or '+', we should convert them to  before passing them to WM command.","F","F","F","F","F","F","T","sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
{
    publish data
     where res = :i_c_ifd_fld_data
}
else {
    publish data
     where res = 
}",249,3,"20210202173159","20210202173330","SLIMP_I","SLIMP_I"
"CONVERT_CARTON_WEIGHT_TO_GS1","SL_IFD_FLD","MOCA","Takes carton weight and UOM and returns a weight value in the GS1 UOM","F","F","F","F","F","F","T","sl_get data_attr
 where src_sys_id = :i_c_dest_sys_id
   and value = :i_c_CRTN_WEIGHT 
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F' and :i_c_CRTN_WEIGHT > 0)
{
    convert unit from wm to gs1 
      where source_type='weight' 
        and value = :i_c_CRTN_WEIGHT 
        and dest_code = :i_c_measurementunitcode
}
else {
    publish data where value= '0.0'
}
",378,1,"20210202173416","","SLIMP_I",""
"CONVERT_FRTCOD_FROM_GS1_WM","SL_IFD_FLD","MOCA","Convert FRTCOD from GS1 Value to WM Value","F","F","F","F","F","F","F","sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ != 'T' and @is_absent != 'T' and @is_nochg != 'T'){

convert gs1 code to wm code
  where polval = 'FRT-COD' 
      and gs1Code =:I_C_IFD_FLD_DATA
      and wh_id = :I_C_WH_ID
}
else
{
publish data where res = ''
}",311,1,"20210202173205","","SLIMP_I",""
"CONVERT_FRTCOD_FROM_WM_GS1","SL_IFD_FLD","MOCA","Converts freight code from WM to GS1","F","F","F","F","F","F","F","sl_get data_attr
 where src_sys_id = :i_c_dest_sys_id
   and value = :I_C_FRTCOD
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
{
convert wm code to gs1 code 
    where polval = 'FRT-COD' 
      and wmCode = :I_C_FRTCOD
      and wh_id  = :I_C_WH_ID
}
else {
    publish data where value = ''
}",310,3,"20210202173415","20210202173606","SLIMP_I","SLIMP_I"
"CONVERT_GS1_REACOD","SL_IFD_FLD","MOCA","Convert GS1 reason code to WM reason code","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@moca_verb = 'change' or @moca_verb = 'delete')
{ 
   sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
   |
   if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
   {
        convert gs1 code to wm code 
          where polval  = 'ORD-CHG-REACOD'
            and gs1Code = :I_C_IFD_FLD_DATA
            and wh_id   = :I_C_WH_ID
    }
    else
    {
        publish data where res = ''
    }
}
else
{
    publish data where res = ''
}",523,1,"20210202173204","","SLIMP_I",""
"CONVERT_LENGTH_TO_FOOT_IN_GS1","SL_IFD_FLD","MOCA","Convert trailer size into foot in the GS1","F","F","F","F","F","F","T","if (:I_C_IFD_FLD_DATA != '' and :I_C_IFD_FLD_DATA > 0)
{
    convert unit from wm to gs1
      where source_type = 'length' 
        and value = :I_C_IFD_FLD_DATA  
        and dest_code = :i_c_measurement_unit_code
    |       
    publish data where value = @value
}
else 
{
    publish data where value = ''
}",312,1,"20210202173415","","SLIMP_I",""
"CONVERT_LENGTH_TO_GS1","SL_IFD_FLD","MOCA","Convert Length Attribute from WM Standard to GS1 Standard","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (:I_C_IFD_FLD_DATA != '' and :I_C_IFD_FLD_DATA > 0)
{
    convert unit from wm to gs1
      where source_type = 'length' 
        and value = :I_C_IFD_FLD_DATA  
        and dest_code = :i_c_measurementunitcode
    |       
    publish data where value = @value
}
else 
{
    publish data where value = ''
}",352,1,"20210202173416","","SLIMP_I",""
"CONVERT_TOT_VOLUME_TO_GS1","SL_IFD_FLD","MOCA","Takes Total volume and UOM and returns a volume value in the GS1 UOM","F","F","F","F","F","F","T","sl_get data_attr
 where src_sys_id = :i_c_dest_sys_id
   and value = :i_c_tot_pln_vol
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F' and :i_c_tot_pln_vol > 0)
{
    convert unit from wm to gs1 
      where source_type='volume' 
         and value = :i_c_tot_pln_vol 
         and dest_code = :i_c_measurementunitcode
}
else {    
    publish data where value = '0.0'
}",383,1,"20210202173416","","SLIMP_I",""
"CONVERT_VOLUME_TO_GS1","SL_IFD_FLD","MOCA","Takes volume and UOM and returns a volume value in the GS1 UOM","F","F","F","F","F","F","T","sl_get data_attr
 where src_sys_id = :i_c_dest_sys_id
   and value = :i_c_tot_pln_cube
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F' and :i_c_tot_pln_cube > 0)
{
    convert unit from wm to gs1
      where source_type='volume'
        and value = :i_c_tot_pln_cube
        and dest_code = :i_c_qualifiercodename
}
else {
    publish data where value = '0.0'
}",375,5,"20210202173359","20210202173557","SLIMP_I","SLIMP_I"
"CONVERT_WEIGHT_TO_GS1","SL_IFD_FLD","MOCA","Takes weight and UOM and returns a weight value in the GS1 UOM","F","F","F","F","F","F","T","sl_get data_attr
 where src_sys_id = :i_c_dest_sys_id
   and value = :i_c_TOT_PLN_WGT
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F' and :i_c_TOT_PLN_WGT > 0)
{
    convert unit from wm to gs1 
      where source_type='weight' 
        and value = :i_c_TOT_PLN_WGT 
        and dest_code = :i_c_measurementunitcode
}
else {
    publish data where value= '0.0'
}
",377,5,"20210202173359","20210202173557","SLIMP_I","SLIMP_I"
"DEFAULT_PARTFOOT_RM","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to list  the default Item footprints.","F","F","F","F","F","F","T","list part footprints where prtnum = :i_c_prtnum
and prt_client_id = :i_c_prt_client_id
and wh_id = :i_c_wh_id
and defftp_flg = 1",128,1,"20210202172853","","SLIMP_I",""
"DELETE_INBOUND_SHIPMENT","SL_IFD_SEG_PROC","MOCA","Process the shipment segment for an inbound shipment","F","F","F","F","F","T","T","process inbound shipment delete",31,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"DISPATCH TRAILER","SL_IFD_SEG_PROC","MOCA","Dispatch Shipment Trailer","T","T","F","T","F","T","T","release billing shipments",25,1,"20210202172853","","SLIMP_I",""
"DMP_SCARD_LOG_SEND_EVT","SL_IFD_SEG_PROC","MOCA","Log the DCS event to send the Fact Data to SCARD","F","F","F","F","F","F","T","sl_log async_event where evt_id = :i_c_send_evt_id and cube_name = :i_c_cube_name and wh_id = :i_c_wh_id and request_dt = :i_c_request_dt and last_request_flg = :i_n_last_request_flg and sys_id = :i_c_dest_sys_id",212,1,"20210202172853","","SLIMP_I",""
"DUMMY_BLOCKING_ALGORITHM","SL_IFD_SEG_BLOCK","MOCA","Dummy Blocking Algorithm","F","T","F","F","F","F","T","[select 'T' from dual]",22,1,"20210202172853","","SLIMP_I",""
"DUTY_PRC_ORD_CONF","SL_IFD_SEG_PROC","MOCA","Process Order Confirmation","F","F","F","F","T","T","T","remove hold from duty order",27,1,"20210202172853","","SLIMP_I",""
"DUTY_PRC_RCV_CONF","SL_IFD_SEG_PROC","MOCA","Process Receipt Confirmation","F","F","F","F","T","T","T","remove hold from duty inventory",31,1,"20210202172853","","SLIMP_I",""
"DUTY_PRC_STAMP","SL_IFD_SEG_PROC","MOCA","Process Stamp based on the transaction using change inventory attribute","F","F","F","F","T","T","T","process duty stamp application",30,1,"20210202172853","","SLIMP_I",""
"DUTY-ADJ-DSP-RM-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm gets the order type information based on the reason code and the address information based on the policy DUTY/STK-ADJ/ADR_ID","F","F","F","F","F","F","T","list adjusted inventory dispatch where lodnum = :i_c_lodnum and reacod = :i_c_reacod and cstms_cnsgnmnt_id =:i_c_cstms_cnsgnmnt_id and wh_id=:i_c_wh_id",151,1,"20210202172853","","SLIMP_I",""
"DUTY-ADJ-DTL-RM-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm gets the information for the reciept or adjustment","F","F","F","F","F","F","T","list adjustment detail for duty rm where cstms_cnsgnmnt_id =:i_c_cstms_cnsgnmnt_id and wh_id=:i_c_wh_id",103,1,"20210202172853","","SLIMP_I",""
"DUTY-ADR-RM-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm get the additional address attributes to be sent to Duty Management","F","F","F","F","F","F","T","list addresses for duty rm where adr_id =:i_c_adr_id",52,1,"20210202172853","","SLIMP_I",""
"DUTY-INV-CHG-RM-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm gets the order type information based on the reason code and the address information based on the policy DUTY/STK-ADJ/ADR_ID","F","F","F","F","F","F","T","list changed inventory attribute where lodnum = :i_c_lodnum",59,1,"20210202172853","","SLIMP_I",""
"DUTY-ORD-DSP-RM-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm get all the attributes for the shipment lines matching shipment line, shipment, stop, carrier move or trailer","F","F","F","F","F","F","T","list shipped inventory dispatch where ship_line_id =:i_c_ship_line_id and ship_id =:i_c_ship_id and trlr_id=:i_c_trlr_id",120,1,"20210202172853","","SLIMP_I",""
"DUTY-PART-OUB-EO-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm retrieves the attributes for the item to send to Duty Management","F","F","F","F","F","F","T","list parts for duty rm where prt_client_id =:i_c_prt_client_id and prtnum =:i_c_prtnum and wh_id = :i_c_wh_id",109,1,"20210202172853","","SLIMP_I",""
"DUTY-RCV-DTL-RM-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm gets the information for the reciept or adjustment","F","F","F","F","F","F","T","list receipt detail for duty rm where cstms_cnsgnmnt_id =:i_c_cstms_cnsgnmnt_id and wh_id=:i_c_wh_id",100,1,"20210202172853","","SLIMP_I",""
"DUTY-RCV-HDR-RM-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm gets the information for the reciept or adjustment","F","F","F","F","F","F","T","list receipt header for duty rm where cstms_cnsgnmnt_id =:i_c_cstms_cnsgnmnt_id and wh_id=:i_c_wh_id",100,1,"20210202172853","","SLIMP_I",""
"DUTY-STOCK-REC-RM-ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm will get all of the inventory that is currently under bond summarized by the rotation.","F","F","F","F","F","F","T","list stock reconciliation for duty rm",37,1,"20210202172853","","SLIMP_I",""
"FORMAT_EXPIRE_DTE","RECEIVING","MOCA","To format the expiration date to the custom format before sending it to the host system.
","F","F","F","F","F","F","T","/* Get the control properties from les_var_config for expiration date field for the maximum customization level set */
{
    if(:i_c_expire_dte != '')
    {
        get les variable configuration
            where var_nam  = 'expire_dte'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            format date
                where date = :i_c_expire_dte
                  and fmt_str = @EXPIRE_DTE_FMT
            |
            publish data
                where EXPIRE_DTE_FMTVAL = @date
                  and EXPIRE_DTE_FMT = @ctrl_prop
        }
        else
        {
            publish data
                where expire_dte_fmtval = ''
                   and expire_dte_fmt = ''
        }
    }
    else
    {
        publish data
            where expire_dte_fmtval = ''
              and expire_dte_fmt = ''
    }
}",1034,9,"20210202172853","","SLIMP_I",""
"FORMAT_MANDTE","RECEIVING","MOCA","To format the manufacture date to the custom format before sending it to the host system.
","F","F","F","F","F","F","T","/* Get the control properties from les_var_config for manufacture date field for the maximum customization level set */
{
    if(:i_c_mandte != '')
    {
        get les variable configuration
            where var_nam  = 'mandte'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            format date
                where date = :i_c_mandte
                  and fmt_str = @MANDTE_FMT
            |
            publish data
                where MANDTE_FMTVAL = @date
                  and MANDTE_FMT = @ctrl_prop
        }
        else
        {
            publish data
                where mandte_fmtval = ''
                   and mandte_fmt = ''
        }
    }
    else
    {
        publish data
            where mandte_fmtval = ''
              and mandte_fmt = ''
    }
}",995,9,"20210202172853","","SLIMP_I",""
"GEN_FILENAME","SL_COMM","MOCA","creates a file name from IFD_DATA_SEQ","F","F","F","F","F","F","F","sl_gen filename where use_current = :I_C_USE_CURRENT and pre_filename = :I_C_PRE_FILENAME and post_filename = :I_C_POST_FILENAME and alg_id_cd = :I_N_ALG_ID_CD",159,1,"20210202171438","","SLIMP_I",""
"GEN_GET_HOST_LOC","SL_IFD_FLD","MOCA","Get SAP host location from WMS status","F","F","F","F","F","F","T","sl_es_sap_get hst_loc where wms_stk_sts = :i_c_ifd_fld_data",59,13,"20210202172854","","SLIMP_I",""
"GEN_GET_HOST_STATUS","SL_IFD_FLD","MOCA","Get Host Status","F","F","F","F","F","F","T","sl_es_sap_get stk_sts where wms_stk_sts = :i_c_ifd_fld_data
|
if (@hst_stk_sts = '')
  publish data where hst_stk_sts = :i_c_ifd_fld_data
else
  publish data where hst_stk_sts = @hst_stk_sts
",191,17,"20210202172854","","SLIMP_I",""
"GEN_GET_INVSTS","SL_IFD_FLD","MOCA","Get WMS Inventory Status given a Host Location and/or Host Status","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
| /*get invsts mapping */
sl_get data_attr where src_sys_id = @evt_sys_id and value = @ifd_fld_data
|
/*if no mapping for inventory status made we will determine one based on hststs and hstloc*/ if ( @is_absent = 'T' or @is_ = 'T' or @is_nochg = 'T' )
{
   sl_get data_attr where src_sys_id = @evt_sys_id and value = @hststs
   |
   if ( @is_absent = 'T' or @is_ = 'T' or @is_nochg = 'T' )
      publish data where p_hststs = 
   else      publish data where p_hststs = @hststs
   |
   sl_get data_attr where src_sys_id = @evt_sys_id and value = @hstloc
   |
   if ( @is_absent = 'T' or @is_ = 'T' or @is_nochg = 'T' )
      publish data where p_hstloc = 
   else
      publish data where p_hstloc = @hstloc
   |
   [
   select decode(@p_hststs, , nvl(min(to_char(s.sl_sys_parm_val)),'R'),@p_hststs ) sp_hststs,                 decode(@p_hstloc, , nvl(min(to_char(l.sl_sys_parm_val)),'WMS'),@p_hstloc ) sp_hstloc,
       nvl(min(to_char(i.sl_sys_parm_val)),'R') sp_invsts
   from   sl_sys_parm l, sl_sys_parm s, sl_sys_parm i
   where
        s.sl_sys_parm_id = 'GEN_HOST_STATUS'
   and    l.sl_sys_parm_id = 'GEN_HOST_LOCATION'
   and    i.sl_sys_parm_id = 'GEN_INV_STATUS'
   ]
   |
   sl_es_sap_get wms_inv_sts where hst_loc = @sp_hstloc and hst_stk_sts = @sp_hststs
   |
   if (@wms_stk_sts = '')
       publish data where wms_stk_sts = @sp_invsts
   else
      publish data where wms_stk_sts = @wms_stk_sts
}
/* otherwise use the direct invsts mapping ... no derivation required */
else
{
   publish data where wms_stk_sts = @ifd_fld_data
}
",1614,1,"20210202172854","","SLIMP_I",""
"GEN_GET_SHIP_LINSTS_REACOD","SL_IFD_FLD","MOCA","Return a logical description of the changed shipment line status - for Lens.","F","F","F","F","F","F","T","if (:i_c_linsts = 'P')
{
    publish data where reacod = 'PEND ALLOC'
}
else if (:i_c_linsts = 'I')
{
    publish data where reacod = 'ALLOCATED'
}
else if (:i_c_linsts = 'C')
{
    publish data where reacod = 'COMPLETE'
}
else if (:i_c_linsts = 'B')
{
    publish data where reacod = 'CANCELLED'
}
else if (:i_c_linsts = 'R')
{
    publish data where reacod = 'REPLEN REQ'
}
else if (:i_c_linsts = 'E')
{
    publish data where reacod = 'ALLOC ERR'
}",451,1,"20210202172854","","SLIMP_I",""
"GEN_GET_SHIPMENT_WEIGHT","SL_IFD_FLD","MOCA","Get Weight For Shipment","F","F","F","F","F","F","T","[
SELECT ltrim(to_char(sum(d.untqty*nvl(p.grswgt/p.untcas,0)))) grswgt
FROM    prtmst p,
        invdtl d,
        shipment_line sl,
    shipment s
WHERE   d.prt_client_id = p.prt_client_id
AND     d.prtnum = p.prtnum
AND     sl.ship_line_id = d.ship_line_id
AND sl.ship_id = s.ship_id
AND     s.host_ext_id = :i_c_delivery_id
]
/*
[select 1.0 grswgt from dual]
*/",364,1,"20210202172854","","SLIMP_I",""
"GEN_IFD_HDR_FILENAME","SL_COMM","PLSQL","creates a file name from IFD_DATA_SEQ","F","F","F","F","F","F","F","begin :o_c_filename := 'data_' || :I_N_IFD_DATA_SEQ || '_' || :I_N_IFD_DATA_BLK_NDX || :I_C_FILE_EXT; end;",106,1,"20210202171438","","SLIMP_I",""
"GEN_SEQ_INVLIN_NUM","SL_IFD_FLD","MOCA","Generates a sequential invoice line number if it is not passed","F","F","F","F","F","F","T","if (:i_c_invlin = '' or :i_c_invlin = :i_c_sys_absent_ind_char or :i_c_invlin = :i_c_sys__ind_char)
{
    get session variable where name = 'INVLIN_NUM' catch(-1403, 510)
    |
    publish data where invlin = to_number(@value) + 1
    |
    save session variable where name = 'INVLIN_NUM' and value = @invlin
    |
    publish data where res = to_char(@invlin, '0000000009')
}
else
{
    publish data where invlin = :i_c_invlin
    |
    save session variable where name = 'INVLIN_NUM' and value = @invlin
    |
    publish data where res = to_char(:i_c_invlin)
}",567,1,"20210202172854","","SLIMP_I",""
"GEN_SEQ_ORDLIN_NUM_FOR_RPS","SL_IFD_FLD","MOCA","Generates a sequential invoice line number","F","F","F","F","F","F","T","get session variable where name = 'ORDLIN_NUM' catch(-1403, 510)
|
publish data where ordlin = to_number(@value) + 1
|
save session variable where name = 'ORDLIN_NUM' and value = @ordlin
|
publish data where res = to_char(@ordlin, '0000000009')",244,1,"20210202172854","","SLIMP_I",""
"GEN_STOP_ID_IF_NULL","SL_IFD_FLD","MOCA","Generates a new Stop ID if one is not passed in.","F","F","F","F","F","F","F","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:I_C_IFD_FLD_DATA), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:I_C_IFD_FLD_DATA), @absent_ind_char) abs_char
   from dual]
|
if (:I_C_IFD_FLD_DATA = '' or
    :I_C_IFD_FLD_DATA = @abs_char or
    :I_C_IFD_FLD_DATA = @nochg_char)
{
    generate next number
        where numcod = 'stop_id'
    |
    publish data
      where stop_id = @nxtnum
}
else
{
    publish data
        where stop_id = :I_C_IFD_FLD_DATA
}",527,1,"20210202172854","","SLIMP_I",""
"GEN_UUID","SL_IFD_FLD","MOCA","Generates a type 4 universally unique identifier","F","F","F","F","F","F","T","generate uuid",13,11,"20210202173359","20210202173606","SLIMP_I","SLIMP_I"
"GET_ADDRESS_HOST_EXTERNAL_ID","SL_IFD_FLD","MOCA","Ensures the host external ID is present when including address segments during an outbound order download.","F","F","F","F","F","T","T","
if (:i_c_host_ext_id is  or :i_c_host_ext_id = :i_c_sys_absent_ind_char or :i_c_host_ext_id = :i_c_sys_nochg_ind_char or :i_c_host_ext_id = :i_c_sys__ind_char)
{
    publish data where <<OVERSTACKED_ARGS>>
    |
    get inbound full validation flag where @+wh_id^whse_id and @+client_id
    |
    if (@inb_full_vld_flg)
    {
        log full validation error message
            where err_code = 2005
                and def_err_msg = @!
                and argid = 'host_ext_id'
                and lookup_argdsc = 'host_ext_id'
    }
    else
    {
        set return status
            where status = 2005  /* eAPP_MISSING_ARG */
            and errnum = '2005'
            and lookup_argdsc = 'host_ext_id'
            and argid = 'host_ext_id'
    }
}
|
publish data
    where host_ext_id = :i_c_host_ext_id",822,5,"20210202172854","","SLIMP_I",""
"GET_ADR_ID_FOR_HOST_ADR","SL_IFD_FLD","MOCA","Get the Address ID for the host","F","F","F","F","F","F","T","{
    [select adr_id
       from adrmst
      where host_ext_id = :i_c_host_ext_id
        and client_id = :i_c_client_id]
}",124,1,"20210202172854","","SLIMP_I",""
"GET_ADR_ID_FOR_HOST_EXT","SL_IFD_FLD","MOCA","Get the Address ID for the host external address on the stop","T","T","F","F","F","F","T","{
    [select adr_id
       from adrmst
      where host_ext_id = :i_c_host_adr_id
        and client_id = :i_c_client_id]
}",124,1,"20210202172854","","SLIMP_I",""
"GET_ASSET_DETAILS_FOR_SHIPMENT","SL_RETR_MTHD_IMPL","MOCA","Handling Unit details for a shipment","F","F","F","F","F","F","T","list asset details for shipment rm where ship_id = :i_c_ship_id",63,6,"20210202172854","20210202173415","SLIMP_I","SLIMP_I"
"GET_ASSET_TYP_FOR_LPN","SL_IFD_FLD","MOCA","To get the Handling Unit typ for the given LPN","F","F","F","F","F","F","T","{
    if(:i_c_lpn)
    {
        /* If the passed in LPN is a dtlnum, then join on invsub, invlod to get the handling unit type.
         * We will always get asset_typ from invsub first. If its , then get from invlod.
         * If this query fails, then assume the LPN is subnum and get handling unit typ for the given subnum
         */
        [select nvl(invsub.asset_typ, invlod.asset_typ) asset_typ
           from invlod,
                invsub,
                invdtl
          where invlod.lodnum = invsub.lodnum
            and invsub.subnum = invdtl.subnum
            and invdtl.dtlnum = :i_c_lpn
            and rownum < 2] catch(-1403)
        |
        if(@? != 0)
        {
            [select nvl(invsub.asset_typ, invlod.asset_typ) asset_typ
               from invlod,
                    invsub
              where invlod.lodnum = invsub.lodnum
                and invsub.subnum = :i_c_lpn] catch(-1403)
            |
            if(@? != 0)
            {
                 publish data where platform = ''
            }
            else
            {
                 publish data where platform = @asset_typ
            }
        }
        else
        {
             publish data where platform = @asset_typ
        }
    }
    else
        publish data where platform = ''
}",1302,9,"20210202172854","","SLIMP_I",""
"GET_BOM_DEF_SERV_ID","SL_IFD_FLD","MOCA","Get the default service id which has been assigned to the bom.","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select min(def_serv_id) def_serv_id /* :o_c_def_serv_id */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = @wh_id
  and bomnum = :i_c_bomnum
  and client_id = :i_c_client_id
  and def_serv_cod = 'BOM']
}",285,1,"20210202172854","","SLIMP_I",""
"GET_BOM_DEF_SERV_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the BOM default service whether it be create or change","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = @wh_id
  and bomnum = :i_c_bomnum
  and client_id = :i_c_client_id
  and def_serv_cod = 'BOM']
}",307,1,"20210202172854","","SLIMP_I",""
"GET_BOM_DTL_DEF_SERV_ID","SL_IFD_FLD","MOCA","Get the default service id which has been assigned to the bom detail.","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select min(def_serv_id) def_serv_id /* :o_c_def_serv_id */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = @wh_id
  and bomnum = :i_c_bomnum
  and client_id = :i_c_client_id
  and bomlin = :i_c_bomlin
  and def_serv_cod = 'BOMDTL']
}",315,1,"20210202172854","","SLIMP_I",""
"GET_BOM_DTL_DEF_SERV_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the BOM detail default service whether it be create or change","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = @wh_id
  and bomnum = :i_c_bomnum
  and client_id = :i_c_client_id
  and bomlin = :i_c_bomlin
  and def_serv_cod = 'BOMDTL']
}",337,1,"20210202172854","","SLIMP_I",""
"GET_BOM_DTL_PRCS_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the BOM detail process whether it be create or change","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from bomdtl_prc
where wko_typ = :i_c_wko_typ and bomlin = :i_c_bomlin
  and wh_id = @wh_id
  and bomnum = :i_c_bomnum
  and client_id = :i_c_client_id]
}",307,1,"20210202172854","","SLIMP_I",""
"GET_BOM_PRCS_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the BOM Process whether it be create or change","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from bomhdr_prc
where wko_typ = :i_c_wko_typ
  and wh_id = @wh_id
  and bomnum = :i_c_bomnum
  and client_id = :i_c_client_id
 ]
}",284,1,"20210202172854","","SLIMP_I",""
"GET_BOOL_FROM_DATA","SL_IFD_FLD","MOCA","Compares event argument to alternate constant value in order to translate the value to a Boolean True or False","F","F","F","F","F","F","T","[select decode(:I_C_IFD_FLD_DATA, :I_C_IFD_FLD_MISC_DATA, 'T', 'F') from dual]",78,1,"20210202172854","","SLIMP_I",""
"GET_BT_HOST_ADR_ID","SL_IFD_FLD","MOCA","Get the Host External ID for the Bill To address on the order.","T","T","F","F","F","F","T","{
    [select host_ext_id
       from adrmst
      where adr_id = :i_c_bt_adr_id
        and client_id = :i_c_client_id]
}",122,1,"20210202172854","","SLIMP_I",""
"GET_BUILDING_HOST_EXT_ID","SL_IFD_FLD","MOCA","Get the Host External ID for the Building's address id. If there is no "dispatched_yard_loc", then get the default wh adr_id.","T","T","F","F","F","F","T","{
    [select adr.host_ext_id
       from adrmst adr,
            bldg_mst bldg,
            aremst am,
            locmst lm
      where lm.arecod = am.arecod
        and am.bldg_id = bldg.bldg_id
        and bldg.adr_id = adr.adr_id
        and lm.stoloc = :i_c_dispatched_yard_loc]catch (-1403)
    |
    if (@? != 0)
    {
        [select adr.host_ext_id
           from wh,
                adrmst adr
          where adr.adr_id = wh.adr_id
            and wh.def_wh_flg = '1']
    }
    else
    {
        publish data where o_value = @host_ext_id
    }
}",560,1,"20210202172854","","SLIMP_I",""
"GET_CAN_SPLIT_SHIPMENT_HDR","SL_RETR_MTHD_IMPL","MOCA","List all shipment information which are required to populate the values for WOI header section.","F","F","F","F","F","F","F","/**
   * Fetch all the shipment information required to log the event
   */				
[select distinct shipment_line.client_id client_id,
           shipment.carcod
  from shipment,
          shipment_line
where shipment.ship_id = shipment_line.ship_id
   and shipment.ship_id = :i_c_parent_ship_id] catch(-1403)
|
if(@? = -1403)
{
      /**
       * Fetch the shipment information in case of full shipment split
       */
     [select distinct shipment_line.client_id client_id,
               shipment.carcod
      from shipment,
              shipment_line
    where shipment.ship_id = shipment_line.ship_id
       and shipment.ship_id = :i_c_split_ship_id] catch(-1403)
}
 /**
   * For shipment last line delete shipment line data are alreday deleted.
   * Need to fetch carcod from shipment table without joining with
   * shipment line table.   
   */
|
if (@carcod is  or @carcod = '')
{
    [select carcod 
      from shipment
      where ship_id in (:i_c_split_ship_id , :i_c_parent_ship_id)] catch(-1403)
   |
   publish data 
    where  carcod = @carcod
}
|
publish data 
    where client_id = @client_id 
       and carcod = @carcod",1142,1,"20210202173557","","SLIMP_I",""
"GET_CANONICAL_CARMOV_RECEIVERS","SL_RETR_MTHD_IMPL","MOCA","Get Receivers for the despatch advice event triggered from shipment waved.","F","F","F","F","F","F","F","if (:i_c_car_move_id)
{
    [select distinct 'LOC.' || ord.rtcust as destination
               from car_move,
                    shipment,
                    stop,
                    adrmst,
                    shipment_line,
                    ord
              where shipment_line.ordnum = ord.ordnum
                and shipment.ship_id = shipment_line.ship_id
                and shipment.rt_adr_id = adrmst.adr_id
                and shipment.stop_id = stop.stop_id
                and stop.car_move_id = car_move.car_move_id
				and car_move.car_move_id = :i_c_car_move_id
				and ord.wh_id = car_move.wh_id
				and ord.wh_id = shipment_line.wh_id
				and ord.wh_id = :i_c_wh_id] catch(-1403)
}",705,1,"20210202173415","","SLIMP_I",""
"GET_CANONICAL_CLIENT","SL_GENERAL","MOCA","To get the client_id if it is a 3PL system, otherwise return the default canonical client id.","F","F","F","F","F","F","T","{
    if (:i_c_host_client_id = :i_c_sys_absent_ind_char or :i_c_host_client_id = '' or :i_c_host_client_id = '----')
    {
        /*By any means if default canonical client is not present then client id will be populated from order''s client id*/
        if (:i_c_dflt_canonical_client = :i_c_sys_absent_ind_char or :i_c_dflt_canonical_client = '')
        {
            [select distinct client_id
                from ord
              where ordnum = :i_c_ordernum
                 and wh_id = :i_c_wh_id] catch(-1403) >> res
            |
            if (@? = 0 and rowcount(@res) > 0)
            {
                publish top rows
                    where resultset = @res
                       and rows = 1
            } 
        }
        else
        {
             publish data
                 where host_client_id = :i_c_dflt_canonical_client
        }
    }
    else
    { 
         publish data where host_client_id = :i_c_host_client_id
    }
}",961,2,"20210202173158","20210202173415","SLIMP_I","SLIMP_I"
"GET_CAR_MOVE_ID_SEQ","SL_IFD_FLD","MOCA","Get the next carrier move sequence number","F","F","F","F","F","F","T","if (':i_c_moca_verb' = 'create') {     generate next number        where numcod = 'car_move_id'     |     publish data       where car_move_id = @nxtnum } else {     [ select car_move_id         from car_move        where tms_load_id = :i_c_loadid ] }",251,1,"20210202172854","","SLIMP_I",""
"GET_CAR_MOVE_MOCA_VERB","SL_IFD_FLD","MOCA","Get the moca_verb for a carrier move transaction","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str {     [ select decode(min('x'), , 'create', 'change') moca_verb         from car_move        where tms_load_id = :i_c_loadid ] } |  save session variable where name = 'moca_verb_car_move'   and value = @moca_verb | publish data   where moca_verb = @moca_verb",286,1,"20210202172854","","SLIMP_I",""
"GET_CAR_MOVE_NOTE_SEG","SL_RETR_MTHD_IMPL","MOCA","Get TM Carrier Move Note Actuals","F","F","F","F","F","F","","list tms carrier move note actuals rm where car_move_id = :i_c_car_move_id",74,1,"20210202172854","","SLIMP_I",""
"GET_CAR_MOVE_NOTE_STATUS","SL_RETR_MTHD_IMPL","MOCA","Get TM Carrier Move Note Status","F","F","F","F","F","F","","list tms carrier move note status rm where car_move_id = :i_c_car_move_id",73,1,"20210202172854","","SLIMP_I",""
"GET_CAR_MOVE_SEG","SL_RETR_MTHD_IMPL","MOCA","Get TM Carrier Move Actuals","F","F","F","F","F","F","","list tms carrier move actuals rm where trlr_id = :i_c_trlr_id",61,1,"20210202172854","","SLIMP_I",""
"GET_CAR_MOVE_STATUS","SL_RETR_MTHD_IMPL","MOCA","Get TM Carrier Move Status","F","F","F","F","F","F","F","list tms carrier move status rm where ship_id = :i_c_ship_id",60,1,"20210202172854","","SLIMP_I",""
"GET_CARRIER_MOVE_NOTE_VERB","SL_IFD_FLD","MOCA","Get Carrier Move Note MOCA Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str { [select decode(min('x'), , 'create', 'change') moca_verb /*:o_c_moca_verb */    from car_move_note   where car_move_id = :i_c_car_move_id ] }",171,1,"20210202172854","","SLIMP_I",""
"GET_COMMODITY_VERB","SL_IFD_FLD","MOCA","Get Commodity Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min(comcod),
               , 'create',
               'change') moca_verb /* :o_c_moca_verb */
   from commst
  where comcod = :i_c_comcod ]
}",188,1,"20210202172854","","SLIMP_I",""
"GET_CONNECT_ERROR_CODE","SL_IFD_FLD","MOCA","Get Connect Error Code","F","F","F","F","F","F","F","/**
   * If download status code is 'EDONE' then check for event status code.
   * If any error present get the description and publish the data otherwise publish the error code
   */
if (:i_c_dwnld_stat_cd = 'EDONE')
{
    if (:i_c_evt_stat_cd = 'IE' or :i_c_evt_stat_cd = 'IN' or :i_c_evt_stat_cd = 'EN' or :i_c_evt_stat_cd = 'EE' or :i_c_evt_stat_cd = 'EB')
    {
            publish data 
             where res = :i_c_evt_stat_cd
    } 
    else
    {
        publish data 
              where res = ''
    }
}
else
{
   publish data 
         where res = :i_c_dwnld_stat_cd

}",582,1,"20210202173615","","SLIMP_I",""
"GET_CRNCY_CODE","SL_IFD_FLD","MOCA","Get the Currency Code.","F","F","F","F","F","F","T","publish data
 where crncy_code = :i_c_crncy_code
|
if (@crncy_code = '' or @crncy_code = :i_c_sys_absent_ind_char or @crncy_code = :i_c_sys_nochg_ind_char or @crncy_code = :i_c_sys__ind_char)
{
    list policies
      where polcod = 'HOST-CURRENCY'
        and polvar = :i_c_evt_sys_id
        and polval = 'CURRENCY' catch(-1403)
     |
     if (@? = -1403)
     {
         list policies
          where polcod = 'HOST-CURRENCY'
            and polvar = 'DEFAULT'
            and polval = 'CURRENCY' catch(-1403)
     }
}
|
/*
If a proper currency code was passed, then it would have directly passed to the validate command. Otherwise, the currency code would have come from the policy. So giving the priority to policy and so checking  on it.
*/
if (@crncy_code = '' or @crncy_code = :i_c_sys_absent_ind_char or @crncy_code = :i_c_sys_nochg_ind_char or @crncy_code = :i_c_sys__ind_char)
{
publish data
 where crncy_code = nvl (@rtstr1, @crncy_code)
}
else
{
    publish data
 where crncy_code = @crncy_code
}",1022,13,"20210202172854","","SLIMP_I",""
"GET_CST_SUP_NUM","SL_IFD_FLD","MOCA","Get customer or supplier number(if customer number has value, just use it)","F","F","F","F","F","F","F","
if(:i_c_cstnum)
{
    publish data where cstnum = :i_c_cstnum
}
else
{
    publish data where supnum = :i_c_supnum
}",117,1,"20210202172854","","SLIMP_I",""
"GET_CUST_TYPE_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Customer Type","F","T","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from csttyp_pfl
where
csttyp = :i_c_csttyp]
}",153,1,"20210202172854","","SLIMP_I",""
"GET_DATETIME_FROM_OPTTIMESTAMP","SL_IFD_FLD","MOCA","Takes in a timestamp and returns a datetime object in the warehouse timezone","F","F","F","F","F","F","T","sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ != 'T' and @is_absent != 'T')
{
    get datetime from gs1 date and time where date = :I_C_IFD_FLD_DATA and time = '00:00:00'
}
else
{
    publish data where res = ''
}",265,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"GET_DCS V5.0_CARCOD_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Carrier Header","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str  { [ select       decode(min(carcod), , 'create', 'change' ) moca_verb /* :o_c_moca_verb */ from   carhdr  where    carcod = :i_c_carcod ] }",168,1,"20210202172854","","SLIMP_I",""
"GET_DCS V5.0_ORDNOTE_VERB","SL_IFD_FLD","MOCA","Get Order Header Note MOCA Verb","F","F","F","F","F","F","T","
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb  from ord_note   where    ordnum = :i_c_ordnum and   ((notlin = lpad(:i_c_notlin,4,'0')) or (notlin = :i_c_notlin)) and   client_id = :i_c_client_id and wh_id = :i_c_whse_id ]
}",265,5,"20210202172854","","SLIMP_I",""
"GET_DCS V5.0_SRVLVL_VERB","SL_IFD_FLD","MOCA","Get Carrier Service Level MOCA Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str  { [ select       decode(min(srvlvl), , 'create', 'change' ) moca_verb /* :o_c_moca_verb */ from   cardtl  where       carcod = :i_c_carcod  and  srvlvl = :i_c_srvlvl ] }",198,1,"20210202172854","","SLIMP_I",""
"GET_DCS_COMCOD_DESC_VERB","SL_IFD_FLD","MOCA","Gets the MOCA verb for Commodity code description.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
 from :i_c_moca_nq_tablename
 where colnam = 'comcod'
   and colval = :i_c_comcod
   and locale_id = :i_c_locale_id
]
}
",228,1,"20210202172854","","SLIMP_I",""
"GET_DCS_CUST_ACCT_MOCA_VERB","SL_IFD_FLD","MOCA","Get moca verb for customer bill-to-account","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from cst_billto_acct
where
client_id = :i_c_client_id
and cstnum = :i_c_cstnum
and carcod = :i_c_carcod]
}",214,5,"20210202172854","","SLIMP_I",""
"GET_DCS_CUST_RPKCLS_MOCA_VERB","SL_IFD_FLD","MOCA","Get moca verb for customer repack class","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from cstrpk
where
client_id = :i_c_client_id
and cstnum = :i_c_cstnum
and rpkcls = :i_c_rpkcls]
}",205,5,"20210202172854","","SLIMP_I",""
"GET_DCS_DEF_SERV_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the default service whether it be create or change","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id =
:i_c_whse_id
  and ordnum = :i_c_ordnum
  and client_id = :i_c_client_id
  and def_serv_cod = 'ORDNUM']
}",270,5,"20210202172854","","SLIMP_I",""
"GET_DCS_FACILITY_ADR_ID","SL_IFD_FLD","MOCA","Get Facility Address ID","F","F","F","F","F","F","T","[select
    pd.rtstr1
from
        poldat pd
where
    pd.polcod= 'SYSTEM-INFORMATION'
    and pd.polvar= 'MISCELLANEOUS'
    and pd.polval = 'FACILITY-ADDRESS-ID' ]
",166,1,"20210202172854","","SLIMP_I",""
"GET_DCS_PART_RPKCLS_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Item Repack Class","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from prtrpk
where
prtnum = :i_c_prtnum
and prt_client_id = :i_c_prt_client_id
and wh_id = :i_c_whse_id]
}",213,1,"20210202172854","","SLIMP_I",""
"GET_DCS_PRT_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the part whether it be create or change.","F","F","F","F","F","F","F","[select decode(min(prtnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from prtmst
where
prtnum = :i_c_prtnum
and wh_id_tmpl = :i_c_whse_id]",154,1,"20210202172854","","SLIMP_I",""
"GET_DCS_PRTFTP_DTL_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the Item footprint detail whether it be create or change.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
   from prtftp_dtl
 where ftpcod = :i_c_ftpcod
    and prtnum = :i_c_prtnum
    and prt_client_id = :i_c_prt_client_id
    and uomcod = :i_c_uomcod
    and wh_id = :i_c_whse_id]
}",287,1,"20210202172854","","SLIMP_I",""
"GET_DCS_PRTFTP_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the Item footprint whether it be create or change.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
   from prtftp
 where ftpcod = :i_c_ftpcod
    and prtnum = :i_c_prtnum
    and prt_client_id = :i_c_prt_client_id
    and wh_id = :i_c_whse_id]
}",254,1,"20210202172854","","SLIMP_I",""
"GET_DCS_SER_LVL_FOR_PART","SL_IFD_FLD","MOCA","Get the serialization level for the received Item.","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
[select ser_lvl
   from prtmst
  where prtnum = :i_c_prtnum
    and prt_client_id = :i_c_prt_client_id and wh_id_tmpl = :i_c_whse_id] catch (-1403)
|
if (@? != 0)
{
    get inbound full validation flag
    |
    if (@inb_full_vld_flg != 0)
   {
        log full validation error message
            where err_code = 2005
              and def_err_msg = @!
              and argid = "ser_lvl"
              and lookup_argdsc = "ser_lvl"
   }
   |
   publish data
       where ser_lvl = ''
}
else
{
    publish data
       where ser_lvl = @ser_lvl
}",589,5,"20210202172854","","SLIMP_I",""
"GET_DCS_SER_NUM_TYP_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the serial number type whether it be create or change.","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from ser_num_typ
where
ser_num_typ_id = :i_c_ser_num_typ_id]
}",170,5,"20210202172854","","SLIMP_I",""
"GET_DCS50_FTPMST_VERB","SL_IFD_FLD","MOCA","Get Footprint Master Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select
     decode(min(ftpcod), , 'create', 'change' ) moca_verb /* :o_c_moca_verb */
from
  ftpmst
where
  ftpcod = :i_c_ftpcod ]
}",163,1,"20210202172854","","SLIMP_I",""
"GET_DCS50_HOSTLOC_FROM_INVSTS","SL_IFD_FLD","MOCA","Get Host Location From Inventory Status","F","T","F","F","F","F","T","[select
    nvl(min(pd.rtstr1),'-') hststs
from
      poldat pd
where
    pd.polcod= 'HOST-TRANS'
    and pd.polvar= 'AREA-HOST-LOCATION'
    and pd.polval = 'RDTS_invsts_'||rtrim(:i_c_invsts) ]",194,1,"20210202172854","","SLIMP_I",""
"GET_DCS50_INVSTS_FROM_HOSTLOC","SL_IFD_FLD","MOCA","Get Inventory Status Based On Host Location","F","F","F","F","F","F","T","[select
    nvl(min(substr(pd.polval, 13,1)),:i_c_hststs) invsts
from
      poldat pd
where
    pd.polcod= 'HOST-TRANS'
    and pd.polvar= 'AREA-HOST-LOCATION'
    and pd.polval like 'RDTS_invsts_%'
    and pd.rtstr1 = :i_c_hststs   ]",234,1,"20210202172854","","SLIMP_I",""
"GET_DCS50_PO_DTL_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Invoice Line","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from rimlin
where
supnum = :i_c_supnum
and invnum = :i_c_invnum
and client_id = :i_c_client_id
and lpad(invlin,10,'0') = lpad(:i_c_invlin,10,'0')
and lpad(invsln,10,'0') = lpad(:i_c_invsln,10,'0')
and wh_id = @wh_id]
}",372,1,"20210202172854","","SLIMP_I",""
"GET_DCS50_PO_HDR_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Invoice Header","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from rimhdr
where
supnum = :i_c_supnum
and invnum = :i_c_invnum
and client_id = :i_c_client_id
and wh_id = @wh_id]
}",270,1,"20210202172854","","SLIMP_I",""
"GET_DCS50_PRTMST_VERB","SL_IFD_FLD","MOCA","Get Item Master Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select
   decode (:i_c_trntyp,
    'Y', 'remove',
        decode(min(prtnum), , 'create', 'change' ) )  moca_verb /* :o_c_moca_verb */
 from prtmst_view
 where prtnum = :i_c_prtnum
 and    prt_client_id = :i_c_prt_client_id
 and    wh_id = '----']
}",280,1,"20210202172854","","SLIMP_I",""
"GET_DCS50A_CSTMST_VERB","SL_IFD_FLD","MOCA","Get Customer Master Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(cstnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  cstmst
where
  cstnum = :i_c_cstnum and
  client_id = :i_c_client_id
]
}",196,5,"20210202172854","","SLIMP_I",""
"GET_DCS50A_ORD_VERB","SL_IFD_FLD","MOCA","Get Order Moca Verb","F","F","F","F","F","F","T","
:i_c_moca_nq_remote_str
{
[
select
     decode(min(ordnum), , 'create', 'change' ) moca_verb /* :o_c_moca_verb */
from
  ord
where
  ordnum = :i_c_ordnum and
  client_id = :i_c_client_id and
  wh_id = :i_c_whse_id
]
|
/*save the moca verb information for use in the post processing algorithm */
save session variable where name = 'moca_verb_order' and value = @moca_verb catch (@?)
|
publish data where moca_verb = @moca_verb
}",432,5,"20210202172854","","SLIMP_I",""
"GET_DCS50A_ORDLINE_VERB","SL_IFD_FLD","MOCA","Get DCS 5.0 Order Line MOCA Verb","F","F","F","F","F","F","T","
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from ord_line
where
  ordnum = :i_c_ordnum and
  ordsln = :i_c_ordsln and
  ordlin = :i_c_ordlin and
  client_id = :i_c_client_id and
  wh_id = :i_c_whse_id
]
}",269,5,"20210202172854","","SLIMP_I",""
"GET_DCS50A_ORDLINENOTE_VERB","SL_IFD_FLD","MOCA","Get DCS 5.0 Order Line Note MOCA Verb","F","F","F","F","F","F","T","
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from ord_line_note
where
  ordnum = :i_c_ordnum and
  ordsln = :i_c_ordsln and
  ordlin = :i_c_ordlin and
  ((notlin = lpad(:i_c_notlin,4,'0')) or (notlin = :i_c_notlin)) and
  client_id = :i_c_client_id and
  wh_id = :i_c_whse_id]
}",342,5,"20210202172854","","SLIMP_I",""
"GET_DCS50A_ORDNOTE_VERB","SL_IFD_FLD","MOCA","Get Order Header Note MOCA Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /*:o_c_moca_verb */
   from ord_note orn
  where
    ((orn.notlin = lpad(:i_c_notlin,4,'0')) or (orn.notlin = :i_c_notlin)) and
    orn.client_id = :i_c_client_id and
    orn.ordnum = :i_c_ordnum and
    orn.wh_id = :i_c_wh_id
]
}",317,1,"20210202172854","","SLIMP_I",""
"GET_DCS50A_SHIPMENT_LINE_VERB","SL_IFD_FLD","MOCA","Get Shipment Line Moca Verb","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[ select       decode(min(ship_line_id), , 'create', 'change' ) moca_verb  from   shipment_line where   ship_id = (select ship_id from shipment where            host_ext_id = :i_c_host_ship_id and         host_client_id = :i_c_client_id)   and ordlin = :i_c_ordlin   and ordsln = :i_c_ordsln and wh_id = @wh_id]
}",389,1,"20210202172854","","SLIMP_I",""
"GET_DCS50A_SHIPMENT_VERB","SL_IFD_FLD","MOCA","Get Order Moca Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(ship_id), , 'create', 'change' ) moca_verb
from
  shipment
where
  host_ext_id = :i_c_host_ship_id and
  host_client_id = :i_c_client_id
] | save session variable where name = 'moca_verb_shipment' and value = @moca_verb catch (@?)
| publish data where moca_verb = @moca_verb
}",331,1,"20210202172854","","SLIMP_I",""
"GET_DCS50A_SUPMST_VERB","SL_IFD_FLD","MOCA","Get Customer Master Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(supnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  supmst
where
  supnum = :i_c_supnum and
  client_id = :i_c_client_id
]
}",196,5,"20210202172854","","SLIMP_I",""
"GET_DCS51_ALT_PRTMST_VERB","SL_IFD_FLD","MOCA","Get Alternate Item Master Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from alt_prtmst
 where prtnum = :i_c_prtnum
   and prt_client_id = :i_c_prt_client_id
   and alt_prt_typ = :i_c_alt_prt_typ]
}",234,5,"20210202172854","","SLIMP_I",""
"GET_DCS51_BOM_DTL_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For BOM Line","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from bomdtl
where
bomnum = :i_c_bomnum
and client_id = :i_c_client_id
and bomlin = :i_c_bomlin
and wh_id = @wh_id]
}",270,1,"20210202172854","","SLIMP_I",""
"GET_DCS51_BOM_HDR_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For BOM Header","F","T","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from bomhdr
where
bomnum = :i_c_bomnum
and client_id = :i_c_client_id
and wh_id = @wh_id]
}",245,1,"20210202172854","","SLIMP_I",""
"GET_DCS51_DESCR","SL_IFD_FLD","MOCA","Get Description Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
 from :i_c_moca_nq_tablename
 where colnam = :i_c_colnam
   and colval = :i_c_prtnum || '|' || :i_c_prt_client_id || '|' || :i_c_whse_id
   and locale_id = :i_c_locale_id
]
}",282,1,"20210202172854","","SLIMP_I",""
"GET_DCS51_PART_DESC_VERB","SL_IFD_FLD","MOCA","Get Description Verb","F","F","F","F","F","F","T","
if( :i_c_whse_id = "")
{
     publish data where wh_id = '----'

}
else
{
     get warehouse id where wh_id = :i_c_whse_id
}

|
[select decode(min('x'), , 'create', 'change') moca_verb
   from prtdsc
where colnam = 'prtnum|prt_client_id|wh_id_tmpl'

and colval = :i_c_prtnum||'|'||:i_c_prt_client_id || '|' || @wh_id
and locale_id = :i_c_locale_id]",353,1,"20210202172854","","SLIMP_I",""
"GET_DCS51_WO_DTL_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Work Order Line","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from wkodtl
where
wkonum = :i_c_wkonum
and client_id = :i_c_client_id
and wkorev = :i_c_wkorev
and wkolin = :i_c_wkolin
and wh_id = @wh_id]
}",295,1,"20210202172854","","SLIMP_I",""
"GET_DCS51_WO_DTL_NOT_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Invoice Header","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from wkodtl_note
where
wkonum = :i_c_wkonum
and wkorev = :i_c_wkorev
and client_id = :i_c_client_id
and wkolin = :i_c_wkolin
and notlin = :i_c_notlin
and wh_id = @wh_id]
}",325,1,"20210202172854","","SLIMP_I",""
"GET_DCS51_WO_HD_NOT_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Invoice Header","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from wkohdr_note
where
wkonum = :i_c_wkonum
and wkorev = :i_c_wkorev
and client_id = :i_c_client_id
and notlin = :i_c_notlin
and wh_id = @wh_id]
}",300,1,"20210202172854","","SLIMP_I",""
"GET_DCS51_WO_HDR_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Work Order Header","F","T","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from wkohdr
where
wkonum = :i_c_wkonum
and wkorev = :i_c_wkorev
and client_id = :i_c_client_id
and wh_id = @wh_id]
}",270,1,"20210202172854","","SLIMP_I",""
"GET_DCS60_CARRIER_MOVE_VERB","SL_IFD_FLD","MOCA","Get Carrier Move Moca Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
   decode(min(car_move_id), , 'create',
          decode(@trntyp, 'C', 'change',
                 decode(:i_c_trntyp, 'R', 'refresh', 'delete') ) ) moca_verb
from
  car_move
where
  (host_ext_id = :i_c_host_car_move_id) or (car_move_id = :i_c_host_car_move_id)
] | save session variable where name = 'moca_verb_car_move' and value = @moca_verb catch (@?)
| publish data where moca_verb = @moca_verb
}",439,1,"20210202172854","","SLIMP_I",""
"GET_DCS60_INVLOD_VERB","SL_IFD_FLD","MOCA","Get Inventory LPN Verb","F","F","F","F","F","F","T","{:i_c_moca_nq_remote_str [select      decode(min(lodnum), , 'create', 'change' ) moca_verb /* :o_c_moca_verb */from  invlod where   lodnum = :i_c_lodnum ]}",159,1,"20210202172854","","SLIMP_I",""
"GET_DCS60_INVSUB_VERB","SL_IFD_FLD","MOCA","Get Inventory Sub-LPN Verb","F","F","F","F","F","F","T","{:i_c_moca_nq_remote_str [select      decode(min(subnum), , 'create', 'change' ) moca_verb /* :o_c_moca_verb */from  invsub where   subnum = :i_c_subnum ]}",159,1,"20210202172854","","SLIMP_I",""
"GET_DCS60_ORDER_ASSIGN_VERB","SL_IFD_FLD","MOCA","Get Order Assignment Moca Verb","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[ select       decode(min(ship_line_id), , 'create', 'change' ) moca_verb  from   shipment_line where   ordnum = :i_c_ordnum and client_id = :i_c_client_id   and ordlin like decode(:i_c_ordlin, '', '%', :i_c_ordlin) and ordsln like decode(:i_c_ordsln, '', '%', :i_c_ordsln) and wh_id = @wh_id]
}",371,1,"20210202172854","","SLIMP_I",""
"GET_DCS60_STOP_VERB","SL_IFD_FLD","MOCA","Get Stop Moca Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(stop_id), , 'create', 'change' ) moca_verb
from
  stop
where
  stop_id = :i_c_stop_id
] | save session variable where name = 'moca_verb_stop' and value = @moca_verb catch (@?)
| publish data where moca_verb = @moca_verb
}",276,1,"20210202172854","","SLIMP_I",""
"GET_DCS61_APPT_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Appointment","F","T","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from appt
where appt_id = :i_c_appt_id]
}",195,1,"20210202172854","","SLIMP_I",""
"GET_DCS61_APPT_NOTE_VERB","SL_IFD_FLD","MOCA","Get Appointment Note MOCA Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /*:o_c_moca_verb */
   from appt_note
  where appt_id = :i_c_appt_id
]
}",159,1,"20210202172854","","SLIMP_I",""
"GET_DEF_EXITPNT","SL_IFD_FLD","MOCA","Get Default Exit Point passed in Exit Point is Null","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_exitpnt), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_exitpnt), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_exitpnt = '' or
    :i_c_exitpnt = @abs_char or
    :i_c_exitpnt = @nochg_char)
{
    publish data where exitpnt = 'INVMOV'
}
else
    publish data where exitpnt = :i_c_exitpnt",416,1,"20210202172854","","SLIMP_I",""
"GET_DEFAULT_WAREHOUSE","SL_IFD_FLD","MOCA","Get the Default Warehouse","F","F","F","F","F","F","","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_whse_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_whse_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_whse_id = '' or
    :i_c_whse_id = @abs_char or
    :i_c_whse_id = @nochg_char)
{
    get warehouse id where wh_id = :i_c_whse_id
}
else
    publish data where wh_id = :i_c_whse_id",420,5,"20210202172854","","SLIMP_I",""
"GET_DELIVERY_DATE_FROM_GS1","SL_IFD_FLD","MOCA","Takes in a date and time and returns a time at the start of the day in the warehouse timezone.","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_delivery_date), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_delivery_date), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_delivery_date != '' or :i_c_delivery_date != @abs_char or :i_c_delivery_date != @nochg_char)
{
    [select LPAD(@nochg_ind_char, length( :i_c_delivery_time), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length( :i_c_delivery_time), @absent_ind_char) abs_char
    from dual]
	|
	if (:i_c_delivery_time != '' or :i_c_delivery_time != @abs_char or :i_c_delivery_time != @nochg_char)
		get datetime from gs1 date and time where date = :i_c_delivery_date and time = :i_c_delivery_time
}
else
      publish data where res = ''",787,2,"20210202173249","20210202173249","SLIMP_I","SLIMP_I"
"GET_DEPT_FOR_PART","SL_IFD_FLD","MOCA","Get the department code and description for Item","F","F","F","F","F","F","T","[select dept_cod from prtmst_view
                       where prtnum         = :i_c_prtnum
                           and prt_client_id = :i_c_prt_client_id
                           and wh_id          = :i_c_wh_id] catch(-1403)
|
if (@dept_cod !=  '')
{
    [select lngdsc from dscmst
                       where colnam   = 'dept_cod'
                           and colval     = @dept_cod
                           and locale_id = :i_c_locale_id]
    |
    publish data where sup_itm_grp_nam = @dept_cod and sup_itm_grp_dsc = @lngdsc
}
else
{
    publish data where sup_itm_grp_nam = 'Default' and sup_itm_grp_dsc = 'Default'
}
",633,1,"20210202172854","","SLIMP_I",""
"GET_DESC_FLD","SL_IFD_FLD","MOCA","Get Var Description Field","F","F","F","F","F","F","T","[select decode ( rtrim(:i_c_eo_desc_name),
                       'CARTYPE', 'vc_ctydsc',
                       'WINDOWFAMILY','vc_wfadsc',
                       'EXTERNALGLASSCOLOR', 'vc_glsdsc',
                       'ENCAPSULATION', 'vc_encdsc',
                       'EXTRUSION', 'vc_extdsc',
                       'PRIMER', 'vc_othdsc',
                       'upccod' )
from dual]",391,1,"20210202172854","","SLIMP_I",""
"GET_DESC_FLD_VALUE","SL_IFD_FLD","MOCA","Get Var Description Field Value","F","F","F","F","F","F","T","[select decode ( rtrim(:i_c_eo_desc_name),
                       'CARTYPE', :i_c_eo_desc_value,
                       'WINDOWFAMILY', :i_c_eo_desc_value,
                       'EXTERNALGLASSCOLOR', :i_c_eo_desc_value,
                       'ENCAPSULATION', :i_c_eo_desc_value,
                       'EXTRUSION', :i_c_eo_desc_value,
                       'PRIMER', :i_c_eo_desc_value,
                       substr(:i_c_prtnum,12, 7) )
from dual]",451,1,"20210202172854","","SLIMP_I",""
"GET_DISTRO_VERB","SL_IFD_FLD","MOCA","Get Distro Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(distro_id), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  distro
where
  wh_id = nvl(:i_c_wh_id, wh_id) and
  client_id = :i_c_client_id and
  distro_id = :i_c_distro_id ]
}",242,1,"20210202172854","","SLIMP_I",""
"GET_EARLY_DELIVERY_DATETIME","SL_IFD_FLD","MOCA","Takes in a date and time and returns a time at the start of the day in the warehouse timezone.","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_delivery_date), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_delivery_date), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_delivery_date != '' or :i_c_delivery_date != @abs_char or :i_c_delivery_date != @nochg_char)
{
    [select LPAD(@nochg_ind_char, length( :i_c_delivery_time), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length( :i_c_delivery_time), @absent_ind_char) abs_char
    from dual]
	|
	if (:i_c_delivery_time != '' or :i_c_delivery_time != @abs_char or :i_c_delivery_time != @nochg_char)
		get start of day for gs1 datetime where date = :i_c_delivery_date and time = :i_c_delivery_time
}
else
      publish data where res = ''",785,1,"20210202173249","","SLIMP_I",""
"GET_EARLY_SHIP_DATETIME","SL_IFD_FLD","MOCA","Takes in a date and time and returns a time at the start of the day in the warehouse timezone.","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_ship_date), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_ship_date), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_ship_date != '' or :i_c_ship_date != @abs_char or :i_c_ship_date != @nochg_char)
{
    [select LPAD(@nochg_ind_char, length(:i_c_ship_time), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_ship_time), @absent_ind_char) abs_char
    from dual]
	|
	if (:i_c_ship_time != '' or :i_c_ship_time != @abs_char or :i_c_ship_time != @nochg_char)
		get start of day for gs1 datetime where date = :i_c_ship_date and time = :i_c_ship_time
}
else
      publish data where res = ''",735,1,"20210202173249","","SLIMP_I",""
"GET_EVENT_INFO","SL_RETR_MTHD_IMPL","MOCA","Getting Event information","F","F","F","F","F","F","F","generate uuid
|
publish data
    where instance_identifier = @uuid
|
publish data
    where in_ifd_data_seq =trim(:i_c_sl_in_ifd_data_seq)
|
if (@in_ifd_data_seq = -1 or @in_ifd_data_seq = '')
{
    publish data where dwnld_seq = @dwnld_seq
}
else
{
    [select dwnld_seq
       from sl_ifd_data_hdr
     where ifd_data_seq = @in_ifd_data_seq] catch(-1403)
}
|
sl_list dwnld_ifd_hdr ver_2
    where dwnld_seq = @dwnld_seq
       and max_rows = 100
|
sl_list ifd_data_hdr_info
    where ifd_data_seq = @data_seq catch(-1403)
|
if (@? = -1403)
{
save session variable where name='ifd_id' and value='NA'
|
    [select 'NA' evt_id,
               'NA' ifd_ver,
	msg_log_data comm_cmnt,
	'NA' evt_data_seq,
	dwnld_seq dwnld_seq,
	'Download Failed' proc_err_flg,
	'NA' cre_dt,
	'Download Error' evt_stat_cd,
	'NA' ifd_id,
	'ERROR' dwnld_stat_cd
      from sl_msg_log
    where dwnld_seq = @dwnld_seq
       and rownum = 1]
|
publish data
 where evt_id = @evt_id
     and comm_cmnt = @comm_cmnt
   and evt_data_seq = @evt_data_seq
   and dwnld_seq = @dwnld_seq
   and proc_err_flg = @proc_err_flg
   and cre_dt = @cre_dt
   and evt_stat_cd = @evt_stat_cd
   and ifd_id = @ifd_id
   and ifd_ver = @ifd_ver
   and dwnld_stat_cd = @dwnld_stat_cd
   and instance_identifier = @instance_identifier
}
else
{
    /*This query is executed for getting information about error message. */
    if(@comm_cmnt = '')
    {
      [select *      from sl_msg_log
       where dwnld_seq = @dwnld_seq
          and rownum=1]catch(-1403)
    }
|
/* Retrieve the Original message Document Action Code. */
[select ifd_seg_id,ifd_seg_data
   from sl_ifd_data_dtl
  where ((ifd_data_seq = @data_seq and ifd_seg_id='TRANSPORTPICKUPDROPOFFREQUEST')
           or (ifd_data_seq = @data_seq and ifd_seg_id='TRANSPORTLOAD')
               or (ifd_data_seq = @data_seq and ifd_seg_id = 'ORDER')
                    or (ifd_data_seq = @data_seq and ifd_seg_id = 'DESPATCHADVICE')
                      or (ifd_data_seq = @data_seq and ifd_seg_id = 'PARTY')
                        or (ifd_data_seq = @data_seq and ifd_seg_id = 'LOCATION'))
                          and rownum = 1]
|
publish data where original_ifd_seg_data=@ifd_seg_data
|
publish data where ifd_seg_data=@ifd_seg_data >>res
|
[[
	import com.redprairie.moca.*;
	String num = "";
              String clob = "";
	String tmp = "";
	if (res.next())
              {
                    clob = res.getString("ifd_seg_data");	
                          clob = clob.substring(0, clob.length() - 1)
			                                     .replace("\"", "");
	            String[] tmpArray = clob.split("\\s*,\\s*");
                                num = tmpArray[2];
	}		 	
          return num;
]]
|
publish data where document_action_code = @result
|
publish data where ifd_seg_data=@original_ifd_seg_data>>res
|
/*Retrieve the Original message creation date and time Code. */
[[
	import com.redprairie.moca.*; 
	String num = "";
              String clob = "";
	String tmp = "";
	if (res.next())
              {
                    clob = res.getString("ifd_seg_data");	
                          clob = clob.substring(0, clob.length() - 1)
			                                     .replace("\"", "");
	            String[] tmpArray =clob.split("\\s*,\\s*");
                           num=tmpArray[0];
	}			
          return num;
]]
|
publish data where cre_dt=@result
|
[select * 
   from sl_ifd_data_dtl
 where ifd_data_seq = @data_seq
    and ifd_seg_id = 'DOCUMENTIDENTIFICATION'
      order by ifd_data_dtl_seq] >>res
|
[[
	import com.redprairie.moca.*;
	String num = "";
              String clob = "";
	String tmp = "";
	if (res.next())
              {
                    clob = res.getString("ifd_seg_data");	
                    clob = clob.substring(0, clob.length() - 1)
			                 .replace("\"", "");
	       String[] tmpArray =clob.split("\\s*,\\s*");
                     num=tmpArray[2];
	}			
         return num;
]]
|
publish data where orig_instance_identifier = @result
|
save session variable where name='ifd_id' and value=@ifd_id
|
/* Retrieve the original sender */
[select replace(replace(ifd_seg_data,'"', ''), ',', '')  orig_sender
   from sl_ifd_data_dtl
  where ifd_data_seq = @data_seq
    and ifd_seg_id = 'SENDERIDENTIFER'
    order by ifd_data_dtl_seq] >>resultset
|
publish top rows where resultset = @resultset and rows = 1
|
publish data
 where evt_id = @evt_id
     and comm_cmnt = nvl(@comm_cmnt,@msg_log_data)
   and evt_data_seq = @evt_data_seq
   and dwnld_seq = @dwnld_seq
   and proc_err_flg = @proc_err_flg
   and cre_dt = @cre_dt
   and evt_stat_cd = @evt_stat_cd
   and ifd_id = @ifd_id
   and ifd_ver = @ifd_ver
   and dwnld_stat_cd = @dwnld_stat_cd
   and instance_identifier = @instance_identifier 
   and document_action_code = @document_action_code
   and orig_instance_identifier = @orig_instance_identifier
     and orig_sender = @orig_sender
}
   
",4936,1,"20210202173615","","SLIMP_I",""
"GET_EXPIRE_DTE_FORMAT","SL_IFD_FLD","MOCA","Get the specified format of the Expire Date.","F","F","F","F","F","F","T","/* Get the control properties from les_var_config for manufacture date field for the maximum customization level set */
{
    if(:i_c_expire_dte != '')
    {
        get les variable configuration
            where var_nam  = 'expire_dte'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            publish data
                where expire_dte_fmt = substr(@ctrl_prop, 6, LEN(@ctrl_prop))
        }
        else
        {
            publish data
                where expire_dte_fmt = ''
        }
    }
    else
    {
        publish data
            where expire_dte_fmt = ''
    }
}",797,9,"20210202172854","","SLIMP_I",""
"GET_EXPIRE_DTE_FORMAT_VAL","SL_IFD_FLD","MOCA","Get the Expire Date Value based on the specified format.","F","F","F","F","F","F","T","{
    if(:i_c_expire_dte != '')
    {
        get les variable configuration
            where var_nam  = 'expire_dte'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            publish data
                where date = :i_c_expire_dte
                  and fmt_str = substr(@ctrl_prop, 6, LEN(@ctrl_prop))
            |
            format date
                where date = @date
                  and fmt_str = @fmt_str
            |
            publish data
                where expire_dte_fmtval = @fmt_dte
        }
        else
        {
            publish data
                where expire_dte_fmtval = ''
        }
    }
    else
    {
        publish data
            where expire_dte_fmtval = ''
    }
}",925,9,"20210202172854","","SLIMP_I",""
"GET_GS1_APPT_HOST_EXT_ID","SL_IFD_FLD","MOCA","Get host_ext_id i.e. load_id associated with the appointment from carrier move. This will be fetched from car_move_id for this appointment.","F","F","F","F","F","F","T","if (:i_c_ifd_fld_data != '') {
    [select host_ext_id from car_move where car_move_id=:i_c_car_move_id]
}",106,1,"20210202173542","","SLIMP_I",""
"GET_GS1_CANCELLED_FLG","SL_IFD_FLD","MOCA","Get GS1 Cancelled Flag value Based on documentActionCode and LineItemActionCode.","F","F","F","F","F","T","T","publish data where<<OVERSTACKED_ARGS>>
|
if(:i_c_documentActionCode = 'CHANGE_BY_REFRESH')
{
    sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = @lineitemactioncode
    |
    if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
    {
        if(@lineitemactioncode = 'CANCELLED')
        {
           publish data where cancelled_flg = '1' 
        } 
        else
        {
           publish data where cancelled_flg = '0'
        }
    }      
    else 
    {
        publish data where cancelled_flg = ''
    }
} 
else 
{
    publish data where cancelled_flg = ''
}
",595,1,"20210202173205","","SLIMP_I",""
"GET_GS1_DA_BT_ADDRESS_RM","SL_RETR_MTHD_IMPL","MOCA","Retrieve the Bill To Address Information based upon Conditions","F","F","F","F","F","F","T","/* Get the Despatch Advice Policy to check whether to include address for Shipment Line in DA message */
list policies
 where polcod = 'CANONICAL'
    and polvar = 'DESPATCH-ADVICE'
    and polval = 'INCLUDE-SHIPLINE-ADDRESS' catch(-1403)
|
if(@? = 0)
{
    /* The valid values are NEVER, MANIFEST-ONLY and ALWAYS.  
     *   1. NEVER - The addresses will never be included in the message. 
     *   2. MANIFEST-ONLY - The addresses will be included only when Shipment is manifested. 
     *   3. ALWAYS -The addresses will be included in all type of despatch process(e.g. LTL loading, FTL loading and Manifest process). 
     */
    if(@rtstr1 != '' and ((@rtstr1 = 'MANIFEST-ONLY' and :i_c_is_manifest_exists)
					          or (@rtstr1 = 'ALWAYS')))
    {
        [select adrmst.*
           from ord
            join adrmst
              on ord.bt_adr_id = adrmst.adr_id
         where ord.ordnum = :i_c_ordnum 
            and ord.wh_id = :i_c_wh_id
            and ord.client_id = :i_c_client_id] catch(-1403)              
    }
}",1037,1,"20210202173415","","SLIMP_I",""
"GET_GS1_DA_ST_ADDRESS_RM","SL_RETR_MTHD_IMPL","MOCA","Retrieve the Ship To Address Information based upon Conditions","F","F","F","F","F","F","T","/* Get the Despatch Advice Policy to check whether to include address for Shipment Line in DA message */
list policies
 where polcod = 'CANONICAL'
    and polvar = 'DESPATCH-ADVICE'
    and polval = 'INCLUDE-SHIPLINE-ADDRESS' catch(-1403)
|
if(@? = 0)
{
    /* The valid values are NEVER, MANIFEST-ONLY and ALWAYS.  
     *   1. NEVER - The addresses will never be included in the message. 
     *   2. MANIFEST-ONLY - The addresses will be included only when Shipment is manifested. 
     *   3. ALWAYS -The addresses will be included in all type of despatch process(e.g. LTL loading, FTL loading and Manifest process). 
     */
    if(@rtstr1 != '' and ((@rtstr1 = 'MANIFEST-ONLY' and :i_c_is_manifest_exists)
					          or (@rtstr1 = 'ALWAYS')))
    {
        [select adrmst.*
           from ord
            join adrmst
              on ord.st_adr_id = adrmst.adr_id
         where ord.ordnum = :i_c_ordnum 
            and ord.wh_id = :i_c_wh_id
            and ord.client_id = :i_c_client_id] catch(-1403)              
    }
}",1037,1,"20210202173415","","SLIMP_I",""
"GET_GS1_FORMATED_CAN_DATESTAMP","SL_IFD_FLD","MOCA","Formats a given date as a GS1 Date formatted string to be sent to canonical","F","F","F","F","F","F","T","if (:i_c_ifd_fld_data != ) { get timestamp parts from datetime where datetime = to_date(:i_c_ifd_fld_data) | publish data where date = @date } else { publish data where date = :i_c_sys_absent_ind_char}",205,3,"20210202173525","20210202173557","SLIMP_I","SLIMP_I"
"GET_GS1_FORMATED_CAN_TIMESTAMP","SL_IFD_FLD","MOCA","Formats a given date as a GS1 Time formatted string to be sent to canonical","F","F","F","F","F","F","T","if (:i_c_ifd_fld_data != ) { get timestamp parts from datetime where datetime = to_date(:i_c_ifd_fld_data) | publish data where time = @time || @timezoneoffset } else { publish data where time = :i_c_sys_absent_ind_char}",224,4,"20210202173415","20210202173557","SLIMP_I","SLIMP_I"
"GET_GS1_FORMATED_DATESTAMP","SL_IFD_FLD","MOCA","Formats sysdate as a GS1 date/time formatted string","F","F","F","F","F","F","T","if (:i_c_ifd_fld_data != ) { get timestamp parts from datetime where datetime = to_date(:i_c_ifd_fld_data) | publish data where date = @date || @timezoneoffset } else { publish data where date = :i_c_sys_absent_ind_char}",224,2,"20210202173416","20210202173458","SLIMP_I","SLIMP_I"
"GET_GS1_FORMATED_SHPDATE","SL_IFD_FLD","MOCA","Formats sysdate as a GS1 date/time formatted string","F","F","F","F","F","F","T","if (:i_c_ifd_fld_data != ) 
{
    get timestamp parts from datetime where datetime = to_date(:i_c_ifd_fld_data) 
    
| 
    publish data where date = @date
} 
else 
{ 
    publish data where date = :i_c_sys_absent_ind_char
}",229,1,"20210202173415","","SLIMP_I",""
"GET_GS1_FORMATED_TIMESTAMP","SL_IFD_FLD","MOCA","Formats sysdate as a GS1 date/time formatted string","F","F","F","F","F","F","T","get timestamp from datetime where datetime = sysdate",52,12,"20210202173359","20210202173615","SLIMP_I","SLIMP_I"
"GET_GS1_INB_ORDER","SL_IFD_FLD","MOCA","Get inbound Order Moca Verb","F","F","F","F","F","F","F","/*  In case of CHANGE_BY_REFRESH order has to be
    added, if not present in the DB.  Here we are checking the existence
    of order and assigning deciding the action  */
if(:i_c_documentActionCode != 'ADD')
{
        [
        select decode(min(invnum), , 'create', 'change' ) moca_verb /* :o_c_moca_verb */
          from rimhdr
         where invnum  = :i_c_invnum 
           and client_id  = :i_c_client_id 
           and wh_id  = :i_c_wh_id 
           and supnum  = :i_c_supnum
        ]
    |
    /*save the moca verb information for use in the post processing algorithm */ 
    save session variable where name = 'moca_verb_order' and value = @moca_verb catch (@?)
    | 
    publish data where moca_verb = @moca_verb
}
else
{
    publish data where moca_verb = 'create'
}",788,1,"20210202173204","","SLIMP_I",""
"GET_GS1_INB_ORDER_LINE","SL_IFD_FLD","MOCA","Get Order line Moca Verb","F","F","F","F","F","F","F","/*  In case of CHANGE_BY_REFRESH orderline has to be
    added, if not present in the DB.  Here we are checking the existence
    of orderline and assigning deciding the action  */
if(:i_c_documentActionCode != 'ADD')
    {
        [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
           from rimlin
          where        invnum = :i_c_invnum 
            and        supnum = :i_c_supnum 
            and        invlin = :i_c_invlin 
            and     client_id = :i_c_client_id 
            and         wh_id = :i_c_wh_id]
}
else
{
    publish data where moca_verb = 'create'
}
",619,1,"20210202173204","","SLIMP_I",""
"GET_GS1_LIST_ORD_LINE_ITEM_DTL","SL_RETR_MTHD_IMPL","MOCA","List Order Line items with details for an order","F","F","F","F","F","F","T","list gs1 orderline details for order rm where ordnum=:i_c_ordnum and client_id = :i_c_temp_client_id and wh_id = :i_c_wh_id
",124,1,"20210202173525","","SLIMP_I",""
"GET_GS1_LIST_RCVINV_RM","SL_RETR_MTHD_IMPL","MOCA","List all receive invoice for a given warehouse id and trlr id or inbound shipment.","F","F","F","F","F","F","T","list gs1 receive invoice rm 
     where wh_id = :i_c_wh_id 
       and trknum = :i_c_trknum",91,1,"20210202173506","","SLIMP_I",""
"GET_GS1_LIST_RCVLIN_RM","SL_RETR_MTHD_IMPL","MOCA","List all receive invoice line  for a given warehouse id and trlr id or inbound shipment and invoice.","F","F","F","F","F","F","T","list gs1 receive invoice line rm 
     where wh_id = :i_c_wh_id 
       and trknum = :i_c_trknum
       and supnum = :i_c_supnum
       and invnum  = :i_c_invnum
       and client_id = :i_c_client_id
",200,1,"20210202173506","","SLIMP_I",""
"GET_GS1_LIST_SHIP_LINE_DTL","SL_RETR_MTHD_IMPL","MOCA","Get the list of shipment line with required details for the shipment.","F","F","F","F","F","F","","list gs1 shipment line details for shipment rm 
    where ship_id = :i_c_ship_id 
        and wh_id = :i_c_wh_id",112,1,"20210202173359","","SLIMP_I",""
"GET_GS1_LIST_SPLSHIP_LINE_DTL","SL_RETR_MTHD_IMPL","MOCA","Get the list of shipment line with required details for the splitted shipment.","F","F","F","F","F","F","","if ( :i_c_action_code = 'DELETE' and :i_c_line_action_code = 'CANCELLED' )
{
         list gs1 shipment line details for shipment rm 
    where ship_id = :i_c_ship_id 
                  and wh_id = :i_c_wh_id
                  and linsts  = 'B'
                  and ship_line_id = ''
}
else if (:i_c_action_code = 'CHANGE_BY_REFRESH' and :i_c_line_action_code = 'CANCELLED')
{

   get session variable 
       where name = 'cancelled_ship_line_id' catch (-1403)
               |
               publish data where cancelled_ship_line_id = @value
               |
                if (@? = 0)
                 {
                      list gs1 shipment line details for shipment rm 
                           where ship_id = :i_c_ship_id 
                                   and wh_id = :i_c_wh_id 
                                   and ship_line_id = @cancelled_ship_line_id
                                   and linsts = 'B'
                  }
 }
else if ((:i_c_action_code = 'CHANGE_BY_REFRESH' or :i_c_action_code = 'DELETE') and :i_c_line_action_code = 'DELETED')
{
      get removed shipment lines
}
else
{

 list gs1 shipment line details for shipment rm 
       where ship_id = :i_c_ship_id 
            and wh_id = :i_c_wh_id
            and ship_line_id = ''
}",1270,2,"20210202173557","20210202173606","SLIMP_I","SLIMP_I"
"GET_GS1_LOG_SERV_REQ_COD","SL_IFD_FLD","MOCA","Get inbound Order Moca Verb","F","F","F","F","F","F","F","if(:i_c_carcod !=  and :i_c_srvlvl != )
{
 [ select cardtl.cartyp carrier_type
            from cardtl
           where cardtl.carcod = :i_c_carcod
             and srvlvl = :i_c_srvlvl] catch (-1403)
|
if(@? = 0 and @carrier_type = 'T')
{
  Publish data where logisticServiceReqCode = '2'
} 
else if(@? = 0 and @carrier_type = 'L')
{
  Publish data where logisticServiceReqCode = '3'
}
else if(@? = 0 and @carrier_type = 'S')
{
  Publish data where logisticServiceReqCode = '4'
}
else
{
  Publish data where logisticServiceReqCode = ''
}
}
",549,1,"20210202173415","","SLIMP_I",""
"GET_GS1_LPN_LINE_ITEM","SL_RETR_MTHD_IMPL","MOCA","List inventory line item for the GS1 system","F","F","F","F","F","F","T","if (:i_c_lvl_num = '4' or :i_c_invtid = '') {
     list gs1 line item info
         where dtlnum = :i_c_invtid
              and inv_hist_id = :i_c_inv_hist_id
              and ship_line_id = :i_c_ship_line_id 
}
",214,1,"20210202173415","","SLIMP_I",""
"GET_GS1_LPN_LOGISTICUNIT","SL_RETR_MTHD_IMPL","MOCA","List inventory logistic units for the GS1 system","F","F","F","F","F","F","F","list gs1 inventory logistic units for shipment
where ship_id = :i_c_ship_id",75,1,"20210202173415","","SLIMP_I",""
"GET_GS1_ORD_DEF_VERB","SL_IFD_FLD","MOCA","Get GS1 Order Default MOCA Verb","F","F","F","F","F","F","T","/*  In case of CHANGE_BY_REFRESH orderline has to be
    added, if not present in the DB.  Here we are checking the existence
    of order default service and then deciding the action  */
if(:i_c_documentActionCode != 'ADD')
{
    [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
       from def_serv
     where ordnum = :i_c_ordnum 
        and serv_id = :i_c_serv_id 
        and def_serv_cod = :i_c_def_serv_cod 
        and client_id = :i_c_client_id
        and wh_id = :i_c_wh_id]
}
else
{
    publish data where moca_verb = 'create'
}",574,1,"20210202173205","","SLIMP_I",""
"GET_GS1_ORD_LINE_NOTE_VERB","SL_IFD_FLD","MOCA","Get GS1 Order Line Note MOCA Verb","F","F","F","F","F","F","T","/*  In case of CHANGE_BY_REFRESH orderline note has to be
    added, if not present in the DB.  Here we are checking the existence
    of order line note and then deciding the action  */
if(:i_c_documentActionCode != 'ADD')
{
    [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
       from ord_line_note
      where
          ordnum = :i_c_ordnum
          and ordsln = :i_c_ordsln
          and ordlin = :i_c_ordlin
          and ((notlin = lpad(:i_c_notlin,4,'0')) or (notlin = :i_c_notlin))
          and client_id = :i_c_client_id
          and wh_id = :i_c_wh_id]
}
else
{
    publish data where moca_verb = 'create'
}",657,1,"20210202173205","","SLIMP_I",""
"GET_GS1_ORD_SERV_COND_VERB","SL_IFD_FLD","MOCA","Get GS1 Order Service Condition MOCA Verb","F","F","F","F","F","F","T","/*  In case of CHANGE_BY_REFRESH orderline has to be
    added, if not present in the DB.  Here we are checking the existence
    of order service condition and then deciding the action  */
if(:i_c_documentActionCode != 'ADD')
{
    [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
       from tm_serv_cond_ord
     where ordnum = :i_c_ordnum 
        and serv_cond_id = :i_c_serv_cond_id 
        and client_id = :i_c_client_id 
        and wh_id = :i_c_wh_id]
}
else
{
    publish data where moca_verb = 'create'
}",549,1,"20210202173205","","SLIMP_I",""
"GET_GS1_ORDER_REFERENCE_TYPE","SL_IFD_FLD","MOCA","When receiving inventory for a purchase order we need to publish 'PW' for order reference type","F","F","F","F","F","F","T","if (:I_C_IFD_FLD_DATA ='X' )
{
    publish data where value = 'TO'
}
else if (:I_C_IFD_FLD_DATA = 'P')
{
    publish data where value = 'PW'
}
",143,1,"20210202173506","","SLIMP_I",""
"GET_GS1_ORDLINE_DEF_VERB","SL_IFD_FLD","MOCA","Get GS1 Order Line default MOCA Verb","F","F","F","F","F","F","T","/*  In case of CHANGE_BY_REFRESH orderline has to be
    added, if not present in the DB.  Here we are checking the existence
    of orderline default service and then deciding the action  */
if(:i_c_documentActionCode != 'ADD')
{
    [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
       from def_serv
     where ordnum = :i_c_ordnum 
        and serv_id = :i_c_serv_id 
        and def_serv_cod = :i_c_def_serv_cod 
        and ordlin = :i_c_ordlin
        and ordsln = :i_c_ordsln
        and client_id = :i_c_client_id
        and wh_id = :i_c_wh_id]
}
else
{
    publish data where moca_verb = 'create'
}",644,1,"20210202173205","","SLIMP_I",""
"GET_GS1_ORDLINE_SERVCOND_VERB","SL_IFD_FLD","MOCA","Get GS1 Order Line Service condition MOCA Verb","F","F","F","F","F","F","T","/*  In case of CHANGE_BY_REFRESH orderline has to be
    added, if not present in the DB.  Here we are checking the existence
    of orderline service condition and then deciding the action  */
if(:i_c_documentActionCode != 'ADD')
{
    [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
       from tm_serv_cond_ord_line
     where ordnum = :i_c_ordnum 
        and serv_cond_id = :i_c_serv_cond_id
        and client_id = :i_c_client_id 
        and wh_id = :i_c_wh_id
        and ordlin = :i_c_ordlin
        and ordsln = :i_c_ordsln]
}
else
{
    publish data where moca_verb = 'create'
}",623,1,"20210202173205","","SLIMP_I",""
"GET_GS1_ORDLINE_VERB","SL_IFD_FLD","MOCA","Get GS1 Order Line MOCA Verb","F","F","F","F","F","F","T","/*  In case of CHANGE_BY_REFRESH orderline has to be
    added, if not present in the DB.  Here we are checking the existence
    of orderline and then deciding the action  */
if(:i_c_documentActionCode != 'ADD')
{
    [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
       from ord_line 
     where ordnum = :i_c_ordnum 
        and ordsln = :i_c_ordsln 
        and ordlin = :i_c_ordlin 
        and client_id = :i_c_client_id 
        and wh_id = :i_c_wh_id]
}
else
{
    publish data where moca_verb = 'create'
}",550,1,"20210202173205","","SLIMP_I",""
"GET_GS1_PARCEL_INFO","SL_RETR_MTHD_IMPL","MOCA","Retrieve the Manifest information for the Order, Shipment and Shipment Line for DA message to Canonical System.","F","F","F","F","F","F","T","if ('1' != :i_c_lvl_num) 
{
    if ('4' != :i_c_lvl_num and :i_c_is_manifest_exists = 1 and (:i_c_traknum != '' or :i_c_mfstid != ''))
    {
        publish data 
            where traknum = :i_c_traknum
                and crtn_weight = :i_c_crtn_weight
                and mfstid = :i_c_mfstid
                and mstdte = :i_c_mstdte
                and frtrte = :i_c_frtrte
                and dstnam = :i_c_dstnam
                and crtn_usrfld1 = :i_c_crtn_userfld1
                and crtn_usrfld2 = :i_c_crtn_userfld2
                and crtn_usrfld3 = :i_c_crtn_userfld3
                and crtn_usrfld4 = :i_c_crtn_userfld4
                and tot_pln_wgt = :i_c_tot_pln_wgt
                and tot_pln_vol = :i_c_tot_pln_vol
                and tot_pln_len = :i_c_tot_pln_len
                and tot_pln_wdt = :i_c_tot_pln_wdt
                and tot_pln_hgt = :i_c_tot_pln_hgt

     }
     else 
     {
         if(!(:i_c_tot_pln_wgt = 0 and :i_c_tot_pln_len = 0 and :i_c_tot_pln_wdt = 0 and :i_c_tot_pln_hgt = 0))
         {
             publish data 
                 where traknum = ''
                     and crtn_weight = ''
                     and mfstid = ''
                     and mstdte = ''
                     and frtrte = ''
                     and dstnam = ''
                     and crtn_usrfld1 = ''
                     and crtn_usrfld2 = ''
                     and crtn_usrfld3 = ''
                     and crtn_usrfld4 = ''
                     and tot_pln_wgt = :i_c_tot_pln_wgt
                     and tot_pln_vol = :i_c_tot_pln_vol
                     and tot_pln_len = :i_c_tot_pln_len
                     and tot_pln_wdt = :i_c_tot_pln_wdt
                     and tot_pln_hgt = :i_c_tot_pln_hgt

         }    
     }
}
",1769,1,"20210202173415","","SLIMP_I",""
"GET_GS1_PARCEL_ORDER_FIELD","SL_IFD_FLD","MOCA","Get the field value based on if it is a parcel order","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@transportServiceCategoryType = '100') {
publish data where res = :I_C_IFD_FLD_DATA
}
else {
publish data where res = 
}",170,1,"20210202173205","","SLIMP_I",""
"GET_GS1_PLN_ARR_DTE","SL_IFD_FLD","MOCA","Get plan arrive date for LTL or TL","F","F","F","F","F","F","T","if ( :i_c_cartyp = 'L' or :i_c_stop_id = '') {
     if (:i_c_late_dlvdte != '') {
        get timestamp from datetime where datetime = to_date(:i_c_late_dlvdte)
    }
    else {
        publish data where timestamp = ''
    }
}
else {
    if (:i_c_ifd_fld_data != '') {
        get timestamp from datetime where datetime = to_date(:i_c_ifd_fld_data)
    }
    else {
        publish data where timestamp = ''
    }
}
",417,1,"20210202173416","","SLIMP_I",""
"GET_GS1_SHIPMENT_ENTDTE","SL_IFD_FLD","MOCA","Formats shipment Entered Date as a GS1 date/time formatted string","F","F","F","F","F","F","T","get timestamp from datetime where datetime = to_date(:i_c_ENTDTE)",65,1,"20210202173415","","SLIMP_I",""
"GET_GS1_SHIPMENTS_BY_STOP","SL_RETR_MTHD_IMPL","MOCA","List all shipments for a given stop on an outbound load","F","F","F","F","F","F","F","
list gs1 shipments for stop where stop_id = :i_c_stop_id and ltl_stop_adr_id = :i_c_adr_id and wh_id = :i_c_wh_id 
",116,1,"20210202173415","","SLIMP_I",""
"GET_GS1_STOPS_BY_CARRIER_MOVE","SL_RETR_MTHD_IMPL","MOCA","List all stops for a given carrier move on an outbound load","F","F","F","F","F","F","F","list gs1 stops for carrier move where car_move_id = :i_c_car_move_id",68,1,"20210202173415","","SLIMP_I",""
"GET_GS1_TIMESTAMP_FROM_DCS","SL_IFD_FLD","MOCA","Formats passed DCS time as a GS1 date/time formatted string","F","F","F","F","F","F","T","if (:i_c_ifd_fld_data != '') {
get timestamp from datetime where datetime = to_date(:i_c_ifd_fld_data)
}
else {
publish data where timestamp = :i_c_sys_absent_ind_char
}",169,4,"20210202173416","20210202173535","SLIMP_I","SLIMP_I"
"GET_HDR_DETAILS","SL_RETR_MTHD_IMPL","MOCA","Get TM Carrier Move Actuals","F","F","F","F","F","F","T","list gs1 order header details rm where  ordnum=:i_c_ordnum and client_id=:i_c_client_id and wh_id=:i_c_wh_id",108,1,"20210202173525","","SLIMP_I",""
"GET_HOLD_DEF_INFO","SL_RETR_MTHD_IMPL","MOCA","Get Hold Definition Information","F","F","F","F","F","F","T","list hold definitions
   where hldnum = @hldnum and @+hldpfx and @+wh_id >> res
|
publish data combination
     where res = @res
         and dummy = 'x'
         and lens_invsts = decode(to_char(:i_c_fr_hld_flg) || to_char(:i_c_to_hld_flg), '10', :i_c_to_invsts, '01', :i_c_fr_invsts, :i_c_to_invsts)",301,1,"20210202172854","","SLIMP_I",""
"GET_HOST_ADR_ID","SL_IFD_FLD","MOCA","Get the Host External ID","T","T","F","F","F","F","T","{
     [select host_ext_id
       from adrmst
      where adr_id = :i_c_adr_id]
}",81,1,"20210202172854","","SLIMP_I",""
"GET_HOST_EXT_ID_FROM_ADDRESS","SL_IFD_FLD","MOCA","Fetches host exernal ID from adrmst.","F","F","F","F","F","F","T","
{
    [select host_ext_id 
       from adrmst
      where adr_id = :I_C_IFD_FLD_DATA]
}",88,1,"20210202173557","","SLIMP_I",""
"GET_INCOMPLETE_ORDERS","SHIPPING","MOCA","Get open order information","F","T","F","F","F","T","T","
[select nvl(client_wh.trans_wh_id,
            nvl(wh.trans_wh_id, @wh_id)) trans_wh_id
   from wh left outer join client_wh
        on client_wh.wh_id = wh.wh_id
        and client_wh.client_id = @client_id
  where wh.wh_id = @wh_id]
|
List Incomplete Order Lines
          where ordnum = @ordnum
            and client_id = @client_id
            and ordlin = @ordlin
            and ordsln = @ordsln
            and wh_id = @wh_id
|
filter data where wh_id = @trans_wh_id
              and SRC_ADR_ID = 'X'
              and SRC_HOST_ADR_ID = 'X'
",551,1,"20210202172854","","SLIMP_I",""
"GET_INCOMPLETE_ORDERS_V51","SHIPPING","MOCA","Get open order information","F","T","F","F","F","T","T","List Incomplete Order Lines",27,1,"20210202172854","","SLIMP_I",""
"GET_INCOMPLETE_SHIPMENTS","SHIPPING","MOCA","Get Open Shipment information","F","T","F","F","F","T","T","List Incomplete Shipment Lines
|get translated warehouse ID

|
List Incomplete Shipment Lines
          where ship_line_id = @ship_line_id
|
filter data where wh_id = @trans_wh_id
              and SRC_ADR_ID = 'X'
              and SRC_HOST_ADR_ID = 'X'",254,1,"20210202172854","","SLIMP_I",""
"GET_INV_ATTR_DTE1_FORMAT","RECEIVING","MOCA","Get the formatting that is used for Inventory Attribute Date 1","F","F","F","F","F","F","T","/* Get the control properties from les_var_config for inventory attribute date 1 field for the maximum customization level set */
{
    if(:i_c_inv_attr_dte1 != '' or :i_c_to_inv_attr_dte1 != '')
    {
        get les variable configuration
            where var_nam  = 'inv_attr_dte1'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            publish data
                where inv_attr_dte1_fmt = substr(@ctrl_prop, 6, LEN(@ctrl_prop))
        }
        else
        {
            publish data
                where inv_attr_dte1_fmt = ''
        }
    }
    else
    {
        publish data
            where inv_attr_dte1_fmt = ''
    }
}",853,17,"20210202172855","","SLIMP_I",""
"GET_INV_ATTR_DTE1_FORMAT_VAL","RECEIVING","MOCA","Gets the formatted date value for inventory attribute date 1","F","F","F","F","F","F","T","/* Get the control properties from les_var_config for inventory attribute date 1 field for the maximum customization level set */
{
    if(:i_c_inv_attr_dte1 != '' or :i_c_to_inv_attr_dte1 != '')
    {
        get les variable configuration
            where var_nam  = 'inv_attr_dte1'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            publish data
                where date = nvl(:i_c_inv_attr_dte1, :i_c_to_inv_attr_dte1)
                  and fmt_str = substr(@ctrl_prop, 6, LEN(@ctrl_prop))
            |
            format date
                where date = @date
                  and fmt_str = @fmt_str
            |
            publish data
                where inv_attr_dte1_fmtval = @fmt_dte
        }
        else
        {
            publish data
                where inv_attr_dte1_fmtval = ''
        }
    }
    else
    {
        publish data
            where inv_attr_dte1_fmtval = ''
    }
}",1132,17,"20210202172855","","SLIMP_I",""
"GET_INV_ATTR_DTE2_FORMAT","RECEIVING","MOCA","Get the formatting that is used for Inventory Attribute Date 2","F","F","F","F","F","F","T","/* Get the control properties from les_var_config for inventory attribute date 2 field for the maximum customization level set */
{
    if(:i_c_inv_attr_dte2 != '' or :i_c_to_inv_attr_dte2 != '')
    {
        get les variable configuration
            where var_nam  = 'inv_attr_dte2'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            publish data
                where inv_attr_dte2_fmt = substr(@ctrl_prop, 6, LEN(@ctrl_prop))
        }
        else
        {
            publish data
                where inv_attr_dte2_fmt = ''
        }
    }
    else
    {
        publish data
            where inv_attr_dte2_fmt = ''
    }
}",853,17,"20210202172855","","SLIMP_I",""
"GET_INV_ATTR_DTE2_FORMAT_VAL","RECEIVING","MOCA","Gets the formatted date value for inventory attribute date 2","F","F","F","F","F","F","T","/* Get the control properties from les_var_config for inventory attribute date 2 field for the maximum customization level set */
{
    if(:i_c_inv_attr_dte2 != '' or :i_c_to_inv_attr_dte2 != '')
    {
        get les variable configuration
            where var_nam  = 'inv_attr_dte2'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            publish data
                where date = nvl(:i_c_inv_attr_dte2, :i_c_to_inv_attr_dte2)
                  and fmt_str = substr(@ctrl_prop, 6, LEN(@ctrl_prop))
            |
            format date
                where date = @date
                  and fmt_str = @fmt_str
            |
            publish data
                where inv_attr_dte2_fmtval = @fmt_dte
        }
        else
        {
            publish data
                where inv_attr_dte2_fmtval = ''
        }
    }
    else
    {
        publish data
            where inv_attr_dte2_fmtval = ''
    }
}",1132,17,"20210202172855","","SLIMP_I",""
"GET_INV_RCV_DTL_SEG","SL_RETR_MTHD_IMPL","MOCA","Get INV-RCV Detail Segment","F","F","F","F","F","F","T","list inventory receipt rm
   where summFlg = 0
      and trknum = :i_c_trknum
      and invnum = :i_c_invnum
      and supnum = :i_c_supnum
      and client_id = :i_c_client_id
      and wh_id = :i_c_wh_id
      and invtyp = :i_c_invtyp
      and cnsg_flg = :i_c_cnsg_flg
      and hld_flg = :i_c_hld_flg
      and rcvkey = :i_c_rcvkey
",336,5,"20210202172855","","SLIMP_I",""
"GET_INV_RCV_HOLD_DETAILS","SL_RETR_MTHD_IMPL","MOCA","Get details for INV-RCV HOLD Segement","F","F","F","F","F","F","T","[select invhld.hldpfx,
           invhld.hldnum,
           invhld.hlddte,
           hldmst.future_flg,
           hldmst.reacod
   from invdtl
  inner join invhld
      on invdtl.dtlnum = invhld.dtlnum
  inner join hldmst
      on invhld.hldnum = hldmst.hldnum
 where invdtl.hld_flg = 1
    and invdtl.dtlnum = :i_c_dtlnum] catch(-1403)",338,5,"20210202172855","","SLIMP_I",""
"GET_INV_RCV_SUMM_SEG","SL_RETR_MTHD_IMPL","MOCA","Get INV-RCV Summary Segment","F","F","F","F","F","F","T","list inventory receipt rm
   where summFlg = 1
      and trknum = :i_c_trknum
      and invnum = :i_c_invnum
      and supnum = :i_c_supnum
      and client_id = :i_c_client_id
      and wh_id = :i_c_wh_id
      and invtyp = :i_c_invtyp
      and cnsg_flg = :i_c_cnsg_flg
      and hld_flg = :i_c_hld_flg
      and rcvkey = :i_c_rcvkey
",336,1,"20210202172855","","SLIMP_I",""
"GET_INV_STS_FROM_LOC","SL_IFD_FLD","MOCA","Get From Host Loc for INV-STS","F","F","F","F","F","F","T","sl_parse arg where i_arg_list = :i_c_ifd_fld_data
|
sl_es_sap_get stk_mov_typ where src_wms_sts = @o_arg1 and dst_wms_sts = @o_arg2
|
sl_es_sap_get hst_loc where wms_stk_sts = @o_arg1
|
[select @hst_loc from_loc from dual]
|
sl_es_sap_get hst_loc where wms_stk_sts = @o_arg2
|
[select decode(rtrim(@hst_mov_typ), '322', @hst_loc, '344', @hst_loc, '350', @hst_loc, @from_loc) from dual]",385,1,"20210202172855","","SLIMP_I",""
"GET_INV_STS_TO_LOC","SL_IFD_FLD","MOCA","Get To Host Loc for INV-STS","F","F","F","F","F","F","T","sl_parse arg where i_arg_list = :i_c_ifd_fld_data
|
sl_es_sap_get stk_mov_typ where src_wms_sts = @o_arg1 and dst_wms_sts = @o_arg2
|
sl_es_sap_get hst_loc where wms_stk_sts = @o_arg1
|
[select @hst_loc from_loc from dual]
|
sl_es_sap_get hst_loc where wms_stk_sts = @o_arg2
|
[select decode(rtrim(@hst_mov_typ), '322', @from_loc, '344', @from_loc, '350', @from_loc, @hst_loc) from dual]",387,1,"20210202172855","","SLIMP_I",""
"GET_INVNUM","SL_IFD_FLD","MOCA","Generates an invnum value if one is not provided.","F","F","F","F","F","F","F","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:I_C_IFD_FLD_DATA), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:I_C_IFD_FLD_DATA), @absent_ind_char) abs_char
   from dual]
|
if (:I_C_IFD_FLD_DATA = '' or 
    :I_C_IFD_FLD_DATA = @abs_char or
    :I_C_IFD_FLD_DATA = @nochg_char)
{
    generate next number
        where numcod = 'invnum'
    |
    publish data
        where invnum = @nxtnum
}
else
    publish data where invnum = :I_C_IFD_FLD_DATA",515,5,"20210202172855","","SLIMP_I",""
"GET_INVSLN","SL_IFD_FLD","MOCA","Sets INVSLN value to '0001' if not passed from inbound IFD","F","F","F","F","F","F","T","if (:i_c_invsln = '' or :i_c_invsln = :i_c_sys_absent_ind_char
    or :i_c_invsln = :i_c_sys_nochg_ind_char or :i_c_invsln = :i_c_sys__ind_char)
{
    publish data where invsln = '0000000001'
}
else
{
    publish data where invsln = :i_c_invsln
}
",251,1,"20210202172855","","SLIMP_I",""
"GET_INVSTS_FOR_ORIG_PRG","SL_IFD_FLD","MOCA","Get Inventory Status for the Inventory Status Progression - this only returns an inventory status if only one status is defined for the invsts_prg.","F","T","F","F","F","F","T",":i_c_moca_nq_remote_str
{
    [select count(*) cnt
       from prgmst
      where invsts_prg = :i_c_orig_invsts_prg]
    |
    if (@cnt)
    {
        if (@cnt = 1)
        {
            [select invsts orig_invsts
               from prgmst
              where invsts_prg = :i_c_orig_invsts_prg]
        }
        else
        {
            publish data where orig_invsts = ''
        }
    }
    else
    {
        publish data where orig_invsts = ''
    }
}",459,1,"20210202172855","","SLIMP_I",""
"GET_INVSTS_FOR_PRG","SL_IFD_FLD","MOCA","Get Inventory Status for the Inventory Status Progression - this only returns an inventory status if only one status is defined for the invsts_prg.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
    [select count(*) cnt
       from prgmst
      where invsts_prg = :i_c_invsts_prg]
    |
    if (@cnt)
    {
        if (@cnt = 1)
        {
            [select invsts
               from prgmst
              where invsts_prg = :i_c_invsts_prg]
        }
        else
        {
            publish data where invsts = ''
        }
    }
    else
    {
        publish data where invsts = ''
    }
}",427,9,"20210202172855","","SLIMP_I",""
"GET_INVSTS_FOR_RA","SL_IFD_FLD","MOCA","Get inventory status for RA. We will set invsts based on Supplier and passed in Invsts.","T","T","F","F","F","T","T","{
    publish data where <<OVERSTACKED_ARGS>>
    |
    /* If the coming xml does not contain a rcvsts value, then we should use rcvsts on Supplier Item */
    if (:i_c_rcvsts = '')
    {
        /* Check Supplier Item level first. */
        [select rcvsts ovrd_rcvsts
           from sup_prt
          where supnum = :i_c_supnum
            and client_id = :i_c_client_id
            and prtnum = :i_c_prtnum
            and prt_client_id = :i_c_client_id] catch (-1403)
        |
        if(@? = 0 and @ovrd_rcvsts != '')
        {
            publish data
              where rcvsts = @ovrd_rcvsts
        }
        else
        {
            /* If we did not find it on Supplier Item we should check Supplier next */
            [select rcvsts ovrd_rcvsts
               from supmst
              where supnum = :i_c_supnum
                and client_id = :i_c_client_id]catch(-1403)
            |
            if(@? = 0 and @ovrd_rcvsts != '')
            {
                publish data
                  where rcvsts = @ovrd_rcvsts
            }
            else
            {
                /* If we did not get any setting on Supplier then we will check Item at last */
                [select rcvsts ovrd_rcvsts
                   from prtmst
                  where prtnum = :i_c_prtnum
                    and wh_id_tmpl = :i_c_whse_id
                    and prt_client_id = :i_c_client_id]catch(-1403)
                |
                if(@? = 0 and @ovrd_rcvsts != '')
                {
                    publish data
                      where rcvsts = @ovrd_rcvsts
                }
                else
                {
                   get inbound full validation flag
                   |
                   if (@inb_full_vld_flg)
                   {
                    log full validation error message
                        where err_code = 2005
                            and def_err_msg = @!
                            and argid = "rcvsts"
                            and lookup_argdsc = "rcvsts"
                   }
                   |
                   publish data where rcvsts = ''
                }
            } /* End of Supplier check. */
        } /* End of Supplier Item check. */
    }
    else
    {
        /* We will use rcvsts in RA.*/
        publish data
          where rcvsts = :i_c_rcvsts
    }
}",2355,1,"20210202172855","","SLIMP_I",""
"GET_INVSTS_PRG_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Customer Type","F","T","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from prgmst
where
invsts_prg = :i_c_invsts_prg
and invsts = :i_c_invsts]
}",182,1,"20210202172855","","SLIMP_I",""
"GET_ITEM_VELOCITY_VERB","SL_IFD_FLD","MOCA","Get MOCA verb for Item Velocity","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
publish data where wh_id = @wh_id and velocity_id = :i_c_velocity_id
                     and item_num = :i_c_prtnum and client_id = :i_c_prt_client_id
                     and velocity_type = :i_c_velocity_type and plan_date = :i_c_plan_date
                     and ordnum = :i_c_ordnum and uomcod = :i_c_uomcod
|
if (@client_id ='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    publish data where client_id = @sysparmvalue
}
|
if (@velocity_id != '' )
{
    :i_c_moca_nq_remote_str
    {
        [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
          from item_velocity
        where velocity_id = @velocity_id]
    }
}
else
{
    :i_c_moca_nq_remote_str
    {
        [select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
          from item_velocity
        where item_num  = @item_num
            and client_id = @client_id
            and velocity_type = @velocity_type
            and plan_date = @plan_date
            and wh_id = @wh_id
            and @+ordnum
            and @+uomcod]
    }
}",1143,1,"20210202172855","","SLIMP_I",""
"GET_LENS_SITNAM","SL_IFD_FLD","MOCA","Get Lens Sitnam value as Native Name from warehouse table if the Warehouse Id is passed, otherwise return the native name for the System Id.","F","F","F","F","F","F","T","{
    if (:i_c_wh_id = '' or :i_c_wh_id = @absent_ind_char or :i_c_wh_id = '----')
    {
        publish data
          where fld_val = :i_c_ifd_fld_data
            and evt_sys_id = :i_c_evt_sys_id
        |
        if (@fld_val != '' )
            [select min(native_nam) native_nam
               from sl_sys_def where sys_id = @fld_val]
        else
            [select min(native_nam) native_nam
               from sl_sys_def where sys_id = @evt_sys_id]
    }
    else
    {
        [select lens_sitnam native_nam from wh where wh_id = :i_c_wh_id]
        |
        if (@native_nam = '')
        {
            publish data
              where fld_val = :i_c_ifd_fld_data
                and evt_sys_id = :i_c_evt_sys_id
            |
            if (@fld_val != '')
                [select min(native_nam) native_nam
                   from sl_sys_def where sys_id = @fld_val]
            else
                [select min(native_nam) native_nam
                   from sl_sys_def where sys_id = @evt_sys_id]
        }
        |
        publish data where native_nam = @native_nam
    }
    |
    publish data where native_nam = @native_nam
}",1147,13,"20210202172855","","SLIMP_I",""
"GET_LINEAR","SL_IFD_FLD","MOCA","Algorithm to convert the Linear Unit Measurements like
UNTLEN, UNTWID, CASHGT, NSTLEN etc., as per the host policies.","F","F","F","F","F","F","T","publish data where fld_nam = :i_c_ifd_fld_id and fld_data = to_number(:i_n_ifd_fld_data)
                       and sysid = :i_c_evt_sys_id
|
if (@fld_nam = 'UNTLEN' or @fld_nam = 'UNTWID' or @fld_nam = 'UNTHGT' or @fld_nam = 'UNLEN')
{
    publish data where mu = :i_c_untlen_mu
}
else if (@fld_nam = 'CASLEN' or @fld_nam = 'CASWID' or @fld_nam = 'CASHGT')
{
        publish data where mu = :i_c_caslen_mu
}
else if (@fld_nam = 'NSTLEN' or @fld_nam = 'NSTWID' or @fld_nam = 'NSTHGT')
{
        publish data where mu = :i_c_nstlen_mu
}
else if (@fld_nam = 'PAKLEN' or @fld_nam = 'PAKWID' or @fld_nam = 'PAKHGT')
{
        publish data where mu = :i_c_paklen_mu
}
else if (@fld_nam = 'PALLEN' or @fld_nam = 'PALWID' or @fld_nam = 'PALHGT')
{
        publish data where mu = :i_c_pallen_mu
}
else if (@fld_nam = 'LEN')
{
        publish data where mu = :i_c_len_mu
}
else if (@fld_nam = 'WID')
{
        publish data where mu = :i_c_wid_mu
}
else if (@fld_nam = 'HGT')
{
        publish data where mu = :i_c_hgt_mu
}
|
if (@mu = '')
{
    [select decode(rtstr1, @fld_nam, decode(polvar,@sysid,1,2),
                          decode(rtstr1, 'DEFAULT', decode(polvar, @sysid,3,4),5) ) policy_order,
               poldat_view.*
       from poldat_view
     where polcod = 'HOST-MU'
        and polval = 'LINEAR'
        and @+wh_id
        and (polvar = @sysid
               or polvar = 'DEFAULT')
        and rownum = 1
     order by wh_id,  policy_order] catch (-1403)
    |
    if (@? = 0)
    {
        publish data
          where mu = @rtstr2
    }
}
|
[select cf_numerator cfn,  cf_denominator cfd
   from mu_mst
  where mu = @mu
] catch(-1403)
|
if (@? = 0)
{
    publish data where fld_data = @fld_data * @cfn / @cfd
}
else
{
    publish data where fld_data = @fld_data
}",1777,9,"20210202172855","","SLIMP_I",""
"GET_MANDTE","SL_IFD_FLD","MOCA","Algorithm to determine the manufacturing date","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
sl_get data_attr where src_sys_id = @evt_sys_id and value = @ifd_fld_data
|
if ( @is_absent = 'T' or @is_ = 'T' or @is_nochg = 'T' )
{
    publish data where mandte = 
}
   else
{
    publish data where mandte = @mandte
}",271,1,"20210202172855","","SLIMP_I",""
"GET_MANDTE_FORMAT","SL_IFD_FLD","MOCA","Get the specified format of the Manufacturing Date.","F","F","F","F","F","F","T","/* Get the control properties from les_var_config for manufacture date field for the maximum customization level set */
{
    if(:i_c_mandte != '')
    {
        get les variable configuration
            where var_nam  = 'mandte'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            publish data
                where mandte_fmt = substr(@ctrl_prop, 6, LEN(@ctrl_prop))
        }
        else
        {
            publish data
                where mandte_fmt = ''
        }
    }
    else
    {
        publish data
            where mandte_fmt = ''
    }
}",777,9,"20210202172855","","SLIMP_I",""
"GET_MANDTE_FORMAT_VAL","SL_IFD_FLD","MOCA","Get the Manufacturing Date Value based on the specified format.","F","F","F","F","F","F","T","{
    if(:i_c_mandte != '')
    {
        get les variable configuration
            where var_nam  = 'mandte'
              and appl_id  = 'LES'
              and frm_id   = 'LES'
              and addon_id = 'LES' >> res
        |
        publish top rows
            where rows = 1
              and resultset = @res
        |
        if(@ctrl_prop != '')
        {
            publish data
                where date = :i_c_mandte
                  and fmt_str = substr(@ctrl_prop, 6, LEN(@ctrl_prop))
            |
            format date
                where date = @date
                  and fmt_str = @fmt_str
            |
            publish data
                where mandte_fmtval = @fmt_dte
        }
        else
        {
            publish data
                where mandte_fmtval = ''
        }
    }
    else
    {
        publish data
            where mandte_fmtval = ''
    }
}",901,9,"20210202172855","","SLIMP_I",""
"GET_MASS","SL_IFD_FLD","MOCA","Algorithm to convert the Mass measurements like GRSWGT, NETWGT etc., as per the host policies.","F","F","F","F","F","F","T","publish data where fld_nam = :i_c_ifd_fld_id and fld_data = to_number(:i_n_ifd_fld_data)
                      and sysid = :i_c_evt_sys_id
|
if (@fld_nam = 'GRSWGT')
{
    publish data where mu = :i_c_grswgt_mu
}
else if (@fld_nam = 'NETWGT')
{
        publish data where mu = :i_c_netwgt_mu
}
else if (@fld_nam = 'CATCH_UNTWGT')
{
        publish data where mu = :i_c_catch_untwgt_mu
}
|
if (@mu = '')
{
    [select decode(rtstr1, @fld_nam, decode(polvar,@sysid,1,2),
                          decode(rtstr1, 'DEFAULT', decode(polvar, @sysid, 3, 4), 5) )   policy_order,
               poldat_view.*
       from poldat_view
     where polcod = 'HOST-MU'
        and polval =  'MASS'
        and wh_id = nvl (@wh_id, '----')
        and polvar = nvl (@sysid,'DEFAULT')
     order by wh_id,  policy_order] catch (-1403)
    |
    if (@? = 0)
    {
        publish data
          where mu = @rtstr2
    }
}
|
[select cf_numerator cfn,  cf_denominator cfd
   from mu_mst
  where mu = @mu
] catch(-1403)
|
if (@? = 0)
{
    publish data where fld_data = to_char(@fld_data * @cfn / @cfd)
}
else
{
    publish data where fld_data = to_char(@fld_data)
}",1146,9,"20210202172855","","SLIMP_I",""
"GET_MOCA_SYS_FOR_SYS_ID","SL_IFD_FLD","MOCA","Get MOCA Sys Flag for a System Id","F","F","F","F","F","F","T","publish data
where
      fld_val = :i_c_ifd_fld_data
and   evt_sys_id = :i_c_evt_sys_id
|
if ( @fld_val != '' )
   [select decode(moca_sys_flg,'T','1','F','0','0') moca_sys_flg from sl_sys_def where sys_id = @fld_val]
else
   [select decode(moca_sys_flg,'T','1','F','0','0') moca_sys_flg from sl_sys_def where sys_id = @evt_sys_id]",331,1,"20210202172855","","SLIMP_I",""
"GET_MOVE_ACTUAL","SHIPPING","MOCA","Get the Move Actuals","F","T","F","F","F","F","T","List Carrier Moves RM Where trlr_id = :i_c_trailer_id",53,5,"20210202172855","","SLIMP_I",""
"GET_MOVE_RCVKEY","SL_IFD_FLD","MOCA","Get Receive Key for MOVE IMPORT","F","F","F","F","F","F","","[select rcvkey from rcvlin
              where trknum = :i_c_trknum
                and invnum = :i_c_ordnum
                and wh_id  = :i_c_wh_id]",149,1,"20210202172855","","SLIMP_I",""
"GET_MOVE_STS_STOP_SEG","SL_RETR_MTHD_IMPL","MOCA","Get TM Move Status Stop","F","F","F","F","F","F","","list tms stop move status rm where car_move_id = :i_c_car_move_id",65,1,"20210202172855","","SLIMP_I",""
"GET_MOVE_UNTCAS","SL_IFD_FLD","MOCA","Get Units Per Case for MOVE IMPORT","F","F","F","F","F","F","","[select untcas from prtmst_view
              where prtnum        = :i_c_prtnum
                and prt_client_id = :i_c_prt_client_id
                and wh_id         = :i_c_wh_id]",182,1,"20210202172855","","SLIMP_I",""
"GET_MOVE_UNTPAK","SL_IFD_FLD","MOCA","Get Units Per Pallet for MOVE IMPORT","F","F","F","F","F","F","","[select untpak from prtftp_view
              where prtnum        = :i_c_prtnum
                and prt_client_id = :i_c_prt_client_id
                and wh_id         = :i_c_wh_id]",182,1,"20210202172855","","SLIMP_I",""
"GET_NEXT_SEQ_NO","SL_IFD_FLD","MOCA","Get the next sequence number for the current field","F","F","F","F","F","F","F","/* converting numcod to lowercase for oracle compatibility */
generate next number where numcod =  lower(:I_C_IFD_FLD_ID)",121,1,"20210202172855","","SLIMP_I",""
"GET_ORD_DEF_SERV_ID","SL_IFD_FLD","MOCA","Get the default service ID for Order Line Default Service segment (Required for change transactions)","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select min(def_serv_id) def_serv_id /* :o_c_def_serv_id */
from def_serv
where ordnum = :i_c_ordnum
  and ordlin = :i_c_ordlin
  and ordsln = :i_c_ordsln
  and serv_id = :i_c_serv_id
  and serv_rate_id = :i_c_serv_rate_id
  and def_serv_cod = 'ORDNUMLIN'
  and client_id = :i_c_client_id
  and wh_id = @wh_id]
}",384,1,"20210202172855","","SLIMP_I",""
"GET_ORD_SRVLVL_FROM_GS1","SL_IFD_FLD","MOCA","Get the WMD service level by the passing inbound GS1 service level and carrier code","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@TRANSPORTSERVICECATEGORYTYPE = '100') {
    convert inbound gs1 carrier and service levels to wm
      where gs1_carcod = @CARCOD
         and gs1_srvlvl = @GS1_SRVLVL
    |
    publish data where srvlvl = @wm_srvlvl
}
else {
    publish data where srvlvl = 
}",311,1,"20210202173205","","SLIMP_I",""
"GET_ORDLIN_CAR_SERV_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the order line carrier service option whether it will be created or not.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create ', 'publish data') moca_verb
 from ord_line_serv_opt
where opt_id = :i_c_opt_id
  and wh_id =
:i_c_whse_id
  and ordnum = :i_c_ordnum
  and client_id = :i_c_client_id
  and ordlin = :i_c_ordlin
  and ordsln = :i_c_ordsln]
}",288,5,"20210202172855","","SLIMP_I",""
"GET_ORDLIN_CAR_SERV_VAL_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the order line carrier service option parameter whether it will be created or changed.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb
 from serv_opt_param
where opt_id = :i_c_opt_id
  and wh_id = :i_c_whse_id
  and ordnum = :i_c_ordnum
  and client_id = :i_c_client_id
  and ordlin = :i_c_ordlin
  and ordsln = :i_c_ordsln
  and parm_nam = :i_c_parm_nam]
}",309,5,"20210202172855","","SLIMP_I",""
"GET_ORDLIN_DEF_SERV_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the default service whether it be create or change","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = :i_c_whse_id
  and ordnum = :i_c_ordnum
  and client_id = :i_c_client_id
  and ordlin = :i_c_ordlin
  and ordsln = :i_c_ordsln
  and def_serv_cod = 'ORDNUMLIN']
}",327,5,"20210202172855","","SLIMP_I",""
"GET_ORIGINAL_DOCUMENT_TYPE","SL_IFD_FLD","MOCA","Get the original document type","F","F","F","F","F","F","T","get session variable where name = 'ifd_id'
|
publish data where ifd_id  = @value
|
if ( @ifd_id = 'CANONICAL_TRANSPORT_LOAD' )
{
   publish data where docCode=1001
}
else if ( @ifd_id = 'CANON_TRANSPORT_PICKUP_DROPOFF') 
{
   publish data where docCode=75
}
else if( @ifd_id = 'ORDER' ) 
{
   publish data where docCode=35
}
else if( @ifd_id = 'CANONICAL_DESPATCH_ADVICE' ) 
{
   publish data where docCode=15
}
else if( @ifd_id = 'CANONICAL_PARTY' ) 
{
   publish data where docCode=1004
}
else if( @ifd_id = 'CANONICAL_LOCATION' ) 
{
   publish data where docCode=1005
}
else
{
  /**
    *This section is executed when download failure occurs.
    */
   publish data where docCode = -1
}",689,1,"20210202173615","","SLIMP_I",""
"GET_ORIGINAL_EXPDTE","RECEIVING","MOCA","to get the original expiration date (expdte) from the formatted one.","F","F","F","F","F","F","T","{
    if (:i_c_expdte = :i_c_sys_absent_ind_char or :i_c_expdte = :i_c_sys_nochg_ind_char or :i_c_expdte =                        :i_c_sys__ind_char)
    {
        if ((:i_c_expire_dte_fmtval != :i_c_sys_absent_ind_char and :i_c_expire_dte_fmtval != :i_c_sys_nochg_ind_char and                          :i_c_expire_dte_fmtval != :i_c_sys__ind_char)
            and (:i_c_expire_dte_fmt != :i_c_sys_absent_ind_char and :i_c_expire_dte_fmt != :i_c_sys_nochg_ind_char and                            :i_c_expire_dte_fmt != :i_c_sys__ind_char))
        {
            get translated date where fmt_dte = :i_c_expire_dte_fmtval and fmt_str = :i_c_expire_dte_fmt
        }
        |
        if(@xlt_date = '')
            { publish data where expire_dte = ''}
        else
            { publish data where expire_dte = @xlt_date}
     }
     else
         publish data where expire_dte = :i_c_expdte
}",905,5,"20210202172855","","SLIMP_I",""
"GET_ORIGINAL_EXPIRE_DTE","RECEIVING","MOCA","to get the original expiration date (expire_dte) from the formatted one.","F","F","F","F","F","F","T","{
    if (:i_c_expire_dte = :i_c_sys_absent_ind_char or :i_c_expire_dte = :i_c_sys_nochg_ind_char or :i_c_expire_dte =                        :i_c_sys__ind_char)
    {
        if ((:i_c_expire_dte_fmtval != :i_c_sys_absent_ind_char and :i_c_expire_dte_fmtval != :i_c_sys_nochg_ind_char and                          :i_c_expire_dte_fmtval != :i_c_sys__ind_char)
            and (:i_c_expire_dte_fmt != :i_c_sys_absent_ind_char and :i_c_expire_dte_fmt != :i_c_sys_nochg_ind_char and                            :i_c_expire_dte_fmt != :i_c_sys__ind_char))
        {
            get translated date where fmt_dte = :i_c_expire_dte_fmtval and fmt_str = :i_c_expire_dte_fmt
        }
        |
        if(@xlt_date = '')
            { publish data where expire_dte = ''}
        else
            { publish data where expire_dte = @xlt_date}
     }
     else
         publish data where expire_dte = :i_c_expire_dte
}",921,9,"20210202172855","","SLIMP_I",""
"GET_ORIGINAL_INV_ATTR_DTE1","RECEIVING","MOCA","to get the original inventory attribute date 1(inv_attr_dte1) from the formatted one.","F","F","F","F","F","F","T","{
    if (:i_c_inv_attr_dte1 = :i_c_sys_absent_ind_char or :i_c_inv_attr_dte1 = :i_c_sys_nochg_ind_char or :i_c_inv_attr_dte1 =                       :i_c_sys__ind_char)
    {
        if ((:i_c_inv_attr_dte1_fmt != :i_c_sys_absent_ind_char and :i_c_inv_attr_dte1_fmt != :i_c_sys_nochg_ind_char and :i_c_inv_attr_dte1_fmt                 != :i_c_sys__ind_char)
            and (:i_c_inv_attr_dte1_fmtval != :i_c_sys_absent_ind_char and :i_c_inv_attr_dte1_fmtval != :i_c_sys_nochg_ind_char and                             :i_c_inv_attr_dte1_fmtval != :i_c_sys__ind_char))
        {
            get translated date where fmt_dte = :i_c_inv_attr_dte1_fmtval and fmt_str = :i_c_inv_attr_dte1_fmt
        }
        |
        if(@xlt_date = '')
        { publish data where inv_attr_dte1 = '' }
        else
        { publish data where inv_attr_dte1 = @xlt_date }
    }
    else
        publish data where inv_attr_dte1 = :i_c_inv_attr_dte1
}",948,10,"20210202172855","20210202173205","SLIMP_I","SLIMP_I"
"GET_ORIGINAL_INV_ATTR_DTE2","RECEIVING","MOCA","to get the original inventory attribute date 2(inv_attr_dte2) from the formatted one.","F","F","F","F","F","F","T","{
    if (:i_c_inv_attr_dte2 = :i_c_sys_absent_ind_char or :i_c_inv_attr_dte2 = :i_c_sys_nochg_ind_char or :i_c_inv_attr_dte2 =                       :i_c_sys__ind_char)
    {
        if ((:i_c_inv_attr_dte2_fmt != :i_c_sys_absent_ind_char and :i_c_inv_attr_dte2_fmt != :i_c_sys_nochg_ind_char and :i_c_inv_attr_dte2_fmt                 != :i_c_sys__ind_char)
            and (:i_c_inv_attr_dte2_fmtval != :i_c_sys_absent_ind_char and :i_c_inv_attr_dte2_fmtval != :i_c_sys_nochg_ind_char and                             :i_c_inv_attr_dte2_fmtval != :i_c_sys__ind_char))
        {
            get translated date where fmt_dte = :i_c_inv_attr_dte2_fmtval and fmt_str = :i_c_inv_attr_dte2_fmt
        }
        |
        if(@xlt_date = '')
        { publish data where inv_attr_dte2 = '' }
        else
        { publish data where inv_attr_dte2 = @xlt_date }
    }
    else
        publish data where inv_attr_dte2 = :i_c_inv_attr_dte2
}",948,10,"20210202172855","20210202173205","SLIMP_I","SLIMP_I"
"GET_ORIGINAL_MANDTE","RECEIVING","MOCA","to get the original manufacture date (mandte) from the formatted one.","F","F","F","F","F","F","T","{
    if (:i_c_mandte = :i_c_sys_absent_ind_char or :i_c_mandte = :i_c_sys_nochg_ind_char or :i_c_mandte =                       :i_c_sys__ind_char)
    {
        if ((:i_c_mandte_fmt != :i_c_sys_absent_ind_char and :i_c_mandte_fmt != :i_c_sys_nochg_ind_char and :i_c_mandte_fmt                 != :i_c_sys__ind_char)
            and (:i_c_mandte_fmtval != :i_c_sys_absent_ind_char and :i_c_mandte_fmtval != :i_c_sys_nochg_ind_char and                             :i_c_mandte_fmtval != :i_c_sys__ind_char))
        {
            get translated date where fmt_dte = :i_c_mandte_fmtval and fmt_str = :i_c_mandte_fmt
        }
        |
        if(@xlt_date = '')
        { publish data where mandte = '' }
        else
        { publish data where mandte = @xlt_date }
    }
    else
        publish data where mandte = :i_c_mandte
}",843,9,"20210202172855","","SLIMP_I",""
"GET_OUB_CASLEN_MU","SL_IFD_FLD","MOCA","Algorithm to get the MU of the fields CASLEN_MU, CASWID_MU, CASHGT_MU.","F","F","F","F","F","F","T","[select rtstr2 mu   from poldat   where polcod = 'HOST-MU'     and polvar = :i_c_dest_sys_id    and polval = 'LINEAR'     and (rtstr1 in ('caslen', 'caswid', 'cashgt')          or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc]catch (-1403) |if (@? = -1403){    [select rtstr2 mu       from poldat      where polcod = 'HOST-MU'        and polvar = 'DEFAULT'        and polval = 'LINEAR'        and rtstr1 = 'DEFAULT'
        and wh_id_tmpl = '----'] catch (-1403)}|if (@mu != ' '){    publish data where caslen_mu = @mu}else{    publish data where caslen_mu = 'Undefined'}",609,1,"20210202172855","","SLIMP_I",""
"GET_OUB_CATCH_UNTWGT_MU","SL_IFD_FLD","MOCA","Algorithm to get the MU of the Catch Unit Weight field.","F","F","F","F","F","F","T","[select rtstr2 mu   from poldat   where polcod = 'HOST-MU'     and polvar = :i_c_dest_sys_id    and polval = 'MASS'     and (rtstr1 = 'catch_untwgt'          or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc]catch (-1403)|if (@? = -1403){    [select rtstr2 mu       from poldat      where polcod = 'HOST-MU'        and polvar = 'DEFAULT'        and polval = 'MASS'        and rtstr1 = 'DEFAULT'] catch (-1403)}|if (@mu != ' '){    publish data where catch_untwgt_mu = @mu}else{    publish data where catch_untwgt_mu = 'Undefined'}",567,1,"20210202172855","","SLIMP_I",""
"GET_OUB_GRSWGT_MU","SL_IFD_FLD","MOCA","Algorithm to get the MU of the Gross Weight field.","F","F","F","F","F","F","T","[select rtstr2 mu   from poldat   where polcod = 'HOST-MU'     and polvar = :i_c_dest_sys_id    and polval = 'MASS'     and (rtstr1 = 'grswgt'          or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc]catch (-1403) |if (@? = -1403){    [select rtstr2 mu       from poldat      where polcod = 'HOST-MU'        and polvar = 'DEFAULT'        and polval = 'MASS'        and rtstr1 = 'DEFAULT'
        and wh_id_tmpl = '----'] catch (-1403)}|if (@mu != ' '){    publish data where grswgt_mu = @mu}else{    publish data where grswgt_mu = 'Undefined'}",582,1,"20210202172855","","SLIMP_I",""
"GET_OUB_LINEAR","SL_IFD_FLD","MOCA","Algorithm to convert the Linear measurements in the outbound transactions as per the To-Host policies.","F","F","F","F","F","F","T","publish data where fld_data = to_number(:i_n_ifd_fld_data)|[select rtstr2 mu   from poldat  where polcod    = 'HOST-MU'    and polvar    = :i_c_dest_sys_id    and polval    = 'LINEAR'    and (rtstr1   = :i_c_ifd_fld_id        or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc] catch(-1403) |if (@mu != ' '){    [select cf_numerator cfn,  cf_denominator cfd       from mu_mst      where mu = @mu] catch(-1403)    |    if (@? = 0)     {        publish data where fld_data = @fld_data * @cfd / @cfn    } }|publish data where fld_data = @fld_data",579,1,"20210202172855","","SLIMP_I",""
"GET_OUB_MASS","SL_IFD_FLD","MOCA","Algorithm to convert the Mass measurements in the outbound transactions as per the To-Host policies.","F","F","F","F","F","F","T","publish data where fld_data = to_number(:i_n_ifd_fld_data)
|
[select rtstr2 mu
   from poldat
  where polcod     = 'HOST-MU'
    and polvar     = :i_c_dest_sys_id
    and polval     = 'MASS'
    and (rtstr1    = :i_c_ifd_fld_id
        or rtstr1  = 'DEFAULT')
    and wh_id_tmpl = :i_c_whseid
    and rownum < 2
  order by srtseq desc] catch(-1403)
|
if (@? = -1403)
{
  [select rtstr2 mu
   from poldat
  where polcod     = 'HOST-MU'
    and polvar     = :i_c_dest_sys_id
    and polval     = 'MASS'
    and (rtstr1    = :i_c_ifd_fld_id
        or rtstr1  = 'DEFAULT')
    and wh_id_tmpl = '----'
    and rownum < 2
  order by srtseq desc] catch(-1403)
}
else
{
   publish data where mu = @mu
}
|
if (@mu != ' ')
{
    [select cf_numerator cfn,  cf_denominator cfd
       from mu_mst
      where mu = @mu] catch(-1403)
    |
    if (@? = 0)
    {
        publish data where fld_data = @fld_data * @cfd / @cfn
    }
}
|

/*

As the field length of the mass fields in LM transactions are
less, we need to do a substr to avoid the possible truncations
due to the trimming of characters in transactions.

*/

if (:i_c_evt_id = 'LM-TRANS')
{
    publish data where fld_data = substr(@fld_data,1,8)
    |
    [select round(@fld_data,4) fld_data
       from dual]
}
else
{
    publish data where fld_data = @fld_data
}",1312,1,"20210202172855","","SLIMP_I",""
"GET_OUB_NETWGT_MU","SL_IFD_FLD","MOCA","Algorithm to get the MU of the Net Weight field.","F","F","F","F","F","F","T","[select rtstr2 mu   from poldat   where polcod = 'HOST-MU'     and polvar = :i_c_dest_sys_id    and polval = 'MASS'     and (rtstr1 = 'netwgt'         or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc]catch (-1403) |if (@? = -1403){    [select rtstr2 mu       from poldat      where polcod = 'HOST-MU'        and polvar = 'DEFAULT'        and polval = 'MASS'        and rtstr1 = 'DEFAULT'
        and wh_id_tmpl = '----'] catch (-1403)}|if (@mu != ' '){    publish data where netwgt_mu = @mu}else{    publish data where netwgt_mu = 'Undefined'}",581,1,"20210202172855","","SLIMP_I",""
"GET_OUB_NSTLEN_MU","SL_IFD_FLD","MOCA","Algorithm to get the MU of the fields NSTLEN_MU, NSTWID_MU, NSTHGT_MU.","F","F","F","F","F","F","T","[select rtstr2 mu   from poldat   where polcod = 'HOST-MU'     and polvar = :i_c_dest_sys_id    and polval = 'LINEAR'     and (rtstr1 in ('nstlen', 'nstwid', 'nsthgt')          or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc]catch (-1403) |if (@? = -1403){    [select rtstr2 mu       from poldat      where polcod = 'HOST-MU'        and polvar = 'DEFAULT'        and polval = 'LINEAR'        and rtstr1 = 'DEFAULT'
        and wh_id_tmpl = '----'] catch (-1403)}|if (@mu != ' '){    publish data where nstlen_mu = @mu}else{    publish data where nstlen_mu = 'Undefined'}",609,1,"20210202172855","","SLIMP_I",""
"GET_OUB_PAKLEN_MU","SL_IFD_FLD","MOCA","Algorithm to get the MU of the fields PAKLEN_MU, PAKWID_MU, PAKHGT_MU.","F","F","F","F","F","F","T","[select rtstr2 mu   from poldat   where polcod = 'HOST-MU'     and polvar =  :i_c_dest_sys_id    and polval = 'LINEAR'     and (rtstr1 in ('paklen', 'pakwid', 'pakhgt')          or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc]catch (-1403) |if (@? = -1403){    [select rtstr2 mu       from poldat      where polcod = 'HOST-MU'        and polvar = 'DEFAULT'        and polval = 'LINEAR'        and rtstr1 = 'DEFAULT'
        and wh_id_tmpl = '----'] catch (-1403)}|if (@mu != ' '){    publish data where paklen_mu = @mu}else{    publish data where paklen_mu = 'Undefined'}",610,1,"20210202172855","","SLIMP_I",""
"GET_OUB_PALLEN_MU","SL_IFD_FLD","MOCA","Algorithm to get the MU of the fields PALLEN_MU, PALWID_MU, PALHGT_MU.","F","F","F","F","F","F","T","[select rtstr2 mu   from poldat   where polcod = 'HOST-MU'     and polvar =  :i_c_dest_sys_id    and polval = 'LINEAR'     and (rtstr1 in ('pallen', 'palwid', 'palhgt')          or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc]catch (-1403) |if (@? = -1403){    [select rtstr2 mu       from poldat      where polcod = 'HOST-MU'        and polvar = 'DEFAULT'        and polval = 'LINEAR'        and rtstr1 = 'DEFAULT'
        and wh_id_tmpl = '----'] catch (-1403)}|if (@mu != ' '){    publish data where pallen_mu = @mu}else{    publish data where pallen_mu = 'Undefined'}",610,1,"20210202172855","","SLIMP_I",""
"GET_OUB_UNTLEN_MU","SL_IFD_FLD","MOCA","Algorithm to get the MU of the fields UNTLEN_MU, UNTWID_MU, UNTHGT_MU.","F","F","F","F","F","F","T","[select rtstr2 mu   from poldat   where polcod = 'HOST-MU'     and polvar = :i_c_dest_sys_id    and polval = 'LINEAR'     and (rtstr1 in ('untlen', 'untwid', 'unthgt')          or rtstr1 = 'DEFAULT')
    and wh_id_tmpl = '----' and rownum < 2 order by srtseq desc]catch (-1403) |if (@? = -1403){    [select rtstr2 mu       from poldat      where polcod = 'HOST-MU'        and polvar = 'DEFAULT'        and polval = 'LINEAR'        and rtstr1 = 'DEFAULT'
        and wh_id_tmpl = '----'] catch (-1403)}|if (@mu != ' '){    publish data where untlen_mu = @mu}else{    publish data where untlen_mu = 'Undefined'}",609,1,"20210202172855","","SLIMP_I",""
"GET_OUB_VOLUME","SL_IFD_FLD","MOCA","Algorithm to convert the Mass measurements in the outbound transactions as per the To-Host policies.","F","F","F","F","F","F","T","publish data where fld_data = to_number(:i_n_ifd_fld_data)
|
[select rtstr2 mu
   from poldat
  where polcod     = 'HOST-MU'
    and polvar     = :i_c_dest_sys_id
    and polval     = 'VOLUME'
    and (rtstr1    = :i_c_ifd_fld_id
        or rtstr1  = 'DEFAULT')
    and wh_id_tmpl = :i_c_whseid
    and rownum < 2
  order by srtseq desc] catch(-1403)
|
if (@? = -1403)
{
  [select rtstr2 mu
   from poldat
  where polcod     = 'HOST-MU'
    and polvar     = :i_c_dest_sys_id
    and polval     = 'VOLUME'
    and (rtstr1    = :i_c_ifd_fld_id
        or rtstr1  = 'DEFAULT')
    and wh_id_tmpl = '----'
    and rownum < 2
  order by srtseq desc] catch(-1403)
}
else
{
   publish data where mu = @mu
}
|
if (@mu != ' ')
{
    [select cf_numerator cfn,  cf_denominator cfd
       from mu_mst
      where mu = @mu] catch(-1403)
    |
    if (@? = 0)
    {
        publish data where fld_data = @fld_data * @cfd / @cfn
    }
}
|

/*

As the field length of the mass fields in LM transactions are
less, we need to do a substr to avoid the possible truncations
due to the trimming of characters in transactions.

*/

if (:i_c_evt_id = 'LM-TRANS')
{
    publish data where fld_data = substr(@fld_data,1,8)
    |
    [select round(@fld_data,4) fld_data
       from dual]
}
else
{
    publish data where fld_data = @fld_data
}",1316,1,"20210202172855","","SLIMP_I",""
"GET_PART_LOT_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Part Lot","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
   from prtlot
 where lotnum = :i_c_lotnum
    and prtnum = :i_c_prtnum
    and prt_client_id = :i_c_prt_client_id
    and wh_id = :i_c_wh_id]
}",252,1,"20210202172855","","SLIMP_I",""
"GET_PART_SHORTAGE_INFO","SL_RETR_MTHD_IMPL","MOCA","Get Item Shortage Event Output","F","F","F","F","F","F","T","publish data where wh_id = :i_c_wh_id and prtnum =:i_c_prtnum and prt_client_id = :i_c_prt_client_id and bto_subst_prtnum = :i_c_bto_subst_prtnum and client_id = :i_c_client_id and ship_id = :i_c_ship_id and ship_line_id = :i_c_ship_line_id and ordnum = :i_c_ordnum and ordlin = :i_c_ordlin and ordsln = :i_c_ordsln and ordqty= :i_c_ordqty and avalqty = :i_c_avalqty",366,1,"20210202172855","","SLIMP_I",""
"GET_PARTIALDOCCHANGE_FOR_WOI","SL_IFD_FLD","MOCA","Get DocumentChangePartial value for shipment update based on action take on shipment/shipment_line.","F","F","F","F","F","F","T","if (:i_c_action_code = 'CHANGE_BY_REFRESH' and :i_c_line_action_code = 'CANCELLED')
{
   publish data where value = 'true'
}
else if (:i_c_action_code = 'CHANGE_BY_REFRESH' and :i_c_line_action_code = 'DELETED')
{
   publish data where value = 'true'
}
else
{
    publish data where value = 'false'
}",300,1,"20210202173557","","SLIMP_I",""
"GET_PCKQTY_FOR_MNT_WO","SL_IFD_FLD","MOCA","Get the pckqty for mnt wo","F","F","F","F","F","F","T","if(':i_c_moca_verb' = 'create')
{
    [select to_number(decode(:i_c_ordqty,'',0,:i_c_ordqty)) pckqty from dual]
}
else
{   [select linsts tmp_linsts
       from wkodtl
      where wkonum = :i_c_wkonum
        and wkorev = :i_c_wkorev
        and wkolin = :i_c_wkolin
        and client_id = :i_c_client_id
        and wh_id = :i_c_whse_id]
    |
    if (@tmp_linsts = 'P')
    {
       [select to_number(decode(:i_c_ordqty,'',0,:i_c_ordqty)) pckqty from dual]
    }
    else
    {
       if(:i_c_pckqty = '')
       {
          publish data where tem_pckqty = 0
       }
       else
       {
           publish data where tem_pckqty = :i_c_pckqty
       }
       |
       [select linqty o_linqty
          from wkodtl
         where client_id = :i_c_client_id
           and wkonum = :i_c_wkonum
           and wkorev = :i_c_wkorev
           and wh_id = :i_c_whse_id
           and wkolin = :i_c_wkolin] catch(-1403)
       |
       if (@? = 0)
       {
            [select to_number(@tem_pckqty) + to_number(decode(:i_c_ordqty,'',0,:i_c_ordqty)) - @o_linqty pckqty                from dual]
       }
    }
}
|
sl_apply num_format where i_value = @pckqty and i_format = :I_C_FLD_FMT",1183,1,"20210202172855","","SLIMP_I",""
"GET_RCV_TRK_DETAILS","SL_RETR_MTHD_IMPL","MOCA","fetching the triler details for receiving trailer","F","F","F","F","F","F","F","[select trlr.* 
    from rcvtrk,
            trlr
where trlr.trlr_id = rcvtrk.trlr_id  
    and rcvtrk.trknum = :i_c_trknum
	and rownum = 1]catch(-1403)",152,1,"20210202173506","","SLIMP_I",""
"GET_REMOTE_STRING","SL_IFD_FLD","MOCA","Get Remote Execute String","F","F","F","F","F","F","T","sl_list sys_def where sys_id = :i_c_dest_sys_id
|
if (@service and @service != '' and @sl_host_sys_flg and @sl_host_sys_flg = 'F') {
    publish data where
    moca_nq_remote_str =  'remote("' || @service || '") '
}
else {
    publish data where moca_nq_remote_str =''
}",270,1,"20210202172855","","SLIMP_I",""
"GET_REMOTE_STRING_FOR_ASN","SL_IFD_FLD","MOCA","Get Remote String For Interplant ASN Transfer","F","F","F","F","F","F","T","[select min(sys_id) sys_id from sl_sys_def where native_nam = :i_c_ifd_fld_data]
|
sl_list sys_def where sys_id = @sys_id
|
if (@service and @service != '') {
    publish data where
    moca_nq_remote_str =  'remote("' || @service || '") '
}
else {
    publish data where moca_nq_remote_str =''
}",296,1,"20210202172855","","SLIMP_I",""
"GET_RET_DTL_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Returns Detail","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from retdtl
where rmanum = :i_c_rmanum
  and lin_num = :i_c_lin_num
  and wh_id = @wh_id]
}",245,1,"20210202172855","","SLIMP_I",""
"GET_RET_HDR_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Returns Header","F","T","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
:i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from rethdr
where
rmanum = :i_c_rmanum
  and wh_id = @wh_id]
}",216,1,"20210202172855","","SLIMP_I",""
"GET_RFID_URN","SL_IFD_FLD","MOCA","Convert the tag id to a URN with the format based upon the customer","F","F","F","F","F","F","T","if (:i_c_ifd_fld_data is not )
{
   [select stcust,
           rtcust,
           btcust
      from ord
     where client_id = :i_c_client_id
       and ordnum = :i_c_ordnum] catch (-1403)
   |
   if (@stcust > '')
   {
      [select   urn_format
         from   cstmst
        where   cstnum = @stcust
          and   client_id = :i_c_client_id] catch (-1403)
   }
   |
   if (@rtcust > '' and @urn_format is )
   {
      [select   urn_format
         from   cstmst
        where   cstnum = @rtcust
          and   client_id = :i_c_client_id] catch (-1403)
   }
  |
   if (@btcust > '' and @urn_format is )
   {
      [select   urn_format
         from   cstmst
        where   cstnum = @btcust
          and   client_id = :i_c_client_id] catch (-1403)
   }
    |
   convert tag id to urn
     where tag_id = :i_c_ifd_fld_data
       and client_id = :i_c_client_id
   |
   publish data where o_value = @urn
}
else
{
   publish data where o_value = ''
}",965,5,"20210202172855","","SLIMP_I",""
"GET_ROUTE_STOP_VERB","SL_IFD_FLD","MOCA","Get Route Stop Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(route_id), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  cst_wh_schedule
where
  route_id = :i_c_route_id and
  wh_id = :i_c_wh_id and
  cstnum = :i_c_cstnum and
  client_id = :i_c_client_id and
  stop_seq = :i_c_stop_seq]
}",293,1,"20210202172855","","SLIMP_I",""
"GET_ROUTE_VERB","SL_IFD_FLD","MOCA","Get Route Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(car_move_id), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  car_move
where
  route_id = :i_c_route_id]
}",173,1,"20210202172855","","SLIMP_I",""
"GET_RT_HOST_ADR_ID","SL_IFD_FLD","MOCA","Get the Host External ID for the Route To address on the order.","T","T","F","F","F","F","T","{
    [select host_ext_id
       from adrmst
      where adr_id = :i_c_rt_adr_id
        and client_id = :i_c_client_id]
}",122,1,"20210202172855","","SLIMP_I",""
"GET_SAL10_ADRMST_VERB","SL_IFD_FLD","MOCA","Get Address Master Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(adr_id), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  adrmst
where
  host_ext_id = :i_c_host_ext_id and
  client_id = :i_c_client_id ]
}",206,17,"20210202172855","","SLIMP_I",""
"GET_SHIP_DATE_FROM_GS1","SL_IFD_FLD","MOCA","Takes in a date and time and returns a time at the start of the day in the warehouse timezone.","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_ship_date), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_ship_date), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_ship_date != '' or :i_c_ship_date != @abs_char or :i_c_ship_date != @nochg_char)
{
    [select LPAD(@nochg_ind_char, length(:i_c_ship_time), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_ship_time), @absent_ind_char) abs_char
    from dual]
	|
	if (:i_c_ship_time != '' or :i_c_ship_time != @abs_char or :i_c_ship_time != @nochg_char)
		get datetime from gs1 date and time where date = :i_c_ship_date and time = :i_c_ship_time
}
else
      publish data where res = ''",737,1,"20210202173249","","SLIMP_I",""
"GET_SHIP_LINE_SUMMARY_FOR_LENS","SL_RETR_MTHD_IMPL","MOCA","Get the Shipment Line Summary Info for Lens","F","F","F","F","F","F","T","List Shipment Lines Summary RM
where ship_id = :i_c_ship_id and ship_line_id = :i_c_ship_line_id and ordnum=:i_c_ordnum and client_id=:i_c_client_id",148,9,"20210202172855","","SLIMP_I",""
"GET_SHIP_MOCA_VERB","SL_IFD_FLD","MOCA","Get the moca_verb for a shipment segment","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str {     [ select decode(min('x'), , 'create', 'change') moca_verb         from shipment        where ship_id = :i_c_shipmentnumber ] } |  save session variable where name = 'moca_verb_shipment'   and value = @moca_verb | publish data   where moca_verb = @moca_verb",290,1,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_ACTUAL","SHIPPING","MOCA","Get the Shipment Actuals","F","T","F","F","F","F","T","List Shipments For Carrier Move RM where car_move_id = :i_c_car_move_id  and stop_id = :i_c_stop_id
|
get translated warehouse ID
|
[select @car_move_id car_move_id,
        @src_host src_host,
        @src_port src_port,
        @trans_wh_id trans_wh_id,
        shipment.*
   from shipment
  where shipment.ship_id = @ship_id]
",329,5,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_LINE_ACTUAL","SHIPPING","MOCA","Get the Shipment Line Actuals","F","T","F","F","F","F","T","List Shipment Lines With Part where ship_id = :i_c_ship_id",58,1,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_LINE_ACTUAL_V6.0","SHIPPING","MOCA","Get the Shipment Line Actuals","F","F","F","F","F","F","T","List Shipment Lines With Part RM
where ship_id = :i_c_ship_id and ordnum=:i_c_ordnum and client_id=:i_c_client_id catch (-1403, 510)",132,5,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_LINE_INFO","SL_RETR_MTHD_IMPL","MOCA","Get shipment line info through ship id","F","F","F","F","F","F","F","list gs1 shipment line item info where ship_id = :i_c_ship_id and wh_id = :i_c_wh_id",84,1,"20210202173415","","SLIMP_I",""
"GET_SHIPMENT_LINE_SEG","SL_RETR_MTHD_IMPL","MOCA","Get TM Shipment Line Actuals","F","F","F","F","F","F","","list tms shipment line actuals rm where ship_id = :i_c_ship_id",62,1,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_LINE_STATUS","SL_RETR_MTHD_IMPL","MOCA","Get TM Shipment Line Status","F","F","F","F","F","F","","list tms shipment line move status rm where ship_id = :i_c_ship_id
|
publish data
  where ship_line_id = @ship_line_id
    and client_id    = @client_id
    and ordnum       = @ordnum
    and ordtyp       = @ordtyp
    and ordlin       = @ordlin
    and ordsln       = @ordsln
    and pckqty       = @pckqty + @inpqty + @stgqty + @shpqty
",338,1,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_LOAD_ACTUAL","SHIPPING","MOCA","Get the Shipment Load Actuals","F","T","F","F","F","F","T","List Inventory for Shipments where ship_id = :i_c_ship_id",57,1,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_LOAD_ACTUAL_V6.0","SHIPPING","MOCA","Get the Shipment Load Actuals","F","F","F","F","F","F","T","List Inventory for Shipments RM
where ship_id = :i_c_ship_id
and client_id = :i_c_client_id
and ordnum = :i_c_ordnum
and ordlin = :i_c_ordlin
and ordsln = :i_c_ordsln",166,5,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_PARCEL_ACT_V6.0","SHIPPING","MOCA","Get the Parcel Actuals","F","F","F","F","F","F","T","List Parcels for Shipment RM
where ship_id = :i_c_ship_id
and client_id = :i_c_client_id
and ordnum = :i_c_ordnum
and wh_id = :i_c_wh_id",136,5,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_PARCEL_ACTUAL","SHIPPING","MOCA","Get the Parcel Actuals","F","T","F","F","F","F","T","List Parcels for Shipment where ship_id = :i_c_ship_id",54,1,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_SEG","SL_RETR_MTHD_IMPL","MOCA","Get TM Shipment Actuals","F","F","F","F","F","F","","list tms shipment actuals rm where stop_id = :i_c_stop_id and ltl_stop_adr_id = :i_c_adr_id",91,1,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_SER_NUM","SHIPPING","MOCA","Get inventory serial number info","F","F","F","F","F","F","T","list inventory serial numbers rm
where lodnum = :i_c_lodnum
  and subnum = :i_c_subnum
  and dtlnum = :i_c_dtlnum
  and inv_hist_id = :i_c_inv_hist_id catch (-1403, 510)",169,9,"20210202172855","","SLIMP_I",""
"GET_SHIPMENT_STATUS","SL_RETR_MTHD_IMPL","MOCA","Get TM Shipment Status","F","F","F","F","F","F","","list tms shipment move status rm where stop_id = :i_c_stop_id",61,1,"20210202172855","","SLIMP_I",""
"GET_SHPPRC_STS_INFO","SL_RETR_MTHD_IMPL","MOCA","Get Shipment Process Status Info","F","F","F","F","F","F","T","[select wh_id, host_ext_id, host_client_id from shipment where ship_id = :i_c_ship_id] | publish data where wh_id = @wh_id and host_ext_id = @host_ext_id and host_client_id = @host_client_id and ship_id = :i_c_ship_id and shpprc_sts = :i_c_shpprc_sts",250,1,"20210202172855","","SLIMP_I",""
"GET_SITCOD","SL_IFD_FLD","MOCA","Get the Facility's Site Code from the policy","T","T","F","F","F","F","T","{
    [select rtstr1 sitcod
       from poldat
      where polcod = 'SYSTEM-INFORMATION'
        and polvar = 'MISCELLANEOUS'
        and polval = 'SITE-CODE'] catch (-1403)
    |
    if ((@? = -1403) or (@sitcod = ''))
    {
        publish data where sitcod = 'DCS'
    }
    else
        publish data where sitcod = @sitcod
}",328,13,"20210202172855","","SLIMP_I",""
"GET_SRVLVL_FROM_GS1","SL_IFD_FLD","MOCA","Takes in a date and time and returns a time at the start of the day in the warehouse timezone.","F","F","F","F","F","F","T","if(:i_c_carcod !=  and :I_C_IFD_FLD_DATA != )
{
  convert inbound gs1 carrier and service levels to wm
     where gs1_carcod = :i_c_carcod 
         and gs1_srvlvl = :I_C_IFD_FLD_DATA
}

|
publish data where srvlvl = @wm_srvlvl",235,1,"20210202173249","","SLIMP_I",""
"GET_ST_HOST_ADR_ID","SL_IFD_FLD","MOCA","Get the Host External ID for the Bill To address on the order.","T","T","F","F","F","F","T","{
    [select host_ext_id
       from adrmst
      where adr_id = :i_c_st_adr_id
        and client_id = :i_c_client_id]
}",122,1,"20210202172855","","SLIMP_I",""
"GET_STOP_ACTUAL","SHIPPING","MOCA","Get the Stop Actuals","F","T","F","F","F","F","T","List Stops RM Where car_move_id = :i_c_car_move_id",50,5,"20210202172855","","SLIMP_I",""
"GET_STOP_HOST_ADR_ID","SL_IFD_FLD","MOCA","Get the Host External ID for the Stop address on the traffic plan.","T","T","F","F","F","F","T","{
    [select host_ext_id
       from adrmst
      where adr_id = :i_c_adress_id
        and client_id = :i_c_adr_client_id]
}",126,1,"20210202172855","","SLIMP_I",""
"GET_STOP_ID_SEQ","SL_IFD_FLD","MOCA","Get the next stop id sequence number","F","F","F","F","F","F","T","if (':i_c_moca_verb' = 'create') {     generate next number        where numcod = 'stop_id'     |     publish data       where stop_id = @nxtnum } else { {     [ select st.stop_id         from stop st,              car_move cm        where cm.tms_load_id = :i_c_loadid          and cm.car_move_id = st.car_move_id          and st.stop_seq = :i_c_stopnumber ] } }",362,1,"20210202172855","","SLIMP_I",""
"GET_STOP_MOCA_VERB","SL_IFD_FLD","MOCA","Get the moca_verb for Stop transactions","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str {     [ select decode(min('x'), , 'create', 'change')         from stop st,              car_move cm        where cm.tms_load_id = :i_c_loadid          and cm.car_move_id = st.car_move_id          and st.stop_seq = :i_c_stopnumber ] }",262,1,"20210202172855","","SLIMP_I",""
"GET_STOP_SEG","SL_RETR_MTHD_IMPL","MOCA","Get TM Stop Actuals","F","F","F","F","F","F","","list tms stop actuals rm where car_move_id = :i_c_car_move_id",61,1,"20210202172855","","SLIMP_I",""
"GET_STORE_LOC_VERB","SL_IFD_FLD","MOCA","Get Store Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(cstnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  cst_wh_dst_loc
where
  cstnum = :i_c_cstnum and
  client_id = :i_c_client_id and
  wh_id = :i_c_wh_id and
  srtseq = :i_c_srtseq and
  dst_mov_zone_id = :i_c_dst_mov_zone_id]
}",300,1,"20210202172855","","SLIMP_I",""
"GET_STORE_PUT_FLD_VERB","SL_IFD_FLD","MOCA","Get Store Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(cstnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  cst_wh_put_to_loc_field
where
  cstnum = :i_c_cstnum and
  client_id = :i_c_client_id and
  wh_id = :i_c_wh_id and
  srtseq = :i_c_srtseq and
  arecod = :i_c_arecod
]
}",292,1,"20210202172855","","SLIMP_I",""
"GET_STORE_PUT_LOC_VERB","SL_IFD_FLD","MOCA","Get Store Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(cstnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  cst_wh_put_to_loc
where
  cstnum = :i_c_cstnum and
  client_id = :i_c_client_id and
  wh_id = :i_c_wh_id and
  srtseq = :i_c_srtseq and
  arecod = :i_c_arecod
]
}",286,1,"20210202172855","","SLIMP_I",""
"GET_STORE_SCHED_VERB","SL_IFD_FLD","MOCA","Get Store Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(cstnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  cst_wh_schedule
where
  cstnum = :i_c_cstnum and
  client_id = :i_c_client_id and
  wh_id = :i_c_wh_id and
  route_id = :i_c_route_id and
  begdaycod = :i_c_begdaycod and
  begtim = to_date(:i_c_begtim) and
  enddaycod = :i_c_enddaycod and
  endtim = to_date(:i_c_endtim)
]
}",399,1,"20210202172855","","SLIMP_I",""
"GET_STORE_VERB","SL_IFD_FLD","MOCA","Get Store Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[
select
     decode(min(cstnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  wh_cstmst
where
  cstnum = :i_c_cstnum and
  client_id = :i_c_client_id and
  wh_id = @wh_id]
}",265,1,"20210202172855","","SLIMP_I",""
"GET_SUP_PRT_VERB","SL_IFD_FLD","MOCA","Get Customer Item Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(supnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  sup_prt
where
  supnum = :i_c_supnum and
  client_id = :i_c_client_id  and prtnum = :i_c_prtnum
                  and prt_client_id = :i_c_prt_client_id
]
}",280,5,"20210202172855","","SLIMP_I",""
"GET_SUP_PRTFTP_VERB","SL_IFD_FLD","MOCA","Get Customer Item Footprint Code Verb.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[
select
     decode(min(supnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from
  sup_prtftp
where
  supnum = :i_c_supnum and
  client_id = :i_c_client_id  and prtnum = :i_c_prtnum
                  and prt_client_id = :i_c_prt_client_id
]
}",283,5,"20210202172855","","SLIMP_I",""
"GET_SUPNUM","SL_IFD_FLD","MOCA","Get Supplier Number","F","F","F","F","F","F","T","[ select supnum
    from supmst
    join adrmst
      on supmst.adr_id = adrmst.adr_id
   where adrmst.client_id   = :i_c_client_id
     and adrmst.host_ext_id = :i_c_sf_host_ext_id ]",183,1,"20210202172855","","SLIMP_I",""
"GET_TMS_CAR_MOVE_ACT","SL_RETR_MTHD_IMPL","MOCA","Get TMS Carrier Move Information for Actuals Export","F","F","F","F","F","F","T","[select cm.doc_num,
        decode (nvl(ch.scacod, '0'),'0',cm.carcod, ch.scacod) carcod,
        sh.srvlvl,
        cm.trans_mode,
        trl.trlr_num,
        cm.track_num
   from carhdr ch,
        shipment sh,
        stop st,
        car_move cm,
        trlr trl
  where trl.trlr_id = :i_c_trlr_id
    and trl.trlr_id = cm.trlr_id
    and cm.car_move_id = st.car_move_id
    and st.stop_id = sh.stop_id
    and cm.carcod = ch.carcod
group by cm.doc_num,
         ch.scacod,
         cm.carcod, sh.srvlvl,
         cm.trans_mode,
         trl.trlr_num,
         cm.track_num]",581,1,"20210202172855","","SLIMP_I",""
"GET_TMS_LTL_SHIPMENT_ACTUAL","SL_RETR_MTHD_IMPL","MOCA","Get the LTL Shipment Actuals","F","T","F","F","F","F","T","List Shipments For TMS Group ID RM where car_move_id = :i_c_car_move_id  and stop_id = :i_c_stop_id and tms_group_id = :i_c_tms_group_id",136,1,"20210202172855","","SLIMP_I",""
"GET_TMS_LTL_STOP_ACT","SL_RETR_MTHD_IMPL","MOCA","Get TMS Stop Information for LTL Actuals","F","F","F","F","F","F","T","list stops for tms group id rm
where car_move_id = :i_c_car_move_id
  and tms_group_id = :i_c_tms_group_id",106,1,"20210202172855","","SLIMP_I",""
"GET_TMS_MOVE_ID","SL_IFD_FLD","MOCA","Fetching the tms_move_id.
","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if(:I_C_IFD_FLD_DATA = '' or :I_C_IFD_FLD_DATA is )
{
[select count(*) shpcnt
     from shipment
   join shipment_line
     on shipment.ship_id = shipment_line.ship_id
    and shipment.ship_id = :i_c_ship_id
   join ord
     on shipment_line.ordnum = ord.ordnum
    and shipment_line.client_id = ord.client_id
    and shipment_line.wh_id = ord.wh_id
    and ord.requir_tms_flg = 1]catch(-1403)
    |
    if(@? = 0 and @shpcnt > 0)
    {
         if (:i_c_parent_tm_load_id is not )
         {
	publish data
	    where res = :i_c_parent_tm_load_id
          }
          else
          {
	publish data
	    where res = :i_c_first_tm_load_id
           }
    }
    else
    {
         publish data
              where res = :i_c_car_move_id
    }
}
else
{
    if (:i_c_parent_tm_load_id is not )
    {
         publish data
             where res = :i_c_parent_tm_load_id
    }
    else
    {
         publish data
             where res = :I_C_IFD_FLD_DATA
    }
}",1016,1,"20210202173416","","SLIMP_I",""
"GET_TMS_ORDER_FREIGHT_CODE","SL_IFD_FLD","MOCA","Get the freight code (frtcod) with the highest precedence from the TMS order.","T","T","F","F","F","F","T","{
    [select count(*) num_rows
       from ord_line
      where tms_ordnum = :i_c_tms_ordnum
        and frtcod is not ]
    |
    if (@num_rows > 0)
    {
        [select cd.codval frtcod
           from codmst cd,
                ord_line ol
          where cd.colnam = 'frtcod'
            and ol.tms_ordnum = :i_c_tms_ordnum
            and rownum < 2
        order by cd.srtseq asc]
     }
     |
     publish data where frtcod = @frtcod
}",449,1,"20210202172856","","SLIMP_I",""
"GET_TMS_ORDER_HEADER_ACT","SL_RETR_MTHD_IMPL","MOCA","Get TMS Order Header Information for Actuals","F","F","F","F","F","F","T","[select ord_line.tms_ordnum
   from ord_line,
        shipment_line
  where ord_line.ordnum = shipment_line.ordnum
    and ord_line.client_id = shipment_line.client_id
    and ord_line.ordlin = shipment_line.ordlin
    and ord_line.ordsln = shipment_line.ordsln
    and ord_line.non_alc_flg = 0
    and ord_line.tms_ordnum is not 
    and shipment_line.ship_id = :i_c_ship_id
group by tms_ordnum]
|
list tms order headers rm",428,1,"20210202172856","","SLIMP_I",""
"GET_TMS_ORDER_LINE_ACT","SL_RETR_MTHD_IMPL","MOCA","Get TMS Order Line Information for Actuals","F","F","F","F","F","F","T","get tms order line actuals rm where tms_ordnum = :i_c_tms_ordnum",64,1,"20210202172856","","SLIMP_I",""
"GET_TMS_ORDER_STAGING_PARM","SL_IFD_FLD","MOCA","Get the TMS Order Staging Parameter","F","T","F","F","T","T","T","get tms order staging parameter set",35,1,"20210202172856","","SLIMP_I",""
"GET_TMS_SHIP_DISPATCH_DTE","SL_RETR_MTHD_IMPL","MOCA","Get the Dispatch Date for the Trailer","F","T","F","F","F","F","T","[select to_char(dispatch_dte, 'YYYYMMDD') tm_dispatch_dte,
        to_char(dispatch_dte, 'HH24MI') tm_dispatch_time
   from trlr
  where trlr_id = :i_c_trlr_id]",160,1,"20210202172856","","SLIMP_I",""
"GET_TMS_SHIPMENT_ACTUAL","SL_RETR_MTHD_IMPL","MOCA","Get the Shipment Actuals","F","T","F","F","F","F","T","List Shipments For Carrier Move RM where car_move_id = :i_c_car_move_id  and stop_id = :i_c_stop_id",99,1,"20210202172856","","SLIMP_I",""
"GET_TMS_STOP_ACT","SL_RETR_MTHD_IMPL","MOCA","Get TMS Stop Information for Actuals","F","F","F","F","F","F","T","list stops
where car_move_id = :i_c_car_move_id",47,1,"20210202172856","","SLIMP_I",""
"GET_TMS_WAREHOUSE","SL_IFD_FLD","MOCA","Returns the warehouse id based on the host external id passed in from TM","F","F","F","F","F","F","T","[ select wh_id
        from wh,
                adrmst
      where wh.adr_id = adrmst.adr_id
         and adrmst.host_ext_id = :i_c_host_ext_id
] catch(-1403) | publish data where wh_id = nvl(@wh_id,@@wh_id)",207,1,"20210202172856","","SLIMP_I",""
"GET_TRKNUM_IF_NULL","SL_IFD_FLD","MOCA","Get the Truck Number through the Trailer Number/Carrier Code if passed in Truck Number is NULL","F","F","F","F","F","F","T","if (:i_c_trknum = '' or :i_c_trknum = :i_c_sys_absent_ind_char or :i_c_trknum = :i_c_sys_nochg_ind_char or :i_c_trknum = :i_c_sys__ind_char)
{
     if ((:i_c_trlr_num != '' and :i_c_trlr_num != @absent_ind_char) and
        (:i_c_carcod != '' and :i_c_carcod != @absent_ind_char))
    {
         [select rcvtrk.trknum
            from rcvtrk,
                    trlr
          where rcvtrk.trlr_id = trlr.trlr_id
             and trlr.trlr_stat not in ('C', 'D')
             and trlr.trlr_num =  :i_c_trlr_num
             and trlr.carcod = :i_c_carcod
             and rcvtrk.wh_id = :i_c_wh_id ] catch(@?) >> res
         |
         if(@? = 0 and rowcount(@res) = 1)
         {
              publish data combination where trknum = @res
         }
         else
         {
              publish data where trknum = ''
         }
    }
   else
   {
        publish data where trknum = ''
    }
}
else
{
   publish data where trknum = :i_c_trknum
}",954,1,"20210202172856","","SLIMP_I",""
"GET_TRLR_ID_IF_NULL","SL_IFD_FLD","MOCA","Get Trailer ID through the Trailer Number/Carrier Code if passed in Trailer ID is Null","F","F","F","F","F","F","T","if (:i_c_trlr_id = '' or :i_c_trlr_id = @absent_ind_char)
{
    if ((:i_c_trlr_num != '' and :i_c_trlr_num != @absent_ind_char) and
        (:i_c_carcod != '' and :i_c_carcod != @absent_ind_char))
    {
        [select trlr_id
           from trlr
          where trlr_num = :i_c_trlr_num
            and carcod = :i_c_carcod
            and trlr_stat not in ('D','C','L','LDG')] catch (@?)
        |
        if (@? = 0)
        {
            publish data where trlr_id = @trlr_id
        }
        else
            publish data where trlr_id = ''
    }
    else
        publish data where trlr_id = ''
}
else
   publish data where trlr_id = :i_c_trlr_id",654,1,"20210202172856","","SLIMP_I",""
"GET_TRLR_SEG","SL_RETR_MTHD_IMPL","MOCA","Get TM Trailer Actuals","F","F","F","F","F","F","","list tms trailer actuals rm where trlr_id = :i_c_trlr_id",56,1,"20210202172856","","SLIMP_I",""
"GET_TRLR_STATUS","SL_RETR_MTHD_IMPL","MOCA","Get TM Trailer Status","F","F","F","F","F","F","","list tms trailer move status rm where trlr_id = :i_c_trlr_id",60,1,"20210202172856","","SLIMP_I",""
"GET_UNIQUE_TMS_SHIPMENTS","SL_RETR_MTHD_IMPL","MOCA","Fetch the total distinct tms shipment","F","F","F","F","F","F","F","[select distinct tms_ship_id
    from shipment_line
where ship_id = @ship_id] catch (-1403)",91,1,"20210202173359","","SLIMP_I",""
"GET_VAR_FLD","SL_IFD_FLD","MOCA","Get Var Field","F","F","F","F","F","F","T","[select decode ( rtrim(:i_c_eo_var_name),
                       'PRE-ASSEMBLY', 'vc_preflg',
                       'CAR_TYPE', 'vc_cartyp',
                       'WINDOWFAMILY', 'vc_winfam',
                       'ENCAPSULATION', 'vc_encflg',
                       'EXTRUSION', 'vc_extflg',
                       'PRIMER', 'vc_othflg',
                       'CARMANUFACTURER', 'vc_carmfg',
                       'MODEL', 'vc_carmod',
                       'TOTALTHICKNESS', 'vc_totthk',
                       'EXTERNALGLASSCOLOR', 'vc_glscol',
                       'SIDE', 'vc_plrflg',
                       'LOGO', 'vc_oemflg',
                       
                     ) nq_var_name
from dual]",715,1,"20210202172856","","SLIMP_I",""
"GET_VAR_FLD_VALUE","SL_IFD_FLD","MOCA","Get Var Field Value","F","F","F","F","F","F","T","[select decode ( rtrim(:i_c_eo_var_name),
                       'CARMANUFACTURER', :i_c_eo_var_value,
                       'MODEL', :i_c_eo_var_value,
                       'TOTALTHICKNESS', :i_c_eo_var_value,
                       'SIDE', :i_c_eo_var_value,
                       'LOGO', :i_c_eo_var_value,
                       'PRE-ASSEMBLY', :i_c_eo_var_value,
                       :i_c_eo_var_value)
from dual]",424,1,"20210202172856","","SLIMP_I",""
"GET_WAREHOUSE_HOST_EXT_ID","SL_IFD_FLD","MOCA","Get the Host External ID for the Warehouse's address id as defined in the system policy.","T","T","F","F","F","F","T","{
    [select adr.host_ext_id
       from poldat pol,
            adrmst adr
      where adr.adr_id = pol.rtstr1
        and pol.polcod = 'SYSTEM-INFORMATION'
        and pol.polvar = 'MISCELLANEOUS'
        and pol.polval = 'FACILITY-ADDRESS-ID']
}",249,1,"20210202172856","","SLIMP_I",""
"GET_WH_ACT_ARR_DTE","SL_IFD_FLD","MOCA","Get warehouse acture arrive date","F","F","F","F","F","F","F","[
    select shipment.wh_id
      from shipment
    where ship_id = :i_c_ship_id
]
|
list warehouses
    where wh_id = @wh_id catch(-1403)
|
if (@? = 0)
{
    publish data
        where wh_adr_id = @adr_id
}
else
{
    /* eINVALID_WAREHOUSE_ID */
    set return status
      where status = 10641
}
|
/* Retrieve ACT_ARR_DTE for pick up stop. */
[
    select trlr.arrdte act_arr_dte
      from trlr
    where trlr.trlr_id = :i_c_trlr_id
]
|
convert system to locale timezone
  where date = @act_arr_dte
      and adr_id = @adr_id
|
publish data where act_arr_dte = @cvt_dte",572,1,"20210202172856","","SLIMP_I",""
"GET_WH_ACT_DEP_DTE","SL_IFD_FLD","MOCA","Get warehouse actual depature date","F","F","F","F","F","F","F","[
    select shipment.wh_id
      from shipment
    where ship_id = :i_c_ship_id
]
|
list warehouses
    where wh_id = @wh_id catch(-1403)
|
if (@? = 0)
{
    publish data
        where wh_adr_id = @adr_id
}
else
{
    /* eINVALID_WAREHOUSE_ID */
    set return status
      where status = 10641
}
|
/* Retrieve ACT_DEP_DTE for pick up stop. */
[
    select trlr.dispatch_dte act_dep_dte
      from trlr
    where trlr.trlr_id = :i_c_trlr_id
]
|
convert system to locale timezone
  where date = @act_dep_dte
      and adr_id = @adr_id
|
publish data where act_dep_dte = @cvt_dte",578,1,"20210202172856","","SLIMP_I",""
"GET_WH_ADR_CLI_ID","SL_IFD_FLD","MOCA","Get warehouse address client id","F","F","F","F","F","F","F","
        [ select wh_adrmst.client_id
            from shipment
            left join wh
              on wh.wh_id = shipment.wh_id
            left join adrmst wh_adrmst
              on wh_adrmst.adr_id = wh.adr_id
           where shipment.ship_id = :i_c_ship_id
        ]catch(-1403)
        |
        if (@? = 0)
        {
            publish data
              where wh_adr_client_id = @client_id
        }
        else
        {
            /* eINVALID_WAREHOUSE_ID */
            set return status
                where status = 10641
        }",552,1,"20210202172856","","SLIMP_I",""
"GET_WH_ADR_HOST_ID","SL_IFD_FLD","MOCA","Get warehouse address host external ID","F","F","F","F","F","F","F","[ select wh_adrmst.host_ext_id
     from shipment
       left join wh
        on wh.wh_id = shipment.wh_id
       left join adrmst wh_adrmst
        on wh_adrmst.adr_id = wh.adr_id
   where shipment.ship_id = :i_c_ship_id
 ]catch(-1403)
 |
 if (@? = 0)
 {
     publish data
      where wh_adr_host_ext_id = @host_ext_id
 }
 else
 {
      /* eINVALID_WAREHOUSE_ID */
      set return status
  where status = 10641
  }",416,1,"20210202172856","","SLIMP_I",""
"GET_WH_ADR_ID","SL_IFD_FLD","MOCA","Get the warehouse address","F","F","F","F","F","F","F","
        [ select wh_adrmst.adr_id
            from shipment
            left join wh
              on wh.wh_id = shipment.wh_id
            left join adrmst wh_adrmst
              on wh_adrmst.adr_id = wh.adr_id
           where shipment.ship_id = :i_c_ship_id
        ]catch(-1403)
        |
        if (@? = 0)
        {
            publish data
              where wh_adr_id = @adr_id
        }
        else
        {
            /* eINVALID_WAREHOUSE_ID */
            set return status
                where status = 10641
        }",539,1,"20210202172856","","SLIMP_I",""
"GET_WH_INVLVL_FOR_RPS","SL_RETR_MTHD_IMPL","MOCA","Get the inventory levels for RPS","F","F","F","F","F","F","T","list inventory levels for rps where wh_id = :i_c_wh_id",54,1,"20210202172856","","SLIMP_I",""
"GET_WH_LNGDSC_FOR_RPS","SL_IFD_FLD","MOCA","Get the long description for the warehouse.","F","F","F","F","F","F","T","sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
|
[select wh_id from car_move where trlr_id = :i_c_trailer_id] catch (@?)
|
if (@? = -1403)
    get warehouse id
|
[select lngdsc sup_nam
   from dscmst
 where colnam  = 'wh_id'
    and colval     = @wh_id
    and locale_id = @SysParmValue]",296,5,"20210202172856","","SLIMP_I",""
"GET_WH_LNGDSC_FOR_SUPITM","SL_IFD_FLD","MOCA","Get Warehouse long description for supplier item.","F","F","F","F","F","F","T","sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
|
[select lngdsc sup_nam
   from dscmst
 where colnam  = 'wh_id'
    and colval     = :i_c_wh_id
    and locale_id = @SysParmValue]  catch(-1403)
|
if (@? = -1403)
{
    publish data where sup_nam = 'Warehouse'
}",268,1,"20210202172856","","SLIMP_I",""
"GET_WMS_CARCOD","SL_IFD_FLD","MOCA","Get the Warehouse Management Carrier Code, if SCAC code has been sent from DLx TM. If the carrier code does not exist in Warehouse Management, the logic should find the carrier code by SCAC/SRVLV combination.","F","F","F","F","F","F","T","[select carcod
   from carhdr
  where carcod = :i_c_carrier ] catch (-1403)
|
if (@? != 0)
{
    [select cd.carcod
       from cardtl cd,
            carhdr ch
      where ch.scacod = :i_c_carrier
        and ch.carcod = cd.carcod
        and cd.srvlvl = :i_c_tariff
        and rownum < 2 ] catch(@?)
    |
    if (@? != 0)
    {
        publish data where o_value = :i_c_carrier
    }
    else
    {
        publish data where o_value = @carcod
    }
}
else
{
    publish data where o_value = @carcod
}",504,1,"20210202172856","","SLIMP_I",""
"GET_WMS_INV_STAT","SL_IFD_FLD","MOCA","Get WMS Inventory Status","F","F","F","F","F","F","T","[select :i_c_hstloc  hst_loc from dual] | sl_es_sap_get wms_inv_sts where hst_loc = @hst_loc and hst_stk_sts = 'U'",114,1,"20210202172856","","SLIMP_I",""
"GET_WO_DEF_SERV_ID","SL_IFD_FLD","MOCA","Get the default service id which has been assigned to the work order.","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select min(def_serv_id) def_serv_id /* :o_c_def_serv_id */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = @wh_id
  and wkonum = :i_c_wkonum
  and client_id = :i_c_client_id
  and wkorev = :i_c_wkorev
  and def_serv_cod = 'WKO']
}",312,1,"20210202172856","","SLIMP_I",""
"GET_WO_DEF_SERV_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the work order default service whether it be create or change","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = @wh_id
  and wkonum = :i_c_wkonum
  and client_id = :i_c_client_id
  and wkorev = :i_c_wkorev
  and def_serv_cod = 'WKO']
}",334,1,"20210202172856","","SLIMP_I",""
"GET_WO_DTL_DEF_SERV_ID","SL_IFD_FLD","MOCA","Get the default service id which has been assigned to the work order detail.","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select min(def_serv_id) def_serv_id /* :o_c_def_serv_id */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = @wh_id
  and wkonum = :i_c_wkonum
  and client_id = :i_c_client_id
  and wkorev = :i_c_wkorev
  and wkolin = :i_c_wkolin
  and def_serv_cod = 'WKODTL']
}",342,1,"20210202172856","","SLIMP_I",""
"GET_WO_DTL_DEF_SERV_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the work order detail default service whether it be create or change","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
get warehouse id where wh_id = :i_c_whse_id
|
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from def_serv
where serv_id = :i_c_serv_id
  and wh_id = @wh_id
  and wkonum = :i_c_wkonum
  and client_id = :i_c_client_id
  and wkorev = :i_c_wkorev
  and wkolin = :i_c_wkolin
  and def_serv_cod = 'WKODTL']
}",364,1,"20210202172856","","SLIMP_I",""
"GS1_ACK_DOCID_RM","SL_RETR_MTHD_IMPL","MOCA","Getting document Identifier","F","F","F","F","F","F","F","/**
   * Getting Document Identifier of the message processed.
   * Set to 'NA' if not available 
   */
sl_list dwnld_ifd_hdr ver_2
 where dwnld_seq = :i_c_dwnld_seq
   and max_rows = 100
|
save session variable where name = 'data_seq' and value = @data_seq
|
[select *
   from sl_ifd_data_dtl
  where ifd_data_seq = @data_seq
    and ifd_seg_id = 'DOCUMENTIDENTIFICATION' ] catch(-1403)>> res
|
if(@? !=0){
    publish data where docIdentifier='NA'
}
else{
[[
	import com.redprairie.moca.*;
	String num="";
              String clob="";
	
   	if (res.next()) {
	    clob = res.getString("ifd_seg_data");
	    clob = clob.substring(0, clob.length() - 1).replace("\"", "");
	    String[] clobArray = clob.split("\\s*,\\s*");
	    num = clobArray[2];
    }			
    return num;
]]
|
publish data
  where docIdentifier = @result
}",825,1,"20210202173615","","SLIMP_I",""
"GS1_ACK_ENTITY_ID_RM","SL_RETR_MTHD_IMPL","MOCA","etrieve entity identification of the original message processsed","F","F","F","F","F","F","F","/**
 * Retrieve the entity identification information
 * for the message processed. e.g. Here Order 
 * Identification is the specific information.
 */
get session variable where name = 'data_seq'
|
publish data where data_seq = @value
|
[select *
   from sl_ifd_data_dtl
  where (ifd_data_seq = @data_seq
      and ifd_seg_id = 'ORDERIDENTIFICATION')
        or (ifd_data_seq = @data_seq and ifd_seg_id = 'TRANSPORTLOADIDENTIFICATION')
        or  (ifd_data_seq =@data_seq and ifd_seg_id = 'TRANSPORTPICKUPDROPOFFREQID')
        or  (ifd_data_seq =@data_seq and ifd_seg_id = 'LOAD')
        or  (ifd_data_seq =@data_seq and ifd_seg_id = 'PARTYIDENTIFICATION')
        or  (ifd_data_seq =@data_seq and ifd_seg_id = 'LOCATIONIDENTIFICATION')] catch(-1403) >> res
|
if (@? != 0)
{
    /**
      *This Section is executed when download
      *failure occurs.
      */
    publish data where entityidentity='NA'
}
else
{
    /**
     *This Section is executed for getting the
     *EntityIdentification value for all inbound messages.
     */
[[
	import com.redprairie.moca.*;
	String num="";
              String clob="";	
   	if (res.next())
              {
		clob = res.getString("ifd_seg_data");
		clob = clob.substring(1, clob.length() - 2);
			
		num = clob;
	}			
              return num;
]]
|
publish data
    where entityidentity = @result
}",1347,1,"20210202173615","","SLIMP_I",""
"GS1_ACK_INT_ERR_MSG_RM","SL_RETR_MTHD_IMPL","MOCA","Get GS1 Integration Error Message if available","F","F","F","F","F","F","T","get inbound full validation flag catch(@?)
    |
    if (@? = 0 and @inb_full_vld_flg = 1)
   {
        [select int_err_trn_id
           from int_err_trn
         where dwnld_seq = @dwnld_seq] catch (-1403)
       
    }
",222,1,"20210202173615","","SLIMP_I",""
"GS1_ACK_SENDER_RM","SL_RETR_MTHD_IMPL","MOCA","Retieve the Original Receiver to be set it as Acknowlwdgement Sender","F","F","F","F","F","F","T","/**
  * Retrieve the original sender information of
  * the original message and set it as receiver
  * for the Acknowledgement Message.
  * The Receiver is of the form 'LOC.DC0001'. 
  * Format the above string to get sender of the form
  * DC0001.
  */
get session variable where name = 'data_seq'
|
publish data where data_seq = @value
|
[select *
   from sl_ifd_data_dtl
 where ifd_data_seq = @data_seq
    and ifd_seg_id = 'RECEIVERIDENTIFER' 
    and ifd_seg_data like '%LOC.%'] catch(-1403) >> res 
|

if(@? !=0){
    publish data where sender='DEFAULT'
}
else
{
[[
    String num = "";
    String clob = "";
   	while(res.next()) {
        clob = res.getString('ifd_seg_data');
        clob = clob.substring(5, clob.length() - 2);
        num = clob;
        break;
    }
    return num;
]]
|
publish data
    where sender = nvl(@result, 'DEFAULT')
}",858,1,"20210202173615","","SLIMP_I",""
"GS1_BLK_DA_RETURN_PACKAGE","SL_IFD_SEG_BLOCK","MOCA","Skip Returnable Packaging section if the DA Logistic unit level identification is not Trolly levele i.e. 1","F","F","F","F","F","F","T","if(:i_c_lvl_num and '1' !=  :i_c_lvl_num)
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",118,1,"20210202173416","","SLIMP_I",""
"GS1_BLK_TOTVOL_UNITMEASUREMENT","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for Total Gross Volume Measurement Unit","F","F","F","F","F","F","T","
if (:i_c_tot_pln_vol > 0)
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",105,1,"20210202173416","","SLIMP_I",""
"GS1_BLK_TOTWGT_UNITMEASUREMENT","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for Total Gross Weight Measurement Unit","F","F","F","F","F","F","T","
if (:i_c_tot_pln_wgt > 0)
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",105,1,"20210202173416","","SLIMP_I",""
"GS1_BLK_UNTWGT_UNITMEASUREMENT","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for Total Gross Weight Measurement Unit","F","F","F","F","F","F","T","
if (:i_c_crtn_weight > 0)
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",105,1,"20210202173416","","SLIMP_I",""
"GS1_BLOCK_FOR_APPT_ADD_REFRESH","SL_IFD_BLOCK","MOCA","Blocking Algorithm for appointment add and change refresh","F","F","F","F","F","F","T","if (:i_c_documentActionCode = 'ADD' or :i_c_documentActionCode = 'CHANGE_BY_REFRESH')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",162,1,"20210202173330","","SLIMP_I",""
"GS1_BLOCK_FOR_APPT_DELETE","SL_IFD_SEG_BLOCK","MOCA","Depending on the documentActionCode Event Argument, block the Appointment deletion.","F","F","F","F","F","F","T","if (:i_c_documentActionCode = 'DELETE')
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",118,1,"20210202173329","","SLIMP_I",""
"GS1_BLOCK_FOR_CATCH_QTY","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for Catch Quantity","F","F","F","F","F","F","T","if (:i_c_catch_qty != 0)
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",103,1,"20210202173416","","SLIMP_I",""
"GS1_BLOCK_FOR_CONT_NT","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for Contact Type code NT","F","F","F","F","F","F","T","
if (:i_c_adr_attn_tel !=  and :i_c_adr_attn_tel != '' )
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",139,1,"20210202173415","","SLIMP_I",""
"GS1_BLOCK_FOR_CONT_SD","SL_IFD_SEG_BLOCK","MOCA","Blocking algoritham for contact type SD","F","F","F","F","F","F","T","if (:i_c_adr_cont_tel !=  and :i_c_adr_cont_tel != '' )
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",138,1,"20210202173415","","SLIMP_I",""
"GS1_BLOCK_FOR_FRTRTE","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for Shipment Contact","F","F","F","F","F","F","T","if (:i_c_frght_rate  != 0 )
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",106,1,"20210202173415","","SLIMP_I",""
"GS1_BLOCK_FOR_LOAD_CREATE","SL_IFD_SEG_BLOCK","MOCA","Depending on the documentActionCode Event Argument, block the Load Creation.","F","F","F","F","F","F","T","if (:i_c_documentActionCode = 'ADD' or :i_c_documentActionCode = 'CHANGE_BY_REFRESH')
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",164,1,"20210202173249","","SLIMP_I",""
"GS1_BLOCK_FOR_LOAD_DELETE","SL_IFD_SEG_BLOCK","MOCA","Depending on the documentActionCode Event Argument, block the Load deletion.","F","F","F","F","F","F","T","if (:i_c_documentActionCode = 'DELETE')
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",118,1,"20210202173249","","SLIMP_I",""
"GS1_BLOCK_FOR_ORD_CREATE","SL_IFD_SEG_BLOCK","MOCA","Depending on the orderTypeCode Event Argument, block the Order creation.","F","F","F","F","F","F","T","if ((:i_c_orderTypeCode = '150' or :i_c_orderTypeCode = '173') and (:i_c_documentActionCode = 'ADD' or :i_c_documentActionCode = 'CHANGE_BY_REFRESH'))
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",227,1,"20210202173205","","SLIMP_I",""
"GS1_BLOCK_FOR_ORD_DELETE","SL_IFD_SEG_BLOCK","MOCA","Depending on the documentActionCode Event Argument, block the Order deletion.","F","F","F","F","F","F","T","if ((:i_c_orderTypeCode = '150' or :i_c_orderTypeCode = '173') and :i_c_documentActionCode = 'DELETE')
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",181,1,"20210202173204","","SLIMP_I",""
"GS1_BLOCK_FOR_PACKQTY","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for package quantity i.e when inpqty is zero.","F","F","F","F","F","F","T","if (:i_c_inpqty != 0)
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",100,1,"20210202173557","","SLIMP_I",""
"GS1_BLOCK_FOR_RO_CREATE","SL_IFD_SEG_BLOCK","MOCA","Depending on the orderTypeCode Event Argument, block the Return Order creation.","F","F","F","F","F","F","T","if (:i_c_orderTypeCode = '10001' and
 :i_c_documentActionCode = 'ADD')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",147,1,"20210202173206","","SLIMP_I",""
"GS1_BLOCK_FOR_RO_DELETE","SL_IFD_SEG_BLOCK","MOCA","Depending on the orderTypeCode and documentActionCode Event Argument, block the Return Order deletion.","F","F","F","F","F","F","T","if (:i_c_orderTypeCode = '10001' and :i_c_documentActionCode = 'DELETE')
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",151,1,"20210202173206","","SLIMP_I",""
"GS1_BLOCK_FOR_SHIP_CONT_TEL","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for Shipment Contact","F","F","F","F","F","F","T","if (:i_c_ship_cont_tel !=  and :i_c_ship_cont_tel != '' )
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",140,1,"20210202173415","","SLIMP_I",""
"GS1_BLOCK_FOR_SHIPLINE_STS","SL_IFD_SEG_BLOCK","MOCA","Depending on the outbound status event argument, block sending the details of shipment line status.","F","F","F","F","F","F","T","if (:i_c_outbound_status  = 'PRODUCT_PICKED')
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",124,1,"20210202173359","","SLIMP_I",""
"GS1_BLOCK_FOR_STATUSCODE","SL_IFD_SEG_BLOCK","MOCA","Block this Segment if message is not Success.","F","F","F","F","F","F","T","if (:i_c_EVENT_STATUS  != 'SC')
   publish data where blkval = 'T'
else
   publish data where blkval = 'F'",106,1,"20210202173615","","SLIMP_I",""
"GS1_BLOCK_FOR_STOP","SL_IFD_SEG_BLOCK","MOCA","Blocking Algorithm for Stop if stop_id is STP0000000 or FAKE_STOP","F","F","F","F","F","F","T","if (:i_c_stop_id = 'STP0000000' or :i_c_stop_id = 'FAKE_STOP' )
    publish data where blkval = 'T'  
else
    publish data where blkval = 'F'",142,1,"20210202173415","","SLIMP_I",""
"GS1_BLOCK_FOR_SUCCESS","SL_IFD_SEG_BLOCK","MOCA","Block this Segment if message is Success.","F","F","F","F","F","F","T","if (:i_c_DWNLD_STAT_CD = 'EDONE' and :i_c_EVENT_STATUS  != 'EB')
   publish data where blkval = 'T'
else
   publish data where blkval = 'F'",139,1,"20210202173615","","SLIMP_I",""
"GS1_BLOCK_INB_ORD_CREATE","SL_IFD_SEG_BLOCK","MOCA","Depending on the orderTypeCode Event Argument, block the Purchase Order creation.","F","F","F","F","F","F","T","if (:i_c_orderTypeCode = '220' and :i_c_documentActionCode != 'DELETE')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",148,1,"20210202173204","","SLIMP_I",""
"GS1_BLOCK_INB_ORD_DELETE","SL_IFD_SEG_BLOCK","MOCA","Depending on the orderTypeCode Event Argument, block the Purchase Order deletion.","F","F","F","F","F","F","T","if (:i_c_orderTypeCode = '220' and :i_c_documentActionCode = 'DELETE')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",147,1,"20210202173204","","SLIMP_I",""
"GS1_BLOCK_INB_PARTYCARR_CREATE","SL_IFD_SEG_BLOCK","MOCA","Party Carrier Create","F","F","F","F","F","F","T","if ((:i_c_documentActionCode = 'ADD' or :i_c_documentActionCode = 'CHANGE_BY_REFRESH') and (:i_c_partyrole = 'CARRIER'))
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",197,1,"20210202173339","","SLIMP_I",""
"GS1_BLOCK_INB_PARTYCARR_DELETE","SL_IFD_SEG_BLOCK","MOCA","Party Carrier Delete","F","F","F","F","F","F","T","if (:i_c_documentActionCode = 'DELETE' and :i_c_partyrole = 'CARRIER')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",147,1,"20210202173339","","SLIMP_I",""
"GS1_BLOCK_INB_SUPP_CREATE","SL_IFD_SEG_BLOCK","MOCA","Party Supplier Create","F","F","F","F","F","F","T","if ((:i_c_documentActionCode = 'ADD' or :i_c_documentActionCode = 'CHANGE_BY_REFRESH') and :i_c_partyrole = 'SUPPLIER')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",196,1,"20210202173339","","SLIMP_I",""
"GS1_BLOCK_INB_SUPP_DELETE","SL_IFD_SEG_BLOCK","MOCA","Party Supplier Delete","F","F","F","F","F","F","T","if (:i_c_documentActionCode = 'DELETE' and :i_c_partyrole = 'SUPPLIER')
    publish data where blkval = 'F'
else
    publish data where blkval = 'T'",148,1,"20210202173339","","SLIMP_I",""
"GS1_BLOCK_PLANNED_PICKUP_SEG","SL_IFD_BLOCK","MOCA","Block Planned Pickup Logistic Location and Event Period segment for TransportPickupDropOffConfirmationMessage.","F","F","F","F","F","F","T","/*if trlr_cod is SHIP then block planned Dropoff Segment, Other wise block planned Pickup segment.*/
if (:i_c_trlr_cod != 'SHIP')
    publish data where blkval = 'T'
else
    publish data where blkval = 'F'",206,1,"20210202173542","","SLIMP_I",""
"GS1_BLOCK_SEG_CUST_REF","SL_IFD_SEG_BLOCK","MOCA","Block the segment if multiple orders are present","F","F","F","F","F","F","F","[select count(distinct ordnum) as ordercount  from shipment_line where ship_id=:i_c_ship_id and wh_id= :i_c_wh_id]
|
if (@ordercount > 1){
  publish data where blkval = 'T'
}else{
  publish data where blkval = 'F'
}",215,1,"20210202173415","","SLIMP_I",""
"GS1_BLOCK_SEG_CUSTOMERREF","SL_IFD_SEG_BLOCK","MOCA","Block the segment if multiple orders are associated with shipment","F","F","F","F","F","F","F","if (:i_c_rcv_with_po !=  and :i_c_rcv_with_po != 'T')
{
  publish data where blkval = 'F'
}
else
{
  /* Verifying the orders associated with the shipment and if the shipment has
   * multiple orders then not publishing the customerReference tag
   */ 
  [select count(distinct ref2) as ordercount 
        from rcvlin
    where rcvlin.trknum =:i_c_trknum
       and rcvlin.wh_id =:i_c_wh_id
       and rcvlin.ref1 =:i_c_shipid ]
 |
 if (@ordercount > 1)
 {
   publish data where blkval = 'T'
 }
 else
 {
   publish data where blkval = 'F'
 }
}",547,1,"20210202173506","","SLIMP_I",""
"GS1_BLOCK_SEG_DA_LOGISTIC_UNIT","SL_IFD_SEG_BLOCK","MOCA","Block the segment if multiple shipment lines exist per LPN.","F","F","F","F","F","F","T","if (:i_c_invtid != '')
{
    get session variable where name = 'prev_invtid' catch(-1403)
    |
    if (@value = ''){
        save session variable where name = 'prev_invtid' 
           and value = :i_c_invtid catch(-1403)
        |
        publish data where blkval = 'F'
    }
    else if (@value = :i_c_invtid) {
        publish data where blkval = 'T'
    }
    else {
        save session variable where name = 'prev_invtid' 
            and value = :i_c_invtid catch(-1403)
        |
        publish data where blkval = 'F'
    }
}",538,1,"20210202173416","","SLIMP_I",""
"GS1_BLOCK_SUPPLER","SL_IFD_SEG_BLOCK","MOCA","Block supplier if supplier number is ","F","F","F","F","F","F","T","if (:i_c_supnum !=  and :i_c_supnum != '' )
    publish data where blkval = 'F'  
else
    publish data where blkval = 'T'",126,1,"20210202173416","","SLIMP_I",""
"GS1_CHOOSE_ADR_ID","SL_IFD_FLD","MOCA","Chooses an address or customer based on the passed address value","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
{
    publish data where res = :I_C_IFD_FLD_DATA
}
else
{
    get session variable where name = :I_C_IFD_FLD_MISC_DATA catch (-1403)
    |
    if (@? = 0)
    {
        publish data where res = @value
    }
    else
    {
        publish data where res = 
    }
}",455,1,"20210202173205","","SLIMP_I",""
"GS1_CHOOSE_BT_HOST_EXT_ID","SL_IFD_FLD","MOCA","Chooses the appropriate Bill to external address id","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
/* If any of the below address fields are not passed from the message,
 * then return the ShipTo address Id, else return the Bill-To Address id.
 */

if ((@adrnam =  or @adrnam = '')  and (@adrln1 =  or @adrln1 = '')
    and (@adrcty =  or @adrcty = '') and (@adrstc =  or @adrstc = '')
    and (@adrpsz =  or @adrpsz = '') and (@ctry_name =  or @ctry_name = '')
    and (@bt_extadr_id = or @bt_extadr_id ='') and (@tmp_bt_host_adr_id = or @tmp_bt_host_adr_id =''))
{
    get session variable where name = 'is_address_segment_absent' catch (@?)  
    |
    if (@? = -1403) 
    {
        save session variable 
      where name = 'is_address_segment_absent'
         and value = 'true'
    }
    |
    publish data where res = @st_extadrr_id
}
else
{

     publish data where res = @bt_extadr_id 
}",872,1,"20210202173205","","SLIMP_I",""
"GS1_CHOOSE_BTCUST","SL_IFD_FLD","MOCA","Chooses the appropriate customer for transfer order and b2b+b2c customer order scenarios","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@raw_bt_cstnum is not )
{
     /* B2B customer orders */
     publish data where res = @raw_bt_cstnum
}
else
{
    /* B2C customer orders and transfer orders */
    publish data where res = @raw_st_cstnum
}
",257,1,"20210202173205","","SLIMP_I",""
"GS1_CHOOSE_CRNCY_CODE","SL_IFD_FLD","MOCA","Chooses an address or customer based on the passed address value","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (:i_c_ifd_fld_data)
{
    publish data where res = :I_C_IFD_FLD_DATA
}
else
{
    [select crncy_code from prtmst_view
         where wh_id_tmpl  = :i_c_wh_id
             and prt_client_id =:i_c_client_id 
             and prtnum = :i_c_prtnum] catch (-1403)
    |
    if (@? = 0)
    {
        publish data where res = @crncy_code
    }
    else
    {
        [select pmv.crncy_code 
           from prtmst_view pmv
            join shipment_line shl
              on shl.prtnum = pmv.prtnum
             and shl.wh_id = pmv.wh_id
             and shl.prt_client_id = pmv.prt_client_id
         where shl.ship_line_id= :i_c_ship_line_id] catch (-1403)
        |
        if (@? = 0)
        {
            publish data where res = @crncy_code
        }
        else
        {
            publish data where res = 
        }
    }
}",879,1,"20210202173415","","SLIMP_I",""
"GS1_CHOOSE_RT_HOST_EXT_ID","SL_IFD_FLD","MOCA","Chooses the appropriate route to external address id","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
/* If any of the below address fields are not passed from the message,
 * then return the ShipTo address Id, else return the Route Address id.
 */

if ((@adrnam =  or @adrnam = '')  and (@adrln1 =  or @adrln1 = '')
    and (@adrcty =  or @adrcty = '') and (@adrstc =  or @adrstc = '')
    and (@adrpsz =  or @adrpsz = '') and (@ctry_name =  or @ctry_name = '')
    and (@rt_extadr_id = or @rt_extadr_id ='') and (@rtcust = or @rtcust =''))
{
    get session variable where name = 'is_address_segment_absent' catch (@?)  
    |
    if (@? = -1403) 
    {
        save session variable 
      where name = 'is_address_segment_absent'
         and value = 'true'
    }
    |
    publish data where res = @st_extadr_id
}
else
{

     publish data where res = @rt_extadr_id 
}",845,1,"20210202173205","","SLIMP_I",""
"GS1_CHOOSE_RTCUST","SL_IFD_FLD","MOCA","Chooses the appropriate route to customer for transfer order and customer order scenarios","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if(:i_c_ifd_fld_data)
{
    /*Route To Customer*/
    publish data where res = :i_c_ifd_fld_data
}
else if (@raw_st_cstnum is not )
{
    /* B2C customer orders and transfer orders */
    publish data where res = @raw_st_cstnum
}
else
{
     /* B2B customer orders */
     publish data where res = @raw_bt_cstnum
}",360,1,"20210202173205","","SLIMP_I",""
"GS1_CHOOSE_STCUST","SL_IFD_FLD","MOCA","Chooses the appropriate ship to customer for transfer order and customer order scenarios","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@raw_st_cstnum is not )
{
    /* B2C customer orders and transfer orders */
    publish data where res = @raw_st_cstnum
}
else
{
     /* B2B customer orders */
     publish data where res = @raw_bt_cstnum
}",256,1,"20210202173205","","SLIMP_I",""
"GS1_CONVERT_BLANKDTE","SL_IFD_FLD","MOCA","Converts a GS1 Standard datetime to a format which can be parsed by MOCA.","F","F","F","F","F","F","T","sl_get data_attr 
    where src_sys_id = :i_c_dest_sys_id 
       and value = :I_C_IFD_FLD_DATA 
|
if (@is_ != 'T' and @is_absent != 'T' and @is_nochg != 'T')
{
    get datetime from timestamp where timestamp = :I_C_IFD_FLD_DATA || 'T' || '00:00:00'
} 
else
{
    publish data where ret = ''
}",297,1,"20210202173205","","SLIMP_I",""
"GS1_CONVERT_CONDCODE_FROM_WM","SL_IFD_FLD","MOCA","Converts receiving condition code from WM to GS1","F","F","F","F","F","F","T","convert wm code to gs1 code 
    where polval = 'RET-COND' 
      and wmCode = :I_C_COND_CODE
      and wh_id  = :I_C_WH_ID",123,1,"20210202173407","","SLIMP_I",""
"GS1_CONVERT_DCKTYP_TO_WM","SL_IFD_FLD","MOCA","Get WM return reason code.","F","F","F","F","F","F","T","sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ != 'T' and @is_absent != 'T')
{
convert gs1 code to wm code 
  where polval = 'DOCK-TYPE'
    and gs1Code = :I_C_IFD_FLD_DATA
    and wh_id = :I_C_WH_ID
}
else
{
publish data where res = :I_C_IFD_FLD_DATA
}",304,1,"20210202173330","","SLIMP_I",""
"GS1_CONVERT_FROM_DATETIME","SL_IFD_FLD","MOCA","Converts a GS1 datetime to a format which can be parsed by MOCA.","F","F","F","F","F","F","T","sl_get data_attr 
    where src_sys_id = :i_c_dest_sys_id 
       and value = :I_C_IFD_FLD_DATA 
|
if (@is_ != 'T' and @is_absent != 'T' and @is_nochg != 'T')
{
    get datetime from timestamp where timestamp = :I_C_IFD_FLD_DATA
}
else
{
    publish data where ret = ''
}",275,1,"20210202173158","","SLIMP_I",""
"GS1_CONVERT_INVSTS_FROM_WM","SL_IFD_FLD","MOCA","Converts inventory status code from WM to GS1","F","F","F","F","F","F","T","convert wm code to gs1 code 
    where polval = 'INVSTS-COD' 
      and wmCode = :I_C_INVSTS
      and wh_id  = :I_C_WH_ID",122,2,"20210202173407","20210202173416","SLIMP_I","SLIMP_I"
"GS1_CONVERT_INVSTS_TO_WM","SL_IFD_FLD","MOCA","Converts inventory status code from GS1 to WM code","F","F","F","F","F","F","T","sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ != 'T' and @is_absent != 'T')
{
convert gs1 code to wm code 
  where polval = 'INVSTS-COD'
    and gs1Code = :I_C_IFD_FLD_DATA
    and wh_id = :I_C_WH_ID
}
else
{
publish data where res = :I_C_IFD_FLD_DATA
}",305,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"GS1_CONVERT_NAFTABEGDTE","SL_IFD_FLD","MOCA","Converts a GS1 nafta begin datetime to a format which can be parsed by MOCA.","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
sl_get data_attr 
    where src_sys_id = :i_c_dest_sys_id 
       and value = :I_C_IFD_FLD_DATA 
|
if (@is_ != 'T' and @is_absent != 'T' and @is_nochg != 'T')
{

   sl_get data_attr 
    where src_sys_id = :i_c_dest_sys_id 
       and value = :i_c_naftabegtime 
    |
   if (@is_ != 'T' and @is_absent != 'T' and @is_nochg != 'T')
   {
        get datetime from timestamp where timestamp = :I_C_IFD_FLD_DATA || 'T' || :i_c_naftabegtime
   }
   else
   {
        get datetime from timestamp where timestamp = :I_C_IFD_FLD_DATA || 'T' || '00:00:00'
   }

} 
else
{
    publish data where ret = ''
}",646,1,"20210202173205","","SLIMP_I",""
"GS1_CONVERT_NAFTAENTDTE","SL_IFD_FLD","MOCA","Converts a GS1 nafta end datetime to a format which can be parsed by MOCA.","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
sl_get data_attr 
    where src_sys_id = :i_c_dest_sys_id 
       and value = :I_C_IFD_FLD_DATA 
|
if (@is_ != 'T' and @is_absent != 'T' and @is_nochg != 'T')
{

   sl_get data_attr 
    where src_sys_id = :i_c_dest_sys_id 
       and value = :i_c_naftaendtime 
    |
   if (@is_ != 'T' and @is_absent != 'T' and @is_nochg != 'T')
   {
        get datetime from timestamp where timestamp = :I_C_IFD_FLD_DATA || 'T' || :i_c_naftaendtime
   }
   else
   {
        get datetime from timestamp where timestamp = :I_C_IFD_FLD_DATA || 'T' || '00:00:00'
   }

} 
else
{
    publish data where ret = ''
}",646,1,"20210202173205","","SLIMP_I",""
"GS1_CONVERT_RCVSTS_FROM_WM","SL_IFD_FLD","MOCA","Converts inventory status code from WM to GS1","F","F","F","F","F","F","T","convert wm code to gs1 code 
    where polval = 'INVSTS-COD' 
      and wmCode = :I_C_RCVSTS
      and wh_id  = :I_C_WH_ID",122,1,"20210202173506","","SLIMP_I",""
"GS1_CONVERT_RETCOD_TO_WM","SL_IFD_FLD","MOCA","Get WM return reason code.","F","F","F","F","F","F","T","sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ != 'T' and @is_absent != 'T')
{
convert gs1 code to wm code 
  where polval = 'RET-REASON-CODE'
    and gs1Code = :I_C_IFD_FLD_DATA
    and wh_id = :I_C_WH_ID
}
else
{
publish data where res = :I_C_IFD_FLD_DATA
}",310,1,"20210202173206","","SLIMP_I",""
"GS1_CONVERT_WEIGHT_TO_WM","SL_IFD_FLD","MOCA","Takes in a UN/CEFACT weight and UOM and returns a weight value in the default WM UOM","F","F","F","F","F","F","T","convert unit from uncefact to wm where source_type = 'weight' and source_value = :i_c_gs1_weight and source_code = :i_c_gs1_weight_uom",134,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"GS1_GET_CANONICAL_ORDER_TYPE","SL_IFD_FLD","MOCA","Gets the Canonical Order Type Code for a WM Order Type Code","F","F","F","F","F","F","T","if (:I_C_IFD_FLD_DATA)
{
    [select gs1_ordtyp
       from ord_typ
      where ordtyp = :I_C_IFD_FLD_DATA
        and @+wh_id ] catch (-1403)
}
|
publish data where ordtyp = @gs1_ordtyp",186,2,"20210202173525","20210202173535","SLIMP_I","SLIMP_I"
"GS1_GET_CLIENT_ID","SL_IFD_FLD","MOCA","Gets a client ID based on a field value if present, or defaults to '----' in a non-3PL system.","F","F","F","F","F","F","T","get installed configuration
    where config = 'THIRD-PARTY-LOGISTICS'
|
if (@installed = 0)
{
    publish data where res = '----'
}
else
{
   [select LPAD(@nochg_ind_char, length(:i_c_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_client_id), @absent_ind_char) abs_char
   from dual]
   |
   if (:I_C_IFD_FLD_DATA = '' or
    :I_C_IFD_FLD_DATA= @abs_char or
    :I_C_IFD_FLD_DATA = @nochg_char)
  {
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    publish data where client_id = @sysparmvalue
   }
  else
   {
    publish data where res = :I_C_IFD_FLD_DATA
   }
}
",623,1,"20210202173158","","SLIMP_I",""
"GS1_GET_COD_PAYMENT_TYP","SL_IFD_FLD","MOCA","GS1 Get Code Payment Type","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
    {
        [select pt.paycod code_payment_type
              from paytrm pt,
                   dscmst dm
             where pt.paycod = dm.colval           
               and pt.paycod= :i_c_ifd_fld_data            
               and dm.locale_id = nvl(@locale_id, @@locale_id)    
        ] catch(-1403)
        |
        if(@? != -1403)
        {
          publish data where res = @code_payment_type
        }
        else
        {
                /* if the passed order code payment type in order message is 
                 * non-existing, we are throwing error.
                */
                get inbound full validation flag
                |
                if (@inb_full_vld_flg)
                {
                    log full validation error message
                      where err_code = 2003
                        and lookup_argdsc = 'cod_payment_type'
                        and argval = :i_c_ifd_fld_data
                    |
                    publish data where res = ''
                }
                else
                {
                    set return status
                        where status = 2003
                          and errnum  = '2003'
                          and argval  = :i_c_ifd_fld_data
                          and lookup_argdsc = 'cod_payment_type'                        
                }
        }
   }   
else
    publish data where res = ''",1598,1,"20210202173205","","SLIMP_I",""
"GS1_GET_CUSTOMER_NUMBER","SL_IFD_FLD","MOCA","Retrieve stcust value from order","F","F","F","F","F","T","F","publish data where <<OVERSTACKED_ARGS>>
|
[select ord.stcust
   from shipment_line,
        ord
  where shipment_line.ship_line_id = @ship_line_id
    and shipment_line.wh_id = @wh_id    
    and shipment_line.ordnum = ord.ordnum
    and shipment_line.wh_id = ord.wh_id
    and shipment_line.client_id = ord.client_id] catch(-1403)
|
if(@? = -1403)
{
  if (:i_c_stop_id = '' or :i_c_stop_id = 'STP0000000')
   {
    publish data where res = @wh_id
   }
   else
   {
    publish data where res= 
   }
}
else
{
 publish data where res= @stcust
}
",548,1,"20210202173416","","SLIMP_I",""
"GS1_GET_DEF_LOCALE_ID_IF_NULL","SL_IFD_FLD","MOCA","Get Default Localie ID IF passed in Locale ID is Null","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_locale_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_locale_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_locale_id = '' or 
    :i_c_locale_id = @abs_char or 
    :i_c_locale_id = @nochg_char)
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
else
    publish data where amd_locale_data=:i_c_locale_id",450,3,"20210202173205","20210202173349","SLIMP_I","SLIMP_I"
"GS1_GET_FIRST_TM_LOAD_ID","SL_IFD_FLD","MOCA","Get the tms_move_id of first shipment which tms_move_id is not  in the load","F","F","F","F","F","F","T","[select distinct tms_move_id
   from stop
   join shipment
     on stop.stop_id = shipment.stop_id
  where stop.car_move_id = :I_C_IFD_FLD_DATA
    and tms_move_id is not ] catch(-1403) >> res
|
if(@? != -1403)
{
publish top rows
  where res = @res
    and rows = 1
}
else
{
publish data
  where res = ''
}",310,1,"20210202173415","","SLIMP_I",""
"GS1_GET_INVDTL_FOR_RECEIPT","SL_RETR_MTHD_IMPL","MOCA","List inventory for the GS1 system","F","F","F","F","F","F","T","list gs1 inventory detail for blind receipt where dtlnum = :i_c_dtlnum",70,1,"20210202173458","","SLIMP_I",""
"GS1_GET_INVSTS","SL_IFD_FLD","MOCA","GS1 Get Inventory Status","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>> 
|
sl_get data_attr where src_sys_id = @evt_sys_id and value = @ifd_fld_data  
|
if ( @is_absent = 'T' or @is_ = 'T' or @is_nochg = 'T' ) 
{
    sl_get data_attr where src_sys_id = @evt_sys_id and value = @temp_invsts_prg
    |
    if ( @is_absent = 'T' or @is_ = 'T' or @is_nochg = 'T' )
    {
        sl_get data_attr where src_sys_id = @evt_sys_id and value = @hststs
        |
        if ( @is_absent = 'T' or @is_ = 'T' or @is_nochg = 'T' )
        {
        	publish data where invsts_prg = ''
        }
        else
        {
            publish data where invsts_prg = @hststs
        }
    }
    else
    {
        publish data where invsts_prg = @temp_invsts_prg
    }
}
else
{
    publish data where invsts_prg = ''
}
",781,1,"20210202173205","","SLIMP_I",""
"GS1_GET_ORD_VERB","SL_IFD_FLD","MOCA","Get Order Moca Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
    /*  In case of CHANGE_BY_REFRESH order has to be
    added, if not present in the DB.  Here we are checking the existence
    of order and deciding the action  */
	if(:i_c_documentActionCode != 'ADD')
	{ 
		[ select decode(min(ordnum), , 'create', 'change' ) moca_verb /* :o_c_moca_verb */
		    from ord 
		   where ordnum = :i_c_ordnum 
		     and client_id = :i_c_client_id 
		     and wh_id = :i_c_wh_id] catch(-1403)    
		|
		if (:i_c_documentActionCode = 'DELETE')
		{
		    publish data where moca_verb = 'delete'
		}
		else
		    publish data where moca_verb = @moca_verb    
	}
	else
	{
	    publish data where moca_verb = 'create'
	}
	|
	/* save the moca verb and wh_id information for use in the 
	 * post processing algorithm 
	 */ 
	save session variable
	     where name = 'wh_id'
		   and value = :i_c_wh_id catch (@?)
	| 
	save session variable
	     where name = 'moca_verb_order'
		   and value = @moca_verb catch (@?)
	| 
	publish data where moca_verb = @moca_verb
}",1020,1,"20210202173204","","SLIMP_I",""
"GS1_GET_ORDER_PRIORITY","SL_IFD_FLD","MOCA","Determines the order priority.","F","F","F","F","F","F","T","/**
   * Get the Order line priority and validate for  value. If it is available then 
   * Use the converted WM Priority value for the GS1 Priority value as order line
   * priority.  
   * 
   * Otherwise get the Order priority and validate for  value. Use the converted
   * WM Priority value for the GS1 Priority value as order line priority.  
   */
sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
{
    publish data where res = :i_c_ifd_fld_data
}
else
{
    sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ord_prcpri
    |
    if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
    {
        publish data where res = :i_c_ord_prcpri
    }
    else
    {
        publish data where res = :i_c_prcpri
    }
}
|
convert gs1 code to wm code
     where polval  = 'ORD-PRIORITY'
       and gs1Code =  @res
       and wh_id   = :I_C_WH_ID catch(@?)
|
if (@wm_code) 
{
    publish data where res = @wm_code
}
else 
{
    publish data where res = '5'
}",1088,1,"20210202173205","","SLIMP_I",""
"GS1_GET_ORDNOTE_VERB","SL_IFD_FLD","MOCA","Get Order Header Note MOCA Verb","F","F","F","F","F","F","T","
:i_c_moca_nq_remote_str 
{
[select decode(min('x'), , 'create', 'change') moca_verb  
   from ord_note   
 where ordnum = :i_c_ordnum 
    and ((notlin = lpad(:i_c_notlin,4,'0')) 
      or (notlin = :i_c_notlin)) 
    and client_id = :i_c_client_id 
    and wh_id = :i_c_wh_id ] 
}",286,1,"20210202173205","","SLIMP_I",""
"GS1_GET_PRT_CLIENT_ID","SL_IFD_FLD","MOCA","Gets a prt client ID based on a field value if present, or defaults to '----' in a non-3PL system.","F","F","F","F","F","F","T","get installed configuration
    where config = 'THIRD-PARTY-LOGISTICS'
|
if (@installed = 0)
{
    publish data where res = '----'
}
else
{   
    publish data where res = :I_C_IFD_FLD_DATA
}
",192,3,"20210202173205","20210202173312","SLIMP_I","SLIMP_I"
"GS1_GET_REMOTE_STRING","SL_IFD_FLD","MOCA","Get Remote Execute String","F","F","F","F","F","F","T","sl_list sys_def where sys_id = :i_c_dest_sys_id | if (@service and @service != '' and @sl_host_sys_flg and @sl_host_sys_flg = 'F') { 	publish data where  	moca_nq_remote_str =  'remote("' || @service || '") ' } else { 	publish data where moca_nq_remote_str ='' }",262,1,"20210202173204","","SLIMP_I",""
"GS1_GET_RET_DTL_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Returns Detail","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_wh_id
|
:i_c_moca_nq_remote_str 
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from retdtl
where rmanum = :i_c_rmanum
  and lin_num = :i_c_lin_num
  and wh_id = @wh_id]
}",244,1,"20210202173206","","SLIMP_I",""
"GS1_GET_RET_HDR_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Returns Header","F","T","F","F","F","F","T","get warehouse id where wh_id = :i_c_wh_id
|
:i_c_moca_nq_remote_str 
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from rethdr 
where 
rmanum = :i_c_rmanum
  and wh_id = @wh_id]
|
publish data where moca_verb = @moca_verb
}
",262,1,"20210202173206","","SLIMP_I",""
"GS1_GET_SERVTYP","SL_IFD_FLD","MOCA","GS1 Get Service Type","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
    {
      [ select cd.codval serv_type
          from codmst cd,
               dscmst dm
         where cd.codval = dm.colval
           and cd.colnam = dm.colnam
           and cd.codval = :i_c_ifd_fld_data  
           and cd.colnam = 'srv_type' 
           and dm.locale_id = nvl(@locale_id, @@locale_id)      
        ] catch(-1403)
        |
        if(@? != -1403)
        {
          publish data where res = @serv_type
        }
        else
        {
                /* if the passed order service type in order message is 
                 * non-existing, we are throwing error.
                */
                get inbound full validation flag
                |
                if (@inb_full_vld_flg)
                {
                    log full validation error message
                        where err_code = 2003
                          and lookup_argdsc = 'srv_type'
                          and argval = :i_c_ifd_fld_data
                    |
                    publish data where res = ''
                }
                else
                {
                    set return status
                         where status = 2003
                            and errnum  = '2003'
                            and argval  = :i_c_ifd_fld_data
                            and lookup_argdsc = 'srv_type'
                }
        }
   }   
else
    publish data where res = ''
",1588,1,"20210202173205","","SLIMP_I",""
"GS1_GET_UNIT_INFO","SL_IFD_FLD","MOCA","Formats passed DCS unit as a GS1 unit formatted string","F","F","F","F","F","F","T","get gs1 unit information where source_type = :I_C_IFD_FLD_MISC_DATA
|
publish data where value = @un_cefact_cod
",112,5,"20210202173359","20210202173557","SLIMP_I","SLIMP_I"
"GS1_GET_WM_COUNTRY","SL_IFD_FLD","MOCA","Gets the wm country for an iso3166alpha2 country code","F","F","F","F","F","F","T","convert iso3166alpha2 to wm country where country = :I_C_IFD_FLD_DATA",69,3,"20210202173205","20210202173349","SLIMP_I","SLIMP_I"
"GS1_GET_WM_ORDER_TYPE","SL_IFD_FLD","MOCA","Gets the wm order type code for a gs1 order code","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
sl_get data_attr 
    where src_sys_id = :i_c_dest_sys_id 
      and value = @ordsubtype catch(507)
|
if (@? != 0 or @is_ = 'T' or @is_nochg = 'T' or @is_absent = 'T')
{
    publish data where ordsubtype = ''
}
|
if (:I_C_IFD_FLD_DATA = '220')
{
    [select invtyp order_type
       from invtypmst
      where gs1_invtyp = :I_C_IFD_FLD_DATA
        and rownum = 1
   order by wm_default_flg DESC] catch(-1403)
}
else if(@ordsubtype is not )
{
    publish data where order_type = @ordsubtype
}
else
{
   [select ordtyp order_type 
      from ord_typ
     where gs1_ordtyp = :I_C_IFD_FLD_DATA
       and @+wh_id
       and rownum     = 1
  order by wm_default_flg DESC] catch(-1403)
}
|
if(@order_type is not ) 
{
    publish data where order_type = @order_type
} 
else
{
    publish data where order_type = ''
}",864,1,"20210202173204","","SLIMP_I",""
"GS1_PRC_HOST_CAR_MOVE_ALG","SL_IFD_SEG_PROC","MOCA","Process Load Unplan GS1 transaction","F","F","F","F","T","T","T","
process load unplan where <<OVERSTACKED_ARGS>>",47,1,"20210202173249","","SLIMP_I",""
"GS1_PRC_HOST_ORDER","SHIPPING","MOCA","Process GS1 Order Download","F","F","F","F","T","T","T","process gs1 order where <<OVERSTACKED_ARGS>>
|
add to session variable list            
        where name  = 'ordnum_list'
            and value = :i_c_ordnum
|
get session variable where name = 'delete_ordline_ordnum' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
  where name = 'delete_ordline_ordnum'
     and value = :i_c_ordnum
}
|
get session variable where name = 'delete_ordline_client' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
  where name = 'delete_ordline_client'
     and value = :i_c_client_id
}
|
get session variable where name = 'delete_ordline_wh' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
  where name = 'delete_ordline_wh'
     and value = :i_c_wh_id
}
|
get session variable where name = 'delete_ordline_dflt_ordlin_chg_reacod' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
  where name = 'delete_ordline_dflt_ordlin_chg_reacod'
     and value = :i_c_dflt_ordlin_chg_reacod
}
|
if (@transportServiceCategoryType = '100') {
    process gs1 order line service condition where <<OVERSTACKED_ARGS>>
}
",1087,1,"20210202173204","","SLIMP_I",""
"GS1_PRC_HOST_ORDLINE","SHIPPING","MOCA","Process GS1 Order Line Download","F","F","F","F","T","T","T","if (:i_c_trntyp != 'D' and :i_c_cancelled_flg != '1' and :i_c_wh_id is not  )
translate for simple rules where <<OVERSTACKED_ARGS>> and proc_typ ='I'
|
process gs1 order line  where <<OVERSTACKED_ARGS>>
|
add to session variable list            
        where name  = 'delete_ordline_ordlin_list' 
            and value = :i_c_ordlin
|
get session variable where name = 'delete_ordline_reacod' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
  where name = 'delete_ordline_reacod'
     and value = ''''|| @wm_reacod || ''''
}
|
get session variable where name = 'delete_ordline_chg_reacod' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
  where name = 'delete_ordline_chg_reacod'
     and value = ''''|| @ordlin_chg_reacod_orig || ''''
}
|
if (@transportServiceCategoryType = '100') {
    process gs1 order line service condition where <<OVERSTACKED_ARGS>>
}",889,1,"20210202173205","","SLIMP_I",""
"GS1_PRC_INBOUND_ORDER_DELETE","SL_IFD_SEG_PROC","MOCA","Inbound order delete algorithm","F","F","F","F","F","T","T","process gs1 inbound order where <<OVERSTACKED_ARGS>>

",54,1,"20210202173204","","SLIMP_I",""
"GS1_PRC_LOAD_SHIPMENT","SL_IFD_SEG_PROC","MOCA","If the tms_move_id of the shipment is , we should update it to first_tm_load_id","F","F","F","F","F","F","T","change gs1 shipment tms move id 
 where ship_id = :i_c_ship_id
    and route_id = :i_c_routeid
    and stop_id = :i_c_stop_id
    and tms_move_id = :i_c_tms_move_id",164,1,"20210202173416","","SLIMP_I",""
"GS1_PRC_OL_ALLOC_RULE_DTL","SL_IFD_SEG_PROC","MOCA","Processing algorithm to process allocation rule detail information.","F","F","F","F","T","T","T","process gs1 allocation rule detail where <<OVERSTACKED_ARGS>>",61,1,"20210202173205","","SLIMP_I",""
"GS1_PRC_OL_ALLOC_RULE_HDR","SL_IFD_SEG_PROC","MOCA","Algorithm to update rule name associated with orders","F","F","F","F","F","T","T","process gs1 allocation rule header where <<OVERSTACKED_ARGS>>
|
publish data where rule_nam_new = @rule_nam
|
[select rule_nam rule_nam_old
   from ord_line
 where ordnum  = :i_c_ordnum
    and ordlin     = @ordlin
    and ordsln    = @ordsln
    and client_id = :i_c_client_id
    and wh_id     = @wh_id] catch (-1403)
|
if (@rule_nam_new != '')
{
   [update ord_line
         set rule_nam = @rule_nam_new
     where client_id  = :i_c_client_id
        and ordnum   = :i_c_ordnum
        and ordlin      = @ordlin
        and ordsln     = @ordsln
        and wh_id      = @wh_id] catch (-1403)
}
|
if (@rule_nam_old != '')
{
    remove allocation rule header
       where rule_nam = @rule_nam_old
          and wh_id       = @wh_id catch (11473) /* Dependant records exist for the rule */
}",791,1,"20210202173205","","SLIMP_I",""
"GS1_PROCESS_ADDRESS","SL_IFD_SEG_PROC","MOCA","Gets or creates the address","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
get session variable
     where name = 'is_address_segment_absent' catch (-1403)  
|
if (@? = 0)
{
save session variable 
    where name = @adr_id_export_name
      and value = @host_ext_id
}
else
{
    process gs1 address
}",266,1,"20210202173205","","SLIMP_I",""
"GS1_PROCESS_APPT","SL_IFD_SEG_PROC","MOCA","process the appointment","F","F","F","F","F","T","T","process load appointment
",25,1,"20210202173329","","SLIMP_I",""
"GS1_PROCESS_CUSTOMER","SL_IFD_SEG_PROC","MOCA","Gets, creates, or updates the customer","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
get session variable
    where name = 'is_address_segment_absent' catch (-1403)  
|
if (@? = -1403)
{
    process gs1 customer
}
else{
      save session variable 
    where name = 'is_address_segment_absent'
      and value = 
}",275,1,"20210202173205","","SLIMP_I",""
"GS1_PROCESS_HAND_INS_COD","SL_IFD_SEG_PROC","MOCA","Save the handling Instruction Code to the session","F","F","F","F","F","F","T","if (:I_C_HAND_INS_COD) 
{
    get session variable where name = 'handling_instruction_code' catch (@?)  
    |
    if (@? != 0) 
    {
        save session variable where name = 'handling_instruction_code' and value = :I_C_HAND_INS_COD
    }
    else
    {
        save session variable where name = 'handling_instruction_code' and value = @value || ',' || :I_C_HAND_INS_COD
    }
}",382,1,"20210202173205","","SLIMP_I",""
"GS1_PROCESS_HAND_INS_PARAM","SL_IFD_SEG_PROC","MOCA","Save the handling Instruction Parameter to the session","F","F","F","F","F","F","T","if (:I_C_HAND_INS_PARAM) 
{
    get session variable where name = 'handling_instruction_parameter' catch (@?)  
    |
    if (@? != 0) 
    {
        save session variable where name = 'handling_instruction_parameter' and value = :I_C_HAND_INS_PARAM
    }
    else
    {
        save session variable where name = 'handling_instruction_parameter' and value = @value || ',' || :I_C_HAND_INS_PARAM
    }
}",403,1,"20210202173205","","SLIMP_I",""
"GS1_TRANSLATE_PARTIAL_FLAG","SL_IFD_FLD","MOCA","GS1_TRANSLATE_PARTIAL_FLAG","F","F","F","F","F","F","T","if (:I_C_IFD_FLD_DATA = 'NO_PARTIAL_DELIVERY_ALLOWED') {
  publish data where parflg = 0
}
else {
   publish data where parflg =1
}",131,1,"20210202173205","","SLIMP_I",""
"GS1_VALIDATE_MIN_SHELF_HRS","SL_IFD_FLD","MOCA","Any standardized, reproducible unit that can be used to measure any physical property, only "HUR" accepted","F","F","F","F","F","F","T","sl_get data_attr where src_sys_id = :i_c_dest_sys_id and value = :i_c_ifd_fld_data
|
if (@is_ = 'F' and @is_nochg = 'F' and @is_absent = 'F')
{
        if (:i_c_ifd_fld_data = 'HUR')
        {
            publish data where timemeasurementunitcode = 'HUR'
        }
        else
        {
            set return status
                where status = 12047
        }
}
else 
{
    publish data where res = 
}",415,1,"20210202173205","","SLIMP_I",""
"HOLD_INB_PRC","SL_GENERAL","MOCA","Hold processing algorithm","F","F","F","F","T","T","T","process host hold definition where <<OVERSTACKED_ARGS>>",55,1,"20210202172856","","SLIMP_I",""
"IFD_O_CONTEXT_TEST","SL_COMM","MOCA","Takes an IFD and Writes it to Stdout (Screen)","F","F","F","F","F","F","F","sl_send ifd_to_stdout where sys_id = :I_C_SYS_ID and comm_mode_cd = :I_C_COMM_MODE_CD and comm_dir_cd = :I_C_COMM_DIR_CD and pre_sys_alg_id = :I_C_PRE_SYS_ALG_ID and post_sys_alg_id = :I_C_POST_SYS_ALG_ID and alg_id_cd = :I_N_ALG_ID_CD and alg_context = :I_V_ALG_CONTEXT and status = :I_N_STATUS and comm_mthd_id = :I_C_COMM_MTHD_ID and pre_alg_id = :I_C_PRE_ALG_ID and alg_id = :I_C_ALG_ID and post_alg_id = :I_C_POST_ALG_ID",425,1,"20210202171439","","SLIMP_I",""
"IFD_O_CONTEXT_TEST_SYS","SL_COMM","MOCA","Takes an IFD and Writes it to Stdout (Screen)","F","F","F","F","F","F","F","sl_send ifd_to_stdout where sys_id = :I_C_SYS_ID and comm_mode_cd = :I_C_COMM_MODE_CD and comm_dir_cd = :I_C_COMM_DIR_CD and pre_sys_alg_id = :I_C_PRE_SYS_ALG_ID and post_sys_alg_id = :I_C_POST_SYS_ALG_ID and alg_id_cd = :I_N_ALG_ID_CD and alg_context = :I_V_ALG_CONTEXT and status = :I_N_STATUS",295,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE","SL_COMM","MOCA","Takes an IFD and creates an ASCII flat file.  MUST USE THIS TO RESPECT BREAK-ON-ROOT LOGIC","F","F","F","F","F","F","F","publish data
where
      directory = :I_C_DIRECTORY
and   filename  = :I_C_FILENAME
and   ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX
and   ifd_data_blk_cnt = :I_N_IFD_DATA_DTL_CNT
and   alg_context = :I_V_ALG_CONTEXT
|
sl_set comm_cmnt where comm_cmnt = ''
|
sl_send ifd_to_file_open
|
sl_send ifd_to_file_write
where
      ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX
and   ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT
and   ifd_data_dtl = :I_V_IFD_DATA_DTL
and   alg_context = :I_V_ALG_CONTEXT
and   eol_delim = :I_C_EOL_DELIM
|
sl_send ifd_to_file_close",546,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE_CLOSE","SL_COMM","MOCA","Closes an ASCII flat file that was opened previously","F","F","F","F","F","F","F","sl_send ifd_to_file_close where alg_context = :I_V_ALG_CONTEXT",62,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE_CLOSE_FTP","SL_COMM","MOCA","Closes an ASCII flat file, then FTP it to host","F","F","F","F","F","F","F","
sl_send ifd_to_file_close
where alg_context = :I_V_ALG_CONTEXT;
sl_send legacy_file_to_ftp
where host_id = :I_C_HOST_ID
and   port_id = :I_C_PORT_ID
and   userid = :I_C_USERID
and   passwd = :I_C_PASSWD
and   srcdir = :I_C_SRCDIR
and   srcfile = :I_C_SRCFILE
and   destdir = :I_C_DESTDIR
and   destfile = :I_C_DESTFILE
and   trgdir = :I_C_TRGDIR
and   trgfile = :I_C_TRGFILE
and   alg_context = :I_V_ALG_CONTEXT
and   logdir = :I_C_LOGDIR
and   logfile = :I_C_LOGFILE
and   noecho = :I_N_NOECHO
and   timeout = :I_N_TIMEOUT
and   verbose = :I_N_VERBOSE",553,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE_CLOSE_FTP_NT","SL_COMM","MOCA","Closes an ASCII flat file, then FTP it to NT host","F","F","F","F","F","F","F","sl_send ifd_to_file_close where alg_context = :I_V_ALG_CONTEXT; [select replace('ftp_file ':I_C_HOST_ID' ':I_C_USERID' ':I_C_PASSWD' ':I_C_SRCDIR' ':I_C_SRCFILE' ':I_C_DESTDIR'  ':I_C_DESTFILE'  ':I_C_TRGFILE'', '''', '') use_command from dual] | sl_run system where i_command = @use_command",291,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE_CLOSE_TRG","SL_COMM","MOCA","Closes an ASCII flat file that was opened previously","F","F","F","F","F","F","F","sl_send ifd_to_file_close where alg_context = :I_V_ALG_CONTEXT | sl_send trg_file where trgdir = :I_C_TRGDIR and trgfile = :I_C_TRGFILE",135,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE_FTP","SL_COMM","MOCA","FTP an existing file to a host system","F","F","F","F","F","F","F","
sl_send legacy_file_to_ftp
where host_id = :I_C_HOST_ID
and   port_id = :I_C_PORT_ID
and   userid = :I_C_USER_ID
and   passwd = :I_C_PASSWD
and   srcdir = :I_C_SRCDIR
and   srcfile = :I_C_SRCFILE
and   destdir = :I_C_DESTDIR
and   destfile = :I_C_DESTFILE
and   alg_context = :I_V_ALG_CONTEXT
and   logdir = :I_C_LOGDIR
and   logfile = :I_C_LOGFILE
and   noecho = :I_N_NOECHO
and   timeout = :I_N_TIMEOUT
and   verbose = :I_N_VERBOSE",434,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE_OPEN","SL_COMM","MOCA","Opens an ASCII flat file for writing","F","F","F","F","F","F","F","sl_send ifd_to_file_open where directory = :I_C_DIRECTORY and filename = :I_C_FILENAME and alg_context = :I_V_ALG_CONTEXT",121,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE_TRG","SL_COMM","MOCA","Takes an IFD and creates an ASCII flat file and a trigge file.  MUST USE THIS TO RESPECT BREAK-ON-ROOT LOGIC","F","F","F","F","F","F","F","publish data
where
      directory = :I_C_DIRECTORY
and   filename = :I_C_FILENAME
and   ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX
and   ifd_data_blk_cnt = :I_N_IFD_DATA_DTL_CNT
and   alg_context = :I_V_ALG_CONTEXT
|
sl_set comm_cmnt where comm_cmnt = ''
|
sl_send ifd_to_file_open
|
sl_send ifd_to_file_write
where
      ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX
and   ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT
and   ifd_data_dtl = :I_V_IFD_DATA_DTL
and   alg_context = :I_V_ALG_CONTEXT
and   eol_delim = :I_C_EOL_DELIM
|
sl_send ifd_to_file_close
|
sl_send trg_file where trgdir = :I_C_TRGDIR and trgfile = :I_C_TRGFILE",618,1,"20210202171439","","SLIMP_I",""
"IFD_O_FILE_WRITE","SL_COMM","MOCA","Writes to a previously opened flat file","F","F","F","F","F","F","F","sl_send ifd_to_file_write where ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX and ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT and ifd_data_dtl = :I_V_IFD_DATA_DTL and alg_context = :I_V_ALG_CONTEXT and eol_delim = :I_C_EOL_DELIM",220,1,"20210202171439","","SLIMP_I",""
"IFD_O_FTP","SL_COMM","MOCA","Takes an IFD and sends an ASCII flat file.  MUST USE THIS TO RESPECT BREAK-ON-ROOT LOGIC","F","F","F","F","F","F","F","publish data
where
      directory = :I_C_DIRECTORY
and   filename = :I_C_FILENAME
and   ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX
and   ifd_data_blk_cnt = :I_N_IFD_DATA_DTL_CNT
and   alg_context =  :I_V_ALG_CONTEXT
|
sl_set comm_cmnt where comm_cmnt = ''
|
sl_send ifd_to_file_open
|
sl_send ifd_to_file_write
where
      ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX
and   ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT
and   ifd_data_dtl = :I_V_IFD_DATA_DTL
and   alg_context = :I_V_ALG_CONTEXT
and   eol_delim = :I_C_EOL_DELIM
|
sl_send ifd_to_file_close
|
sl_send legacy_file_to_ftp
where host_id = :I_C_HOST_ID
and   port_id = :I_C_PORT_ID
and   userid = :I_C_USERID
and   passwd = :I_C_PASSWD
and   srcdir = :I_C_SRCDIR
and   srcfile = :I_C_SRCFILE
and   destdir = :I_C_DESTDIR
and   destfile = :I_C_DESTFILE
and   trgdir = :I_C_TRGDIR
and   trgfile = :I_C_TRGFILE
and   alg_context = :I_V_ALG_CONTEXT
and   logdir = :I_C_LOGDIR
and   logfile = :I_C_LOGFILE
and   noecho = :I_N_NOECHO
and   timeout = :I_N_TIMEOUT
and   verbose = :I_N_VERBOSE",1037,1,"20210202171439","","SLIMP_I",""
"IFD_O_RFC_CLOSE","SL_COMM","MOCA","Obsolete (no implementation) Closes a SAP connection was opened","F","F","F","F","F","F","F","sl_send ifd_to_rfc_close where alg_context = :I_V_ALG_CONTEXT and sap_host_fxn_name = :I_C_SAP_HOST_FXN_NAME",108,1,"20210202171439","","SLIMP_I",""
"IFD_O_RFC_OPEN","SL_COMM","MOCA","Obsolete (no implementation) Opens an SAP socket for writing","F","F","F","F","F","F","F","sl_send ifd_to_rfc_open where alg_context = :I_V_ALG_CONTEXT and parm_type = :I_C_PARM_TYPE and parm_client = :I_C_PARM_CLIENT and parm_user = :I_C_PARM_USER and parm_passwd = :I_C_PARM_PASSWD and parm_lang = :I_C_PARM_LANG and parm_lcheck = :I_C_PARM_LCHECK and parm_trace = :I_C_PARM_TRACE and parm_dest = :I_C_PARM_DEST and parm_gwhost = :I_C_PARM_GWHOST and parm_gwserv = :I_C_PARM_GWSERV and parm_mshost = :I_C_PARM_MSHOST and parm_r3name = :I_C_PARM_R3NAME and parm_group = :I_C_PARM_GROUP and parm_ashost = :I_C_PARM_ASHOST and parm_sysnr = :I_C_PARM_SYSNR and parm_tphost = :I_C_PARM_TPHOST and parm_tpname = :I_C_PARM_TPNAME and parm_use_sapgui = :I_C_PARM_USE_SAPGUI and parm_abap_debug = :I_C_PARM_ABAP_DEBUG and parm_snc_mode = :I_C_PARM_SNC_MODE and parm_snc_qop = :I_C_PARM_SNC_QOP and parm_snc_myname = :I_C_PARM_SNC_MYNAME and parm_snc_partnername = :I_C_PARM_SNC_PARTNERNAME and parm_snc_lib = :I_C_PARM_SNC_LIB",928,1,"20210202171439","","SLIMP_I",""
"IFD_O_RFC_WRITE","SL_COMM","MOCA","Obsolete (no implementation) Writes to a previously opened SAP connection","F","F","F","F","F","F","F","sl_send ifd_to_rfc_gettid where alg_context = :I_V_ALG_CONTEXT and ifd_data_seq = :I_N_IFD_DATA_SEQ and ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX; sl_send ifd_to_rfc_write where alg_context = :I_V_ALG_CONTEXT and ifd_data_seq = :I_N_IFD_DATA_SEQ and ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX and ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT and ifd_data_dtl = :I_V_IFD_DATA_DTL and ifd_seg_len = :I_N_IFD_SEG_LEN and sap_host_fxn_name = :I_C_SAP_HOST_FXN_NAME; sl_send ifd_to_rfc_puttid where alg_context = :I_V_ALG_CONTEXT",517,1,"20210202171439","","SLIMP_I",""
"IFD_O_STDOUT","SL_COMM","MOCA","Takes an IFD and Writes it to Stdout (Screen)","F","F","F","F","F","F","F","sl_send ifd_to_stdout where sys_id = :I_C_SYS_ID and comm_mode_cd = :I_C_COMM_MODE_CD and comm_dir_cd = :I_C_COMM_DIR_CD and pre_sys_alg_id = :I_C_PRE_SYS_ALG_ID and post_sys_alg_id = :I_C_POST_SYS_ALG_ID and alg_id_cd = :I_N_ALG_ID_CD and alg_context = :I_V_ALG_CONTEXT and status = :I_N_STATUS and comm_mthd_id = :I_C_COMM_MTHD_ID and pre_alg_id = :I_C_PRE_ALG_ID and alg_id = :I_C_ALG_ID and post_alg_id = :I_C_POST_ALG_ID and ifd_id = :I_C_IFD_ID and ifd_ver = :I_C_IFD_VER and ifd_data_seq = :I_N_IFD_DATA_SEQ and evt_data_seq = :I_N_EVT_DATA_SEQ and ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX and ifd_data_dtl_ndx = :I_N_IFD_DATA_DTL_NDX and ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT and ifd_data_dtl = :I_V_IFD_DATA_DTL and ifd_data_dtl_remaining = :I_N_IFD_DATA_DTL_REMAINING",780,1,"20210202171439","","SLIMP_I",""
"IFD_O_TABLE_WRITE","SL_COMM","MOCA","Writes to a previously opened flat file","F","F","F","F","F","F","F","sl_send ifd_to_table_write where ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX and ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT and ifd_data_dtl = :I_V_IFD_DATA_DTL and alg_context = :I_V_ALG_CONTEXT and table_name = :I_C_TABLE_NAME and table_owner = :I_C_TABLE_OWNER and dblink = :I_C_DBLINK and seq_name = :I_C_SEQ_NAME",312,1,"20210202171439","","SLIMP_I",""
"IFD_O_TCP_CLOSE","SL_COMM","MOCA","Closes a fd that was opened previously","F","F","F","F","F","F","F","sl_send ifd_to_tcp_close where alg_context = :I_V_ALG_CONTEXT",61,1,"20210202171439","","SLIMP_I",""
"IFD_O_TCP_OPEN","SL_COMM","MOCA","Opens an TCP socket for writing","F","F","F","F","F","F","F","sl_send ifd_to_tcp_open where host_id = :I_C_HOST_ID and port_id = :I_N_PORT_ID and alg_context = :I_V_ALG_CONTEXT",114,1,"20210202171439","","SLIMP_I",""
"IFD_O_TCP_WRITE","SL_COMM","MOCA","Writes to a previously opened socket","F","F","F","F","F","F","F","sl_send ifd_to_tcp_write where ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX and ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT and ifd_data_dtl = :I_V_IFD_DATA_DTL and alg_context = :I_V_ALG_CONTEXT",188,1,"20210202171439","","SLIMP_I",""
"IN_IFD_ACTION_EXECUTE_ALGS","SL_PROC_IFD_ACTION","MOCA","prTaskODRVariableWeight","F","F","F","F","F","F","","sl_execute inbound_ifd_algorithms",33,6,"20210202172238","20210202172717","SLIMP_I","SLIMP_I"
"LEF_GET_DEF_ADR_CLIENT_ID","SL_IFD_FLD","MOCA","Get Default Client ID IF passed in Client ID is Null","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_host_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_host_client_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_host_client_id = '' or
    :i_c_host_client_id = @abs_char or
    :i_c_host_client_id = @nochg_char)
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
}
else
    publish data where adr_client_id = :i_c_host_client_id",482,5,"20210202172856","","SLIMP_I",""
"LEF_GET_DEF_CLIENT_ID_IF_NULL","SL_IFD_FLD","MOCA","Get Default Client ID IF passed in Client ID is Null","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_client_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_client_id = '' or
    :i_c_client_id = @abs_char or
    :i_c_client_id = @nochg_char)
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    publish data where client_id = @sysparmvalue
}
else
    publish data where client_id = :i_c_client_id
|
publish data where client_id = upper(@client_id)",554,17,"20210202172856","","SLIMP_I",""
"LEF_GET_DEF_HOST_CLIENT_ID","SL_IFD_FLD","MOCA","Get Default Client ID IF passed in Host Client ID is Null","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_host_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_host_client_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_host_client_id = '' or
    :i_c_host_client_id = @abs_char or
    :i_c_host_client_id = @nochg_char)
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
}
else
    publish data where client_id = :i_c_host_client_id",478,1,"20210202172856","","SLIMP_I",""
"LEF_GET_DEF_LM_CLIENT_IF_NULL","SL_IFD_FLD","MOCA","Get Default Client ID IF passed in Item Client ID is Null","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_prt_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_prt_client_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_prt_client_id = '' or
    :i_c_prt_client_id = @abs_char or
    :i_c_prt_client_id = @nochg_char)
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
}
else
    publish data where client_id = :i_c_prt_client_id",472,1,"20210202172856","","SLIMP_I",""
"LEF_GET_DEF_LOCALE_ID_IF_NULL","SL_IFD_FLD","MOCA","Get Default Localie ID IF passed in Locale ID is Null","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_locale_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_locale_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_locale_id = '' or
    :i_c_locale_id = @abs_char or
    :i_c_locale_id = @nochg_char)
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
else
    publish data where amd_locale_data=:i_c_locale_id",448,22,"20210202172856","20210202173205","SLIMP_I","SLIMP_I"
"LEF_GET_DEF_PRTCLI_SUB_IF_NULL","SL_IFD_FLD","MOCA","Get Default Item Client ID for sub segments IF passed in Item Client ID is Null","F","F","F","F","F","F","T","get session variable where name = 'id_prt_client_id' catch (-1403)
| 
if(@? = 0)
{
    publish data where sys_id = @sys_id
                   and cur_prt_client_id = @value
}
else 
{
    publish data where sys_id = @sys_id
                   and cur_prt_client_id = :i_c_prt_client_id
}
|
sl_get sys_data_attr where sys_id = @sys_id
|
[select LPAD(@nochg_ind_char, length(@cur_prt_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(@cur_prt_client_id), @absent_ind_char) abs_char
   from dual]
|
if (@cur_prt_client_id = '' or
    @cur_prt_client_id = @abs_char or
    @cur_prt_client_id = @nochg_char)
{
    if (:i_c_client_id = '' or
    :i_c_client_id = @abs_char or
    :i_c_client_id = @nochg_char)
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @SysParmValue prt_client_id from dual]
    }
    else
        publish data where prt_client_id = :i_c_client_id
}
else
    publish data where prt_client_id = @cur_prt_client_id
|
publish data where prt_client_id = upper(@prt_client_id)
",1064,1,"20210202172856","","SLIMP_I",""
"LEF_GET_DEF_PRTCLIENT_IF_NULL","SL_IFD_FLD","MOCA","Get Default Item Client ID IF passed in Item Client ID is Null","F","F","F","F","F","F","T","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_prt_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_prt_client_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_prt_client_id = '' or
    :i_c_prt_client_id = @abs_char or
    :i_c_prt_client_id = @nochg_char)
{
    if (:i_c_client_id = '' or
    :i_c_client_id = @abs_char or
    :i_c_client_id = @nochg_char)
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @SysParmValue prt_client_id from dual]
    }
    else
        publish data where prt_client_id = :i_c_client_id
}
else
    publish data where prt_client_id = :i_c_prt_client_id
|
publish data where prt_client_id = upper(@prt_client_id)
",783,17,"20210202172856","","SLIMP_I",""
"LENS_IFD_O_IFD_XML","SL_COMM","MOCA","Inserts data into another SeamLES's IFD DATA table using the XML adapter - Sends to LENS with no attributes","F","F","F","F","F","F","T","sl_send ifd_to_rem_ifd_using_xml where ifd_data_seq = :I_N_IFD_DATA_SEQ and ifd_data_ptr = :i_c_ifd_data_ptr and put_nochg_absent_data = '' and sending_system = 'SEAMLES' and run_tran_flg = 'T'",193,1,"20210202172856","","SLIMP_I",""
"LENS_MODIFIED","SL_IFD_SEG_PROC","MOCA","","F","F","F","F","F","F","T","sl_log event where evt_id = 'LENS-SUBSCRIBE' and sys_id = 'DCS' AND sitprt = @",78,1,"20210202172856","","SLIMP_I",""
"LIST_ADDR_TRAN_OPR_ALG","ADDRESS","MOCA","List Address transportation operation algorithm","F","F","F","F","F","F","F","publish data where stop_act_typ = 'P' >> resPickUp
|
publish data where stop_act_typ = 'D' >> resDelivery
|
publish data combination where res = @resPickUp and res = @resDelivery",178,1,"20210202172856","","SLIMP_I",""
"LIST_ALTERNATE_PART_NUMBERS","SL_RETR_MTHD_IMPL","MOCA","List Alternate Item Numbers","F","F","F","F","F","F","T","list alternate part numbers rm
         where prtnum = :i_c_prtnum
           and prt_client_id = :i_c_prt_client_id",116,1,"20210202172856","","SLIMP_I",""
"LIST_CUST_ALG","ADDRESS","MOCA","List Customer algorithm","F","F","F","F","F","F","F","list tms address rm
where adr_id = :i_c_adr_id
|
publish data where cstnum = @adrnam",84,1,"20210202172856","","SLIMP_I",""
"LIST_GS1_INV_SER_NUM","SL_RETR_MTHD_IMPL","MOCA","list inventory serial number","F","F","F","F","F","F","T","list gs1 serial numbers for inventory
 where dtlnum = :i_c_invtid 
   and lodnum = :i_c_lodnum
   and subnum = :i_c_subnum
   and inv_hist_id = :i_c_inv_hist_id catch (-1403, 510)",179,1,"20210202173415","","SLIMP_I",""
"LIST_HRS_OPR_ALG","ADDRESS","MOCA","List Hours Operation algorithm","F","F","F","F","F","F","F","publish data where day_of_week = '0' >> sunday
|
publish data where day_of_week = '1' >> monday
|
publish data where day_of_week = '2' >> tuesday
|
publish data where day_of_week = '3' >> wednesday
|
publish data where day_of_week = '4' >> thursday
|
publish data where day_of_week = '5' >> friday
|
publish data where day_of_week = '6' >> saturday
|
publish data combination
 where res = @sunday
    and res = @monday
    and res = @tuesday
    and res = @wednesday
    and res = @thursday
    and res = @friday
    and res = @saturday",536,1,"20210202172856","","SLIMP_I",""
"LIST_LMS_ASN_DETAILS_RM","SL_RETR_MTHD_IMPL","MOCA","Generate Labor Transaction Data","F","F","F","F","F","F","T","generate labor transaction data
    where lmsasn = :i_c_lmsasn
        and lmscod = :i_c_lmscod
        and wh_id   = :i_c_wh_id",128,1,"20210202172856","","SLIMP_I",""
"LIST_SHIPMENT_LINES_INFO_RM","SL_RETR_MTHD_IMPL","MOCA","This algorithm retrieves the required part, order and shipment details for the SHIPMENT_LINE segment of Ship Cancel event","F","F","F","F","F","F","T","list shipment lines info rm
    where ship_id = :i_c_ship_id
      and ordnum = :i_c_ordnum
      and client_id = :i_c_client_id
      and wh_id = :i_c_wh_id",157,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ADDRESS_RM_ALG","SL_RETR_MTHD_IMPL","MOCA","This command returns all the fields that are needed by ADDRESS_SEG.","F","F","F","F","F","F","T","list tms address rm
where adr_id = :i_c_adr_id",46,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_EQUIPS_RM","SL_RETR_MTHD_IMPL","MOCA","Returns all the fields that are needed by ORDER_EQUIP_SEG","F","F","F","F","F","F","T","list tms order equips rm
          where ordnum = :i_c_ordnum
            and client_id = :i_c_client_id
            and wh_id = :i_c_wh_id
",140,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_HEADERS","SL_RETR_MTHD_IMPL","MOCA","List TMS Order Headers","F","F","F","F","F","F","T","list tms order headers rm",25,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_HEADERS_RM","SL_RETR_MTHD_IMPL","MOCA","Return all the fields that are needed by ORDER_SEG","F","F","F","F","F","F","T","List tms order headers rm
 where ordnum = :i_c_ordnum
and client_id= :i_c_client_id
and wh_id = :i_c_wh_id",106,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_LINE_EQUIPS_RM","SL_RETR_MTHD_IMPL","MOCA","Get Order Line Equips for TMS order lines","F","F","F","F","F","F","T","list tms order line equips rm
 where ordnum = :i_c_ordnum and client_id = :i_c_client_id and wh_id = :i_c_wh_id and ordlin = :i_c_ordlin and ordsln = :i_c_ordsln",161,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_LINE_NOTES_RM","SL_RETR_MTHD_IMPL","MOCA","Get Order Line Notes for TMS order lines","F","F","F","F","F","F","T","list tms order line notes rm
where ordnum = :i_c_ordnum and client_id = :i_c_client_id and wh_id = :i_c_wh_id and ordlin = :i_c_ordlin and ordsln = :i_c_ordsln",159,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_LINE_SERVICES","SL_RETR_MTHD_IMPL","MOCA","Get Order Line Services for TMS order lines","F","F","F","F","F","F","T","list tms order line services rm
 where ordnum = :i_c_ordnum and client_id = :i_c_client_id and wh_id = :i_c_wh_id and ordlin = :i_c_ordlin and ordsln = :i_c_ordsln",163,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_LINE_SERVOPT_RM","SL_RETR_MTHD_IMPL","MOCA","Get Order Line Service Options for TMD order lines","F","F","F","F","F","F","T","list tms order line service options rm
where ordnum = :i_c_ordnum
  and client_id = :i_c_client_id
  and ordlin = :i_c_ordlin
  and ordsln = :i_c_ordsln
  and wh_id = :i_c_wh_id",177,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_LINE_SERVPRM_RM","SL_RETR_MTHD_IMPL","MOCA","Get Order Line Service Options Parameters for TMD order lines","F","F","F","F","F","F","T","list tms order option parameters rm
where ordnum = :i_c_ordnum
  and client_id = :i_c_client_id
  and ordlin = :i_c_ordlin
  and ordsln = :i_c_ordsln
  and opt_id = :i_c_serv_id
  and wh_id = :i_c_wh_id
",203,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_LINES","SL_RETR_MTHD_IMPL","MOCA","List TMS Order Lines","F","F","F","F","F","F","T","list tms order lines RM
where tms_ordnum = :i_c_tms_ordnum",58,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_LINES_RM","SL_RETR_MTHD_IMPL","MOCA","Returns all the fields that are needed by ORDER_LINE_SEG","F","F","F","F","F","F","T","list tms order lines rm
          where ordnum = :i_c_ordnum
            and client_id = :i_c_client_id
            and wh_id = :i_c_wh_id",138,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_NOTES","SL_RETR_MTHD_IMPL","MOCA","Get Order Notes for TMS orders","F","F","F","F","F","F","T","list tms order notes rm
where tms_ordnum = :i_c_tms_ordnum",58,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_NOTES_ALG","SL_RETR_MTHD_IMPL","MOCA","Get Order Notes for TMS orders","F","F","F","F","F","F","T","list tms order notes rm
where ordnum = :i_c_ordnum
and client_id = :i_c_client_id
and wh_id = :i_c_wh_id",104,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_SERV_COND_RM","SL_RETR_MTHD_IMPL","MOCA","Returns all the fields that are needed by ORDER_SERV_COND_SEG","F","F","F","F","F","F","T","list tms order service condition rm
           where ordnum = :i_c_ordnum
            and client_id = :i_c_client_id
            and wh_id = :i_c_wh_id",151,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDER_SERVICES_RM","SL_RETR_MTHD_IMPL","MOCA","Returns all the fields that are needed by ORDER_SERVICES_SEG","F","F","F","F","F","F","T","list tms order services rm
          where ordnum = :i_c_ordnum
            and client_id = :i_c_client_id
            and wh_id = :i_c_wh_id
",142,1,"20210202172856","","SLIMP_I",""
"LIST_TMS_ORDLIN_SERV_COND_RM","SL_RETR_MTHD_IMPL","MOCA","Returns all the fields that are needed by ORDLIN_SERV_COND_SEG","F","F","F","F","F","F","T","list tms order line service condition rm
          where ordnum = :i_c_ordnum
            and ordlin = :i_c_ordlin
            and ordsln = :i_c_ordsln
            and client_id = :i_c_client_id
            and wh_id = :i_c_wh_id",229,1,"20210202172856","","SLIMP_I",""
"LM_CHECK_IF_DIRECT_100","SL_IFD_SEG_BLOCK","MOCA","Determine if a Direct 100  DRCTYP","F","F","F","F","F","F","T","if (:i_c_drctyp = 'WMS0100')
       publish data where blkval='T'
   else
       publish data where blkval='F'",110,1,"20210202172856","","SLIMP_I",""
"LM_CHECK_IF_DIRECT_101","SL_IFD_SEG_BLOCK","MOCA","Determine if a Direct 101  DRCTYP","F","F","F","F","F","F","T","if (:i_c_drctyp = 'WMS0101')
       publish data where blkval='T'
   else
       publish data where blkval='F'",110,1,"20210202172856","","SLIMP_I",""
"LM_CHECK_IF_DIRECT_102","SL_IFD_SEG_BLOCK","MOCA","Determine if a Direct 102  DRCTYP","F","F","F","F","F","F","T","if (:i_c_drctyp != 'WMS0102')
       publish data where blkval='F'
else
{
    /* find the pipe separator in the system id */
    publish data where start_pos = instr(:i_c_sys_id, '|')
    |
    /* if the pipe is not found then don't block */
    if (@start_pos = 0)
    {
        publish data where blkval = 'T'
    }
    else
    {
         /* if the pipe is found then extract the warehouse from the */
         /* system. */
         publish data where wh_id = substr(:i_c_sys_id, @start_pos+1)
         |
         if (@wh_id = :i_c_wh_id)
         {
             /* if the warehouse ids match then don't block */
             publish data where blkval = 'T'
         }
         else
         {
             /* block if the warehouse ids don't match */
             publish data where blkval = 'F'
         }
    }
}",819,1,"20210202172856","","SLIMP_I",""
"LM_CHECK_IF_DIRECT_104","SL_IFD_SEG_BLOCK","MOCA","Determine if a Direct transaction","F","F","F","F","F","F","T","if (:i_c_lmscod != 'D')
{
    publish data where blkval='F'
}
else
{
    publish data where blkval = 'T'
}",106,1,"20210202172856","","SLIMP_I",""
"LM_CHECK_IF_DIRECT_105","SL_IFD_SEG_BLOCK","MOCA","Determine if a Direct transaction","F","F","F","F","F","F","T","if (:i_c_lmscod != 'D')
{
    publish data where blkval='F'
}
else
{
    publish data where blkval = 'T'
}",106,1,"20210202172856","","SLIMP_I",""
"LM_CHECK_IF_INDIRECT","SL_IFD_SEG_BLOCK","MOCA","Validate if Indirect","F","F","F","F","F","F","T","if (:i_c_lmscod != 'I')
{
    publish data where blkval='F'
}
else
{
    publish data where blkval = 'T'
}",106,1,"20210202172856","","SLIMP_I",""
"MOVE_CONF_ACTCOD_ALG","SL_RETR_MTHD_IMPL","MOCA","MOVE_CONF_ACTCOD_ALG","F","F","F","F","F","F","T","if(:i_c_ovrloc != :i_c_sys_absent_ind_char and
 :i_c_ovrloc != :i_c_sys__ind_char and
 :i_c_ovrloc != :i_c_sys_nochg_ind_char) {
  publish data
   where lodnum = :i_c_lodnum
     and ovrloc = :i_c_ovrloc
     and actcod = 'LOCOVRRID'
} else if (:i_c_dstloc != :i_c_sys_absent_ind_char and
     :i_c_dstloc != :i_c_sys__ind_char and
     :i_c_dstloc != :i_c_sys_nochg_ind_char){
  publish data
   where lodnum = :i_c_lodnum
     and dstloc = :i_c_dstloc
} else {
  publish data
   where lodnum = :i_c_lodnum
     and dstloc = :i_c_wcs_id
}",546,1,"20210202172856","","SLIMP_I",""
"MOVE_CONF_OVRLOC_ALG","SL_RETR_MTHD_IMPL","MOCA","MOVE_CONF_OVRLOC_ALG","F","F","F","F","F","F","T","if (:i_c_actcod = 'LOCOVRRID'){
  publish data
   where lodnum = :i_c_lodnum
    and ovrloc = :i_c_ovrloc
    and ovrrea = :i_c_ovrrea
    and actcod = :i_c_actcod
}",165,1,"20210202172856","","SLIMP_I",""
"MOVE_CONF_PROC_ALG","SL_RETR_MTHD_IMPL","MOCA","MOVE_CONF_PROC_ALG","F","F","F","F","F","F","T","if(:i_c_actcod != 'LOCOVRRID'){
  publish data
   where lodnum = :i_c_lodnum
     and dstloc = :i_c_dstloc
}",108,1,"20210202172856","","SLIMP_I",""
"MOVE_CONF_SERVICES_ALG","SL_RETR_MTHD_IMPL","MOCA","MOVE_CONF_SERVICES_ALG","F","F","F","F","F","F","T","if(:i_n_load_attr1_flg = 1 or
   :i_n_load_attr2_flg = 1 or
   :i_n_load_attr3_flg = 1 or
   :i_n_load_attr4_flg = 1 or
   :i_n_load_attr5_flg = 1)
publish data
 where lodnum = :i_c_lodnum
  and load_attr1_flg = :i_n_load_attr1_flg
  and load_attr2_flg = :i_n_load_attr2_flg
  and load_attr3_flg = :i_n_load_attr3_flg
  and load_attr4_flg = :i_n_load_attr4_flg
  and load_attr5_flg = :i_n_load_attr5_flg",403,1,"20210202172856","","SLIMP_I",""
"PARTFOOT_DTL_RM","SL_RETR_MTHD_IMPL","MOCA","Item Footprint Detail Algorithm","F","F","F","F","F","F","T","list part footprint details where prtnum = :i_c_prtnum
and prt_client_id = :i_c_prt_client_id
and wh_id = :i_c_wh_id
and ftpcod = :i_c_ftpcod",141,1,"20210202172856","","SLIMP_I",""
"PARTFOOT_RM","SL_RETR_MTHD_IMPL","MOCA","Retrive Item Footprint Algorithm","F","F","F","F","F","F","T","list part footprints where prtnum = :i_c_prtnum
and prt_client_id = :i_c_prt_client_id
and wh_id = :i_c_wh_id
and ftpcod = :i_c_ftpcod",134,1,"20210202172856","","SLIMP_I",""
"PCK_REQ_RM_ALG","SL_RETR_MTHD_IMPL","MOCA","PCK_REQ_RM_ALG","F","F","F","F","F","F","T","list auto pick group
 where wrkref =nvl(:i_c_wrkref, '')
   and wcs_pck_grp = nvl(:i_c_wcs_pck_grp, '')",103,1,"20210202172856","","SLIMP_I",""
"PICK_CANCEL_RM_ALG","SL_RETR_MTHD_IMPL","MOCA","Pick error can come in 2 unique manners. Either as a exception to a pick request or to confirm a pick cancellation. This RM should return a row if the WCS is trying to cancel a pick request.","F","F","F","F","F","F","T","[select pend_can_pcksts,
        pend_can_req_dt
   from pckwrk_hdr
  where wrkref = :i_c_wrkref] catch(-1403)
|
if(@? != -1403){
  publish data
   where wrkref = :i_c_wrkref
      and cancod = :i_c_cancod
      and wcs_can_pcksts = @pend_can_pcksts
      and wcs_can_req_dt = @pend_can_req_dt
}",295,1,"20210202172856","","SLIMP_I",""
"PICK_CONF_DSTLOC_RM_AGL","SL_RETR_MTHD_IMPL","MOCA","PICK_CONF_DSTLOC_RM_AGL","F","F","F","F","F","F","T","if(:i_c_dstloc != :i_c_sys_absent_ind_char and
 :i_c_dstloc != :i_c_sys__ind_char and
 :i_c_dstloc != :i_c_sys_nochg_ind_char)
  publish data
   where lodnum = :i_c_lodnum
     and wrkref = :i_c_wrkref
     and dstloc = :i_c_dstloc
else {
  publish data
   where lodnum = :i_c_lodnum
     and wrkref = :i_c_wrkref
     and dstloc = :i_c_wcs_id
}
",350,1,"20210202172856","","SLIMP_I",""
"PICK_REQUEST_TEST","SL_RETR_MTHD_IMPL","MOCA","PICK_REQUEST_TEST","F","F","F","F","F","F","T","list inventory loads for display
 where stoloc = :i_c_srcloc
   and wh_id = :i_c_wh_id",86,1,"20210202172856","","SLIMP_I",""
"POST_LOAD_CREATE","SL_IFD_POST","MOCA","Perform load create or update post processing","F","F","F","F","F","T","T","post full validation status | publish data where <<OVERSTACKED_ARGS>>
|
post process load create where tms_load_id = @ENTITYIDENTIFICATION",138,1,"20210202173249","","SLIMP_I",""
"POST_LOAD_DELETE","SL_IFD_POST","MOCA","Perform load delete post processing","F","F","F","F","F","T","T","post full validation status",27,1,"20210202173249","","SLIMP_I",""
"PRC_CARR_HDR","SL_IFD_SEG_PROC","MOCA","Process Carrier Header","F","F","F","F","T","T","T","process gs1 party where <<OVERSTACKED_ARGS>>",44,1,"20210202173339","","SLIMP_I",""
"PRC_CARR_HDR_SRV","SL_IFD_SEG_PROC","MOCA","Process Carrier Header Service Level","F","F","F","F","T","T","T","process gs1 party details where <<OVERSTACKED_ARGS>>",52,1,"20210202173339","","SLIMP_I",""
"PRC_CSTMS_CNSGNMNT_ALG","SL_IFD_SEG_PROC","MOCA","Process Host Customs Consignment Download","F","F","F","F","T","T","T","publish data where trntyp = :i_c_trntyp
|
if (@trntyp = 'A' )
    create customs consignment where <<OVERSTACKED_ARGS>>
else if (@trntyp = 'C')
    change customs consignment where <<OVERSTACKED_ARGS>>
else if (@trntyp = 'D')
    remove customs consignment where <<OVERSTACKED_ARGS>>",283,1,"20210202172856","","SLIMP_I",""
"PRC_DCS51_BOMHDR_PREPARE","SL_IFD_PRE","MOCA","Prepare BOM For  Edit","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
{
[select :i_c_client_id client_id from dual]
|
if (@client_id='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID' |
    [select @sysparmvalue client_id from dual ]
}
|
[select count(*) cnt
    from bomhdr
        where bomnum = :i_c_bomnum
        and client_id = @client_id
        and wh_id = @wh_id ]
|
if (@cnt>0)
{
    [update bomhdr
        set edtflg = 0
      where bomnum = :i_c_bomnum
    and client_id = @client_id
        and wh_id = @wh_id]
    |
    [select count(*) cnt1
       from bomdtl
      where bomnum = :i_c_bomnum
        and client_id = @client_id
        and wh_id = @wh_id ]
    |
    if (@cnt1>0)
    [update bomdtl
        set edtflg = 0
          where bomnum = :i_c_bomnum
        and client_id = @client_id
            and wh_id = @wh_id]
    }
}",839,1,"20210202172856","","SLIMP_I",""
"PRC_DCS51_WKOHDR_PREPARE","SL_IFD_PRE","MOCA","Prepare Work Order For  Edit","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
{
    if (:i_c_client_id = '' or :i_c_client_id = @absent_ind_char)
    {
        sl_get sys_data_attr where sys_id = :i_c_sys_id
        |
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @SysParmValue client_id from dual]
    }
    else
    {
        [select :i_c_client_id client_id from dual]
    }
    |
    [select count(*) cnt
       from wkohdr
     where wkonum = :i_c_wkonum
       and wkorev = :i_c_wkorev
       and client_id = @client_id
       and wh_id = @wh_id]
    |
    if (@cnt>0)
    {
        /* First, remove notes. We'll recreate them in the download. */
         [delete from wkohdr_note
           where wkonum = :i_c_wkonum
             and wkorev = :i_c_wkorev
             and client_id = @client_id
             and wh_id = @wh_id] catch (-1403, 510)
         |
         [delete from wkodtl_note
           where wkonum = :i_c_wkonum
             and wkorev = :i_c_wkorev
             and client_id = @client_id
             and wh_id = @wh_id] catch (-1403, 510)
         |
         /* Update Work Order Header EDTFLG */
         [update wkohdr
             set edtflg = 0
           where wkonum = :i_c_wkonum
             and wkorev = :i_c_wkorev
             and client_id = @client_id
             and wh_id = @wh_id ]
         |
         /* Update Work Order Lines EDTFLG */
         [select count(*) cnt1
            from wkodtl
           where wkonum = :i_c_wkonum
             and wkorev = :i_c_wkorev
             and client_id = @client_id
             and wh_id = @wh_id ] catch (-1403, 510)
         |
         if (@? = 0)
         {
             if (@cnt1>0)
                 [update wkodtl
                 set edtflg = 0
                   where wkonum = :i_c_wkonum
                     and wkorev = :i_c_wkorev
                     and client_id = @client_id
                     and wh_id = @wh_id]
         }
    }
}",1953,1,"20210202172856","","SLIMP_I",""
"PRC_GS1_DEFSERV_ALG","SL_IFD_SEG_POST","MOCA","Maintain Default Service","F","F","F","F","T","T","T","publish data where <<OVERSTACKED_ARGS>>
|
[select LPAD(@nochg_ind_char, length(:i_c_serv_id), @nochg_ind_char) nochg_char_servId,
        LPAD(@absent_ind_char, length(:i_c_serv_id), @absent_ind_char) abs_char_servId,
        LPAD(@nochg_ind_char, length(:i_c_serv_req_flg), @nochg_ind_char) nochg_char_serv_req_flg,
        LPAD(@absent_ind_char, length(:i_c_serv_req_flg), @absent_ind_char) abs_char_serv_req_flg,
        LPAD(@nochg_ind_char, length(:i_c_def_serv_cod), @nochg_ind_char) nochg_char_def_serv_cod,
        LPAD(@absent_ind_char, length(:i_c_def_serv_cod), @absent_ind_char) abs_char_def_serv_cod
   from dual]
   |
   if ((:i_c_serv_id != '' or
    :i_c_serv_id != @abs_char_servId or
    :i_c_serv_id != @nochg_char_servId) and
     (:i_c_serv_req_flg != '' or
    :i_c_serv_req_flg != @abs_char_serv_req_flg or
    :i_c_serv_req_flg != @nochg_char_serv_req_flg) and
    (:i_c_def_serv_cod != '' or
    :i_c_def_serv_cod != @abs_char_def_serv_cod or
    :i_c_def_serv_cod != @nochg_char_def_serv_cod))
{

     execute integrator transaction
         where  resource = 'default service' 
	       and moca_verb = ':i_c_moca_verb'
}",1147,1,"20210202173205","","SLIMP_I",""
"PRC_HOST_ALLOC_RULE_DTL_ALG","SL_IFD_SEG_PROC","MOCA","Processing algorithm to process allocation rule detail information.","F","F","F","F","T","T","T","process host allocation rule detail where <<OVERSTACKED_ARGS>>",62,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_ALLOC_RULE_HDR_ALG","SL_IFD_SEG_PROC","MOCA","Processing algorithm to process allocation rule header information.","F","F","F","F","T","T","T","process host allocation rule header",35,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_ASSET_ASN","SL_IFD_SEG_PROC","MOCA","This algorithm is used to create ASN details for Empty and Non Empty Handling Units.","F","F","F","F","T","T","T","execute integrator transaction
    where validate_override_cmd = 'Validate Host Asset ASN'
      and override_cmd = 'Process Host Asset ASN'
      and <<OVERSTACKED_ARGS>>",171,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_BOM_DTL_PRCS_ALG","SL_IFD_SEG_PROC","MOCA","BOM Detail Process","F","F","F","F","T","T","T",":i_c_moca_verb bom detail processing information",48,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_BOM_PRCS_ALG","SL_IFD_SEG_PROC","MOCA","BOM Process","F","F","F","F","T","T","T",":i_c_moca_verb bom processing information",41,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_CAR_MOVE_ALG","SL_IFD_SEG_PROC","MOCA","Process Host Carrier Move Download","F","T","F","T","T","T","T","Process Host Carrier Move where <<OVERSTACKED_ARGS>>",52,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_CAR_SERV_ALG","SL_IFD_SEG_POST","MOCA","Maintain Order Line Carrier Service Options","F","F","F","F","T","T","T","
execute integrator transaction where  <<OVERSTACKED_ARGS>> and validate_override_cmd = 'validate pm order line service option' and override_cmd = 'create pm order line service option'",184,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_CAR_SERV_VAL_ALG","SL_IFD_SEG_POST","MOCA","Maintaint the Order Line Carrier Service Option Parameters","F","F","F","F","T","T","T","execute integrator transaction where <<OVERSTACKED_ARGS>> and validate_override_cmd = 'validate pm service option parameter' and override_cmd = 'create pm service option parameter'",180,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_CARR_DTL","SL_IFD_SEG_PROC","MOCA","Process Carrier Service Level","F","F","F","F","T","T","T","Process Host Carrier Detail",27,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_CARR_HDR","","MOCA","","T","T","T","T","T","T","T","Process Host Carrier Header",27,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_CUST","","MOCA","","T","T","T","T","T","T","T","Process Host Customer",21,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_DEFSERV_ALG","SL_IFD_SEG_POST","MOCA","Maintain Default Service","F","F","F","F","T","T","T","execute integrator transaction where <<OVERSTACKED_ARGS>> and resource = 'default service' and moca_verb = ':i_c_moca_verb'",123,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_FOOT","SL_IFD_SEG_PROC","MOCA","","T","T","T","T","T","T","T","Process Host Footprint",22,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_HOLD","SL_IFD_SEG_PROC","MOCA","validate and process host holds","F","F","F","F","T","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@acttyp != 'A' and @acttyp != 'R')
{
  /* eAPP_INVALID_ARG */
    set return status
      where status = 2003
        and argval = @acttyp
        and lookup_argdsc = 'trntyp'
}
|
execute integrator transaction
    where moca_verb = 'change'
      and resource = 'inventory holds'
      and override_cmd = 'process host holds'",372,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_ORDER_ALG","SHIPPING","MOCA","Process Host Order Download","F","F","F","F","T","T","T","Process Host Order where <<OVERSTACKED_ARGS>>
|
get session variable where name = 'ordnum_list' catch (@?)
|
if (@? != 0)
{
    save session variable where name = 'ordnum_list' and value = :i_c_ordnum
}
else
{
    save session variable where name = 'ordnum_list' and value = @value || ',' || :i_c_ordnum
}",305,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_ORDER_ASSIGN_ALG","SL_IFD_SEG_PROC","MOCA","Process Host Order Assignment","F","T","F","T","T","T","T","Process Host Order Assignment where <<OVERSTACKED_ARGS>>",56,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_ORDER_NOTE_ALG","SHIPPING","MOCA","Process Host Order Note Download","F","T","F","T","T","T","T","Process Host Order Note",23,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_ORDER_RULE_ALG","SL_IFD_SEG_PROC","MOCA","Algorithm to update rule name associated with orders","F","F","F","F","F","T","T","process host allocation rule header where <<OVERSTACKED_ARGS>>
|
publish data where rule_nam_new = @rule_nam
|
[select rule_nam rule_nam_old
   from ord_line
 where ordnum   = :i_c_ordnum
    and    ordlin   = @ordlin
    and    ordsln  = @ordsln
    and  client_id = :i_c_client_id
    and     wh_id = @wh_id] catch (-1403)
|
if (@rule_nam_new != '')
{
   [update ord_line
         set rule_nam = @rule_nam_new
     where client_id  = :i_c_client_id
        and ordnum   = :i_c_ordnum
        and ordlin      = @ordlin
        and ordsln     = @ordsln
        and wh_id      = @wh_id] catch (-1403)
}
|
if (@rule_nam_old != '')
{
    remove allocation rule header
       where rule_nam = @rule_nam_old
          and wh_id       = @wh_id catch (11473) /* Dependant records exist for the rule */
}",796,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_ORDLINE_ALG","SHIPPING","MOCA","Process Host Order Line Download","F","F","F","F","T","T","T","if (:i_c_trntyp != 'D' and :i_c_cancelled_flg != '1')
translate for simple rules where <<OVERSTACKED_ARGS>> and proc_typ ='I' and trntyp = :i_c_trntyp
|
Process Host Order Line  where <<OVERSTACKED_ARGS>>",204,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_ORDLINE_NOTE_ALG","SHIPPING","MOCA","Process Host Order Line Note Download","F","T","F","T","T","T","T","Process Host Order Line Note",28,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_PART","","MOCA","","T","T","T","T","T","T","T","{publish data where wh_id = :i_c_whse_id| Process Host Part where <<OVERSTACKED_ARGS>>| save session variable where name = 'id_prt_client_id' and value = :i_c_prt_client_id}",173,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_PICK_EXCLUSION_ALG","SHIPPING","MOCA","Process Host Pick exclusion","F","T","F","T","T","T","T","Process Host Pick Exclusion",27,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_RCPT_ASN","RECEIVING","MOCA","Process host receipt ASN","F","F","F","F","T","T","T","execute integrator transaction
    where validate_override_cmd = 'Validate Host Receipt ASN'
      and override_cmd = 'Process Host Receipt ASN'
      and <<OVERSTACKED_ARGS>>",175,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_RCPT_DISTRO","RECEIVING","MOCA","Process host receipt distro","F","F","F","F","T","T","T","{publish data where trans_flg = 1 | Process host receipt distro}",64,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_RCPT_INVOICE","RECEIVING","MOCA","Process Host Receipt Invoice","F","F","F","F","T","T","T","Process Host Receipt Invoice",28,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_RCPT_LINE","RECEIVING","MOCA","Process Host Receipt Line","F","F","F","F","T","T","T","Process Host Receipt Line",25,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_RCPT_SER_NUM","SL_IFD_SEG_PROC","MOCA","Process the serial numbers for the host inventory receipt","F","F","F","F","F","T","T","Process Host Receipt Serial Number  where <<OVERSTACKED_ARGS>>",62,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_RCPT_TRLR","RECEIVING","MOCA","Processing algorithm to process trailer information","F","F","F","F","T","T","T","get warehouse id where wh_id = :i_c_whse_id
|
publish data
    where stoloc_wh_id = nvl(:i_c_stoloc_wh_id, @wh_id )
       and yard_loc_wh_id = nvl(:i_c_yard_loc_wh_id, @wh_id )
|
process host receipt trailer where <<OVERSTACKED_ARGS>> and stoloc_wh_id=@stoloc_wh_id and yard_loc_wh_id=@yard_loc_wh_id",301,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_RCPT_TRUCK","SL_IFD_SEG_PROC","MOCA","Process Host Receipt Truck","F","F","F","F","T","T","T","{publish data where ifd_data_ptr =  | Process Host Receipt Truck where <<OVERSTACKED_ARGS>> }",97,5,"20210202172856","","SLIMP_I",""
"PRC_HOST_SHIPLIN_ALG","SHIPPING","MOCA","Process Host Shipment Line","F","T","F","T","T","T","T","Process Host Shipment Line",26,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_SHIPMENT_ALG","SHIPPING","MOCA","Process Host Shipment Download","F","T","F","T","T","T","T","Process Host Shipment where <<OVERSTACKED_ARGS>>",48,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_SHIPORD_NOTE_ALG","SHIPPING","MOCA","Process Host SHPORD Note","F","T","F","T","T","T","T","Process Host SHPORD Note where <<OVERSTACKED_ARGS>>",51,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_SHIPORD_ORD_ALG","SHIPPING","MOCA","Process Host SHPORD Order","F","T","F","T","T","T","T","save session variable
      where name = 'order_change_from_host' 
        and value = 'T'  
|
Process Host SHPORD Order where <<OVERSTACKED_ARGS>>",147,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_SHIPORD_SHIP_ALG","SHIPPING","MOCA","Process Host SHPORD Shipment","F","T","F","T","T","T","T","Process Host SHPORD Shipment where <<OVERSTACKED_ARGS>>",55,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_SHIPORDLIN_ALG","SHIPPING","MOCA","Process Host SHPORD Line","F","F","F","F","T","T","T","if (:i_c_trntyp != 'D')
translate for simple rules where <<OVERSTACKED_ARGS>> and proc_typ ='I' and trntyp = :i_c_trntyp
|
Process Host SHPORD Line where <<OVERSTACKED_ARGS>>",174,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_SHIPORDLIN_NOTE_ALG","SHIPPING","MOCA","Process HOST SHPORD Line Note","F","T","F","T","T","T","T","Process Host SHPORD Line Note where <<OVERSTACKED_ARGS>>",56,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_STOP_ALG","SL_IFD_SEG_PROC","MOCA","Process Host Stop Download","F","T","F","T","T","T","T","Process Host Stop where <<OVERSTACKED_ARGS>>",44,1,"20210202172856","","SLIMP_I",""
"PRC_HOST_SUPP","","MOCA","","T","T","T","T","T","T","T","Process Host Supplier",21,1,"20210202172856","","SLIMP_I",""
"PRC_INV_ASSET_ALG","SL_IFD_SEG_PROC","MOCA","Process Inventory Handling Unit","F","F","F","F","T","T","T","[select ser_flg from asset_typ where asset_typ = :i_c_asset_typ]
|
if (@ser_flg = 0)
{
    [select 1 from invlod where lodnum = :i_c_invt_id and asset_typ = :i_c_asset_typ]catch(-1403)
    |
    if (@? = -1403)
    {
        [select 1 from invsub where subnum = :i_c_invt_id and asset_typ = :i_c_asset_typ]catch(-1403)
        |
        if (@? = -1403)
        {
            create inventory asset where <<OVERSTACKED_ARGS>>
        }
    }
}
else
{
    [select 1 from ser_asset where asset_id = :i_c_asset_id]catch(-1403)
    |
    if (@? = -1403)
    {
        [select 1 from asset_link where asset_id = :i_c_asset_id]catch(-1403)
        |
        if (@? = -1403)
        {
            create inventory asset where asset_num = :i_c_invt_id and <<OVERSTACKED_ARGS>>
        }
    }
}",785,1,"20210202172856","","SLIMP_I",""
"PRC_INV_CREATE_ALG","SL_IFD_SEG_PROC","MOCA","Process Host Inventory Download","F","F","F","F","T","T","T","if (:i_c_invlod_verb = 'create' and :i_c_invsub_verb = 'create')
    {create inventory where <<OVERSTACKED_ARGS>>}
    else if (:i_c_invsub_verb = 'change')
    {
        set return status
         where status = 10728
    }
    else if (:i_c_invlod_verb = 'change')
    {
        set return status
         where status = 10663
    }
",335,1,"20210202172856","","SLIMP_I",""
"PRC_LINE_INV_CREATE_ALG","SL_IFD_SEG_PROC","MOCA","Create Line Inventory","F","F","F","F","T","T","T","create line inventory
    where <<OVERSTACKED_ARGS>>
",53,1,"20210202172856","","SLIMP_I",""
"PRC_RPS_ASN_CNF","SL_IFD_SEG_PROC","MOCA","Process ASN Confirmation from RPS","F","F","F","F","F","F","T","[ select ship_line_id
   from shipment_line
  where ordnum = :i_c_ordnum ]
|
[ select dtlnum
    from inv_intransit
   where ship_line_id = @ship_line_id ]
|
  set intransit inventory processed
where dtlnum = @dtlnum",216,1,"20210202172856","","SLIMP_I",""
"PRC_SUP_PRT_CNS_OVR","SL_IFD_SEG_PROC","MOCA","Process Supplier Item Consignment Override data.","F","F","F","F","F","F","T","{
[select count(*) cnt
   from sup_prt_cnsg_ovr
  where supnum        = :i_c_supnum
    and wh_id         = :i_c_wh_id
    and client_id     = :i_c_client_id
    and prtnum        = :i_c_prtnum
    and prt_client_id = :i_c_prt_client_id] catch (-1403)
|
if (@cnt>0)
{
    if (:i_c_trntyp = 'D')
    {
        remove supplier part consignment override
                  where supnum        = :i_c_supnum
                    and wh_id         = :i_c_wh_id
                    and client_id     = :i_c_client_id
                    and prtnum        = :i_c_prtnum
                    and prt_client_id = :i_c_prt_client_id
    }
}
else
{
    create supplier part consignment override
              where supnum        = :i_c_supnum
                and wh_id         = :i_c_wh_id
                and client_id     = :i_c_client_id
                and prtnum        = :i_c_prtnum
                and prt_client_id = :i_c_prt_client_id
}
}",933,5,"20210202172856","","SLIMP_I",""
"PREPROCESS_HOST_ORDER_DEL","SL_IFD_POST","MOCA","Preprocess Host Order Download Delete","F","F","F","F","F","F","T","
{
publish data where ordnum = :i_c_ordnum and client_id = :i_c_client_id  and wh_id = :i_c_whse_id

|
if (@client_id ='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    publish data where client_id = @sysparmvalue
}
|
/* If TMS is installed and the order is flagged to require TMS planning,
 * we need to let TMS know that the order is being removed.
 */
list policies where polcod = 'TRANSPORTATION-MANAGEMENT'
                and polvar = 'INSTALLED'
                and polval = 'INSTALLED'
                and wh_id = :i_c_whse_id

|
if (@rtnum1 = '1')
{
    /* TMS is installed, now see if this order requires TMS planning */

    [select requir_tms_flg
       from ord
      where ordnum = @ordnum
        and client_id = @client_id
        and wh_id = :i_c_whse_id
]
    |
    if (@requir_tms_flg = '1')
    {
        /* It requires TMS planning, so we'll call remove TMS order
         * to log a transaction to TMS (if a transaction creating it was already sent)
         * and reset everything on this order before we delete it.
         */
        remove tms order
            where ordnum = @ordnum
              and client_id = @client_id
              and wh_id = :i_c_whse_id

    }
}

}",1228,1,"20210202172856","","SLIMP_I",""
"PREPROCESS_HOST_ORDER_LINE","SL_IFD_POST","MOCA","Preprocess Host Order Line Download","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
{
publish data where ordnum = :i_c_ordnum and client_id = :i_c_client_id
|
if (@client_id ='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    publish data where client_id = @sysparmvalue
}
|
if (:i_c_trntyp = 'D')
{
    /* If TMS is installed and the order is flagged to require TMS planning,
     * we need to let TMS know that the order is being removed.
     */
    list policies
      where polcod = 'TRANSPORTATION-MANAGEMENT'
        and polvar = 'INSTALLED'
        and polval = 'INSTALLED'
        and wh_id = @wh_id
    |
    if (@rtnum1 = '1')
    {
        /* TMS is installed, now see if this order requires TMS planning */

        [select requir_tms_flg
           from ord
          where ordnum = @ordnum
            and client_id = @client_id
            and wh_id = @wh_id]
        |
        if (@requir_tms_flg = '1')
        {
            /* It requires TMS planning, so we'll call change TMS order
             * to log a transaction to TMS (if a transaction creating it was already sent)
             * and reset everything on this order before we reprocess it based on
             * the new line.
             */
            change tms order
                where ordnum = @ordnum
                  and client_id = @client_id
                  and wh_id = @wh_id
        }
    }
}
}",1377,1,"20210202172856","","SLIMP_I",""
"PROC_BUFFER_STOLOC_ALG","SL_IFD_SEG_PROC","MOCA","This algorithm changes any locked work to pending and performs deallocate-reallocate on all pending putaways.","F","F","F","F","F","F","T","[select lodnum
   from inventory_view
 where stoloc = :i_c_stoloc
    and wh_id = :i_c_wh_id] catch (-1403)
|
if(@? != -1403) {
  deallocate location
   where lodnum = @lodnum
     and wh_id = :i_c_wh_id catch (-1403) >> tmp
  |
  hide stack variable
   where name = 'stoloc'
  |
  allocate location
   where lodnum = @lodnum
     and wh_id = :i_c_wh_id >> res
  |
  publish top rows
   where rows = 1
  |
  hide stack variable
   where name = 'lodlvl'
  |
  list work
   where srcloc = :i_c_stoloc
    and wh_id = :i_c_wh_id
    and lodnum = @lodnum
    and wrksts = 'LOCK' catch (-1403)
  |
  if(@? != -1403) {
    change work
     where reqnum = @reqnum
       and wrksts = 'PEND'
       and dstloc = @nxtloc
  }
}
;
list work
 where srcloc = :i_c_stoloc
   and wh_id = :i_c_wh_id
   and wrksts = 'LOCK' catch (-1403)
|
if(@? != -1403) {
  change work
   where reqnum = @reqnum
     and wrksts = 'PEND'
}",907,1,"20210202172856","","SLIMP_I",""
"PROC_DISC_RPT_ALG","SL_IFD_POST","MOCA","Process inventory reconciliation report","F","F","F","F","F","F","T","create wcs discrepancy report
 where wcs_id = :i_c_wcs_id
   and tran_id = :i_c_tid
   and wh_id = :i_c_wh_id",109,1,"20210202172856","","SLIMP_I",""
"PROC_GS1_ORD_LINE_SERV_CON","SL_IFD_SEG_PROC","MOCA","Process GS1 Order Line SERV_COND","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
[select LPAD(@nochg_ind_char, length(:i_c_serv_cond_id), @nochg_ind_char) nochg_char_servCondId,
        LPAD(@absent_ind_char, length(:i_c_serv_cond_id), @absent_ind_char) abs_char_servCondId
   from dual]
   |
   if (:i_c_serv_cond_id != '' or
    :i_c_serv_cond_id != @abs_char_servCondId or
    :i_c_serv_cond_id != @nochg_char_servCondId)
{
    process host order line service condition
}",435,1,"20210202173205","","SLIMP_I",""
"PROC_GS1_ORD_SERV_CON","SL_IFD_SEG_PROC","MOCA","Process Order SERV_COND","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
[select LPAD(@nochg_ind_char, length(:i_c_serv_cond_id), @nochg_ind_char) nochg_char_servCondId,
        LPAD(@absent_ind_char, length(:i_c_serv_cond_id), @absent_ind_char) abs_char_servCondId
   from dual]
   |
   if (:i_c_serv_cond_id != '' or
    :i_c_serv_cond_id != @abs_char_servCondId or
    :i_c_serv_cond_id != @nochg_char_servCondId)
{
    process host order service condition
}",430,1,"20210202173205","","SLIMP_I",""
"PROC_HEARTBEAT_CONFIRM","SL_PROC_IFD_ACTION","MOCA","Process heartbeat confirm message","F","F","F","F","F","F","T","noop",4,1,"20210202172857","","SLIMP_I",""
"PROC_LBL_REQ","SL_IFD_SEG_PROC","MOCA","Process Label Request","F","F","F","F","F","T","T","produce lbl wcs labels
 where <<OVERSTACKED_ARGS>>",50,1,"20210202172857","","SLIMP_I",""
"PROC_LINE_SETUP","SL_IFD_SEG_PROC","MOCA","Process Line Setup.","F","F","F","F","F","F","T","publish data
  where wh_id = :i_c_wh_id
    and wkonum = :i_c_wkonum
    and wkorev = :i_c_wkorev
    and client_id = :i_c_client_id
    and prdlin = :i_c_prdlin
    and stg_loc = :i_c_stg_loc
|
/* validate work order exists */
validate key exists
  where key = 'wkonum, client_id, wkorev, wh_id'
    and table = 'wkohdr'
|
/* validate production line identifier exists */
validate key exists
  where key = 'prdlin, wh_id'
    and table = 'prdlin_mst'
|
/* Assign a work order to a production line */
if (:i_c_action = 'ASSIGN')
{
    process work order assign
      where wh_id = @wh_id
        and wkonum = @wkonum
        and wkorev = @wkorev
        and client_id = @client_id
        and prdlin = @prdlin
        and stg_loc = @stg_loc
}
/* Start a work order that is assigned to a production line */
else if (:i_c_action = 'START')
{
    /* validate production line identifier matches work order */
    [select 'x'
       from wkohdr
      where wh_id = @wh_id
        and client_id = @client_id
        and wkonum = @wkonum
        and wkorev = @wkorev
        and prdlin = @prdlin] catch (-1403)
    |
    if (@? = -1403)
    {
        /* The production line doesn't match work order */
        set return status
            where status = 11701
    }
    |
    process work order start
      where wh_id = @wh_id
        and wkonum = @wkonum
        and wkorev = @wkorev
        and client_id = @client_id
}
/* Stop a work order that is assigned to a production line */
else if (:i_c_action = 'STOP')
{
    [select 'x'
       from wkohdr
      where wh_id = @wh_id
        and client_id = @client_id
        and wkonum = @wkonum
        and wkorev = @wkorev
        and prdlin = @prdlin] catch (-1403)
    |
    if (@? = -1403)
    {
        /* The production line doesn't match work order */
        set return status
            where status = 11701
    }
    |
    process work order stop
      where wh_id = @wh_id
        and wkonum = @wkonum
        and wkorev = @wkorev
        and client_id = @client_id
        and reacod = :i_c_reacod
}",2055,1,"20210202172857","","SLIMP_I",""
"PROC_LOCSTS_ALG","SL_IFD_SEG_PROC","MOCA","Process location status","F","F","F","F","F","F","T","[select useflg,
        stoflg,
        pckflg
   from locmst
  where stoloc = :i_c_stoloc
    and wh_id = :i_c_wh_id]
|
if(:i_n_useflg = 0 or :i_n_useflg = 1) {
  publish data
   where useflg = :i_n_useflg
}
|
if(:i_n_stoflg = 0 or :i_n_stoflg = 1) {
  publish data
   where stoflg = :i_n_stoflg
}
|
if(:i_n_pckflg = 0 or :i_n_pckflg = 1) {
  publish data
   where pckflg = :i_n_pckflg
}
|
change location
 where stoloc = :i_c_stoloc
   and wh_id = :i_c_wh_id
   and useflg = @useflg
   and stoflg = @stoflg
   and pckflg = @pckflg
   and devcod = :i_c_wcs_id",560,1,"20210202172857","","SLIMP_I",""
"PROC_LOCSTS_INVMOV_ALG","SL_IFD_SEG_PROC","MOCA","Process location status for inventory movement","F","F","F","F","F","F","T","if(:i_n_putaway_flg = 1 and (:i_n_useflg = 0 or :i_n_stoflg = 0)){
  [select distinct invmov.lodnum,
          invlod.stoloc as srcloc
     from invmov, invlod
   where invmov.lodnum = invlod.lodnum
     and invmov.stoloc = :i_c_stoloc
     and invmov.wh_id = :i_c_wh_id] catch(-1403)
  |
  if(@? != -1403){
    deallocate location
     where lodnum = @lodnum
       and wh_id = :i_c_wh_id >> tmp
    |
    hide stack variable
      where name = 'stoloc'
    |
    allocate location
     where lodnum = @lodnum
       and wh_id = :i_c_wh_id >> res
    |
    publish top rows
     where rows = 1
    |
    list work
     where srcloc =  @srcloc
      and wh_id = :i_c_wh_id
      and lodnum = @lodnum catch (-1403)
    |
    if(@? != -1403) {
      change work
       where reqnum = @reqnum
         and dstloc = @nxtloc
    }
    |
    list wcsmst config
     where wh_id = :i_c_wh_id
      and stoloc = @srcloc
    |
    if(@enabled and @wcs_id = :i_c_wcs_id) {
      get wcs_evt_config default
       where wh_id = :i_c_wh_id
          and stoloc = :i_c_wcs_id
          and evt_typ = 'WCSDSTRED'
          and evt_id = 'MOVEMENT_REQUEST'
      |
      if (@enabled) {
        sl_log event
         where evt_id = @evt_id
           and lodnum = @lodnum
           and dstloc = @nxtloc
           and nxtloc = @nxtloc
           and sys_id = :i_c_dest_sys_id
           and ifd_data_ptr = 
      }
    }
  }
}",1415,1,"20210202172857","","SLIMP_I",""
"PROC_LOCSTS_PCKWRK_ALG","SL_IFD_SEG_PROC","MOCA","Process location status for pick work","F","F","F","F","F","F","T","if(:i_n_canpck_flg = 1 and (:i_n_useflg = 0 or :i_n_pckflg = 0)){
  [select wrkref
    from pckwrk_hdr
   where srcloc = :i_c_stoloc
     and appqty = 0
     and wh_id = :i_c_wh_id] catch(-1403)
  |
  if(@? != -1403){
    process cancel pick
     where wrkref = @wrkref
       and sys_id = :i_c_dest_sys_id
       and ifd_data_ptr = 
  }
}
",344,1,"20210202172857","","SLIMP_I",""
"PROC_MOVE_CONF","SL_IFD_SEG_PROC","MOCA","Process movement confirm","F","F","F","F","F","F","T","[select decode(:i_c_dstloc, stoloc, 1, 0) wcs_hop,
       (select count(*) from invmov
         where lodnum = :i_c_lodnum
           and wh_id = :i_c_wh_id) wcs_moves
   from invmov
  where stoloc = :i_c_dstloc
    and wh_id = :i_c_wh_id
    and rownum = 1] catch(-1403)
|
/*
 * In case of direct cross docking scenario a pick would have been generated
 * by process cross dock requirements.  In that case fetch the wrkref and
 * pass it to the move inventory to satisfy the pick.
 */
[select pck.wrkref
   from invdtl_pck pck
 inner join inventory_view inv
 on pck.dtlnum = inv.dtlnum
  where inv.lodnum = :i_c_lodnum] catch(-1403)
|
move inventory
where lodnum = :i_c_lodnum
  and wh_id = :i_c_wh_id
  and dstloc = :i_c_dstloc
  and @+wrkref
  and wcs_id = :i_c_wcs_id
  and sys_id = :i_c_dest_sys_id
  and devcod = :i_c_wcs_id
  and wcs_hop = nvl(@wcs_hop, 0)
  and wcs_moves = nvl(@wcs_moves, 0)
|
if (@? = 0) {
  if(@wrkref){
    [select reqnum
      from wrkque
     where wrkref = @wrkref] catch (-1403)
  } else {
    [select reqnum
      from wrkque
     where lodnum = :i_c_lodnum
       and  wh_id = :i_c_wh_id
       and dstloc = :i_c_dstloc] catch (-1403)
  }
  |
  if (@? = 0) {
  /*
   * In case of cross docking scenarios processed by create line inventory
   * a work task would have been created as a fail safe mechanism.  The task
   * should be completed here.
   */
    complete work
      where reqnum = @reqnum
        and prcmod = 'nomove'
        and lodnum = :i_c_lodnum
        and  wh_id = :i_c_wh_id catch (-1403, 510)
  }
  |
  /*
   * If the dstloc belongs to a cross docking zone then it means that it is
   * an indirect cross docking scenario.  In such cases when the inventory is
   * moved to the cross docking zone we should execute process cross dock
   * allocation to generate picks to ship staging location.
   */
  [select 'x'
     from locmst
   inner join loc_typ
   on (locmst.loc_typ_id = loc_typ.loc_typ_id)
    where loc_typ.loc_typ='XDCK'
      and locmst.stoloc = :i_c_dstloc
      and locmst.wh_id = :i_c_wh_id] catch (-1403)
  |
  if (@? = 0) {
    process cross dock allocation
      where lodnum  = :i_c_lodnum
  }
}",2171,1,"20210202172857","","SLIMP_I",""
"PROC_MOVE_CONF_OVRLOC","SL_IFD_SEG_PROC","MOCA","Process movement confirm for overriding location","F","F","F","F","F","F","T","deallocate location
 where lodnum = :i_c_lodnum
  and wh_id = :i_c_wh_id
;
allocate location
 where lodnum = :i_c_lodnum
  and wh_id = :i_c_wh_id
  and stoloc = :i_c_ovrloc
;
move inventory
 where lodnum = :i_c_lodnum
  and wh_id = :i_c_wh_id
  and wcs_id = :i_c_wcs_id
  and dstloc = :i_c_ovrloc
  and actcod = :i_c_actcod
  and reacod = :i_c_ovrrea
  and devcod = :i_c_wcs_id",377,1,"20210202172857","","SLIMP_I",""
"PROC_MOVE_CONF_SERVICES","SL_IFD_SEG_PROC","MOCA","Process Services","F","F","F","F","F","F","T","/**
 * First, inspect the load attributes for changes that the automation may have performed.
 * Use SQL to subtract the existing values from the received values.
 * Assumes absent/nochng implies 0
 */
[select wh_id, lodnum,
    instr(load_attr1_flg, 1) | instr(:i_n_load_attr1_flg, 1) AS load_attr1_flg,
    instr(load_attr2_flg, 1) | instr(:i_n_load_attr2_flg, 1) AS load_attr2_flg,
    instr(load_attr3_flg, 1) | instr(:i_n_load_attr3_flg, 1) AS load_attr3_flg,
    instr(load_attr4_flg, 1) | instr(:i_n_load_attr4_flg, 1) AS load_attr4_flg,
    instr(load_attr5_flg, 1) | instr(:i_n_load_attr5_flg, 1) AS load_attr5_flg,
    (instr(load_attr1_flg, 0) & instr(:i_n_load_attr1_flg, 1)) |
    (instr(load_attr2_flg, 0) & instr(:i_n_load_attr2_flg, 1)) |
    (instr(load_attr3_flg, 0) & instr(:i_n_load_attr3_flg, 1)) |
    (instr(load_attr4_flg, 0) & instr(:i_n_load_attr4_flg, 1)) |
    (instr(load_attr5_flg, 0) & instr(:i_n_load_attr5_flg, 1)) AS need_update
  from invlod where lodnum = :i_c_lodnum and wh_id = :i_c_wh_id]
|
if (@need_update) {
  change load attributes
}",1076,1,"20210202172857","","SLIMP_I",""
"PROC_MOVE_ERR","SL_IFD_SEG_PROC","MOCA","Process Movement Error","F","F","F","F","F","F","T","/**
 * move error is different than move confirm in the following ways:
 * 1. If there is a pending putaway for the load, that putaway remains pending.
 * 2. There is no such functionality of override location.
 * We catch 10013 if the error message is continued to be sent.
 */
move inventory
 where lodnum = :i_c_lodnum
  and wh_id = :i_c_wh_id
  and dstloc = :i_c_dstloc
  and wcs_id = :i_c_wcs_id
  and devcod = :i_c_wcs_id
  and excp_code = :i_c_error_descr catch(10013)",475,1,"20210202172857","","SLIMP_I",""
"PROC_ORD_LINE_SERV_CON","SL_IFD_SEG_PROC","MOCA","Process Order Line SERV_COND","F","F","F","F","F","T","T","process host order line service condition
    where <<OVERSTACKED_ARGS>>",72,5,"20210202172857","","SLIMP_I",""
"PROC_ORD_SERV_CON","SL_IFD_SEG_PROC","MOCA","Process Order SERV_COND","F","F","F","F","F","T","T","process host order service condition
        where <<OVERSTACKED_ARGS>>",71,5,"20210202172857","","SLIMP_I",""
"PROC_PALLETCTL_STATUS","SL_IFD_SEG_PROC","MOCA","Processing algorithm to process PalletCtl status information","F","F","F","F","F","T","T","process palletctl status where <<OVERSTACKED_ARGS>>",51,1,"20210202172857","","SLIMP_I",""
"PROC_PICK_CANCEL","SL_IFD_SEG_PROC","MOCA","Simply cancel the pick","F","F","F","F","F","F","T","cancel pick
 where wrkref = :i_c_wrkref
   and cancod = :i_c_cancod",67,1,"20210202172857","","SLIMP_I",""
"PROC_PICK_CANCEL_CONF","SL_IFD_SEG_PROC","MOCA","Confirm cancel pick","F","F","F","F","F","F","T","[update canpck
    set pend_can_conf_dt = sysdate,
        pend_can_pcksts = :i_c_wcs_can_pcksts,
        pend_can_req_dt = to_date(:i_d_wcs_can_req_dt)
  where wrkref = :i_c_wrkref]",182,1,"20210202172857","","SLIMP_I",""
"PROC_PICK_CONF","SL_IFD_SEG_PROC","MOCA","Process Pick Confirm","F","F","F","F","F","F","T","move inventory
 where lodnum = :i_c_lodnum
   and wrkref = :i_c_wrkref
   and wh_id = :i_c_wh_id
   and dstloc = :i_c_dstloc
   and wcs_id = :i_c_wcs_id
   and devcod = :i_c_wcs_id",180,1,"20210202172857","","SLIMP_I",""
"PROC_REQUEST","SL_IFD_SEG_PROC","MOCA","Process WCS Request","F","F","F","F","F","F","T","/* make clean context */
publish data
 where lodnum = :i_c_lodnum
   and req_contents_flg = :i_c_req_contents_flg
   and req_stoloc_flg = :i_c_req_stoloc_flg
   and stoloc = :i_c_stoloc
   and ifd_data_ptr = 
   and wh_id = :i_c_wh_id
   and wcs_id = :i_c_wcs_id
   and ifd_data_ptr = 
|
/* check lodnum */
[select stoloc dstloc from invlod
 where lodnum = @lodnum] catch (-1403)
|
if (@? = 0) {
 /* Only send pallet information back */
 if(@req_contents_flg = 1 and @req_stoloc_flg != 1) {
   get wcs_evt_config default
    where wh_id = :i_c_wh_id
      and wcs_id = :i_c_wcs_id
      and evt_typ = 'WCSLODREQ'
      and evt_id = 'LOAD_DETAIL'
   |
   if (@enabled) {
     sl_log event
      where sys_id = :i_c_dest_sys_id
   }
 } else if(@req_stoloc_flg = 1 and @req_contents_flg != 1) {
   get wcs_evt_config default
    where wh_id = :i_c_wh_id
      and wcs_id = :i_c_wcs_id
      and evt_typ = 'WCSDSTRED'
      and evt_id = 'MOVEMENT_REQUEST'
   |
   if (@enabled) {
     [select pndloc nxtloc
        from nxtloc_view
       where lodnum = @lodnum
         and rownum = 1] catch(-1403)
     |
     sl_log event
      where evt_id = @evt_id
        and sys_id = :i_c_dest_sys_id
   }
 } else {
   /* default to induction */
   get wcs_evt_config default
    where wh_id = :i_c_wh_id
      and wcs_id = :i_c_wcs_id
      and evt_typ = 'WCSINDREQ'
      and evt_id = 'INDUCTION'
     |
     if (@enabled) {
       [select pndloc nxtloc
          from nxtloc_view
         where lodnum = @lodnum
          and rownum = 1] catch(-1403)
       |
       sl_log event
        where sys_id = :i_c_dest_sys_id
          and srcloc = :i_c_stoloc
     }
 }
} else {
 get wcs_evt_config default
  where wh_id = :i_c_wh_id
    and wcs_id = :i_c_wcs_id
    and evt_typ = 'WCSLODERR'
    and evt_id = 'LOAD_ERROR'
 |
 if (@enabled) {
   sl_log event
    where evt_id = @evt_id
     and sys_id = :i_c_dest_sys_id
 }
}",1918,1,"20210202172857","","SLIMP_I",""
"PROC_SHIPPED_LPN_ACTIVITY","SL_IFD_SEG_PROC","MOCA","Processes shipped LPN activity","F","F","F","F","T","T","T","process shipped lpn activity",28,1,"20210202172857","","SLIMP_I",""
"PROC_SNAP_SEG_ALG","SL_IFD_SEG_PROC","MOCA","Process inventory reconciliation snapshot","F","F","F","F","T","T","T","generate next number
  where numcod = 'wcs_disc_snap_id'
|
[select to_number(@nxtnum) snapshot_id from dual]
|
create record
 where table = 'wcs_disc_snap'
    and <<OVERSTACKED_ARGS>>",184,1,"20210202172857","","SLIMP_I",""
"PROCESS_APPOINTMENT_DELETE","SL_IFD_SEG_PROC","MOCA","Deletion of Appointment.","F","F","F","F","F","T","T","process appointment delete",26,1,"20210202173329","","SLIMP_I",""
"PROCESS_CARRIER_MOVE","SL_IFD_SEG_PROC","MOCA","Process the Carrier Move segment on the TM Carrier Move Import transactions.","F","F","F","F","F","T","T","
process carrier move for load create",37,1,"20210202173249","","SLIMP_I",""
"PROCESS_COMMODITY","SL_IFD_SEG_PROC","MOCA","Process Commodity","F","F","F","F","T","T","T",":i_c_moca_verb commodity",24,1,"20210202172857","","SLIMP_I",""
"PROCESS_COMMODITY_CLEANUP","SL_IFD_POST","MOCA","Create default commodity description, if none was created for them during the download.","F","F","F","F","F","F","T","/* PROCESS_COMMODITY_CLEANUP */
/* Create a default description for commodity, if none exists after download */
{
if (:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
{
    [select *
       from dscmst
      where colnam = 'comcod'
        and colval = :i_c_comcod] catch (-1403)
    |
    if (@? = -1403)
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
        |
        create description where colnam = 'comcod'
                             and colval = :i_c_comcod
                             and locale_id = @SysParmValue
                             and lngdsc = :i_c_comcod
    }
}
}",604,1,"20210202172857","","SLIMP_I",""
"PROCESS_COMMODITY_DELETE","SL_IFD_SEG_PROC","MOCA","Remove commodity","F","F","F","F","F","F","T","[select count(*) cnt from commst
  where comcod = :i_c_comcod]
|
if (@cnt > 0)
{
    remove commodity
     where comcod = :i_c_comcod
}",135,1,"20210202172857","","SLIMP_I",""
"PROCESS_CUST_TYPE_PROFILE","CUSTOMER","MOCA","Process Customer Type Profile","F","F","F","F","T","T","T",":i_c_moca_verb customer type profile where <<OVERSTACKED_ARGS>>
|
if (':i_c_moca_verb' = 'change')
{
    /* On a change we'll remove all our asset configurations
     * and re-add them accordingly with the new download data
      */
    list customer asset configurations
         where mc_csttyp = :i_c_csttyp catch (-1403)
    |
    if (@? != -1403)
    {
         remove customer asset configuration
             where mc_csttyp = @mc_csttyp
                and cstnum = @cstnum
                and asset_typ = @asset_typ
                and pck_uom = @pck_uom
    }
}",571,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS_CUST_ACCT","SL_IFD_SEG_PROC","MOCA","Maintain Customer Bill-to-Account","F","F","F","F","F","F","T","if (':i_c_moca_verb' = 'change')
{
    remove customer billto account
              where client_id = :i_c_client_id
                and cstnum = :i_c_cstnum
                and carcod = :i_c_carcod catch (-1403)
    |
    create customer billto account
              where client_id = :i_c_client_id
                and cstnum = :i_c_cstnum
                and carcod = :i_c_carcod
                and accnum = :i_c_accnum
}
else
{
    create customer billto account
              where client_id = :i_c_client_id
                and cstnum = :i_c_cstnum
                and carcod = :i_c_carcod
                and accnum = :i_c_accnum
}",639,5,"20210202172857","","SLIMP_I",""
"PROCESS_DCS_CUST_RPKCLS","SL_IFD_SEG_POST","MOCA","Maintain Customer Repack Class","F","F","F","F","F","F","T","if (':i_c_moca_verb' = 'change')
{
    remove customer repack class
              where client_id = :i_c_client_id
                and cstnum = :i_c_cstnum
                and rpkcls = :i_c_rpkcls catch (-1403)
    |
    create customer repack class
              where client_id = :i_c_client_id
                and cstnum = :i_c_cstnum
                and rpkcls = :i_c_rpkcls
}
else
{
    create customer repack class
              where client_id = :i_c_client_id
                and cstnum = :i_c_cstnum
                and rpkcls = :i_c_rpkcls
}",551,5,"20210202172857","","SLIMP_I",""
"PROCESS_DCS_PART_ALT_PRTNUM","SL_IFD_SEG_POST","MOCA","Maintain Item Alternate Item Number","F","F","F","F","F","T","T","publish data where wh_id = :i_c_whse_id
    |
    /* If warehouse id is not passed,then default it to ---- */
    if(:i_c_whse_id = '' or
       :i_c_whse_id = @nochg_ind_char or
       :i_c_whse_id = @absent_ind_char)
    {
        publish data where wh_id = '----'
    }
|
process host alternate part where <<OVERSTACKED_ARGS>>",329,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS_PART_HRCY_7LVL","SL_IFD_SEG_PROC","MOCA","Process Item Hierarchy","F","F","F","F","T","T","T","
publish data where <<OVERSTACKED_ARGS>>
|
process part hierarchy",65,5,"20210202172857","","SLIMP_I",""
"PROCESS_DCS_PRT_RPKCLS","SL_IFD_SEG_POST","MOCA","Maintain Item Repack Class","F","T","F","F","F","T","T","{publish data where wh_id = :i_c_whse_id
|
if (':i_c_moca_verb' = 'change')
{
    execute integrator transaction
          where moca_verb = 'remove'
            and resource = 'part repack class'
            and <<OVERSTACKED_ARGS>>
    |
    execute integrator transaction
          where moca_verb = 'create'
            and resource = 'part repack class'
            and skip_custom_validation = true
            and  <<OVERSTACKED_ARGS>>
}
else
{
    execute integrator transaction
          where moca_verb = 'create'
            and resource = 'part repack class'
            and <<OVERSTACKED_ARGS>>
}
}",611,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS_SER_NUM_TYP","SL_IFD_SEG_POST","MOCA","Maintain Serial Number Type","F","F","F","F","T","T","T","{publish data where wh_id = :i_c_whse_id | process host part serial number type where <<OVERSTACKED_ARGS>>}",107,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_CSTASSET","CUSTOMER","MOCA","Process Customer Handling Unit Configuration","F","F","F","F","F","T","T","create customer asset configuration where <<OVERSTACKED_ARGS>>
",63,5,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_CSTMST","CUSTOMER","MOCA","Process Customer","F","F","F","F","T","T","T","{
if ( ':i_c_moca_verb' = 'remove' )
   {
   [select count(*) cnt
   from
      cstmst
   where
      cstnum = :i_c_cstnum and
      client_id = :i_c_client_id  ]
   |
   if (@cnt>0) remove customer where <<OVERSTACKED_ARGS>>
   }
else
   :i_c_moca_verb customer where <<OVERSTACKED_ARGS>>
    |
    /* Remove our customer asset configurations
     * for change as they'll be re-added by the new data
     */
    if (':i_c_moca_verb' = 'change')
    {
          list customer asset configurations
               where cstnum = :i_c_cstnum catch(-1403)
          |
          if (@? = 0)
          {
              remove customer asset configuration
                   where cstnum = @cstnum
                      and mc_csttyp = @mc_csttyp
                      and asset_typ = @asset_typ
                      and pck_uom = @pck_uom
          }
    }
}",852,5,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_CSTMST_DELETE","SL_IFD_SEG_PROC","MOCA","Process Customer","F","F","F","F","F","F","T","{
    if (:i_c_client_id = '' or :i_c_client_id = @absent_ind_char)
    {
        sl_get sys_data_attr where sys_id = :i_c_sys_id
        |
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @SysParmValue client_id from dual]
    }
    else
    {
        [select :i_c_client_id client_id from dual]
    }
    |
    [select count(*) cnt from cstmst
      where cstnum = :i_c_cstnum and client_id = @client_id  ]
    |
    if (@cnt>0)
       remove customer where cstnum = :i_c_cstnum and client_id = @client_id
}",550,5,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_CSTTYPASSET","CUSTOMER","MOCA","Process customer type handling unit","F","F","F","F","F","F","T","create customer asset configuration
            where mc_csttyp = :i_c_csttyp
               and  pck_uom = :i_c_pck_uom
               and  asset_typ = :i_c_asset_typ


",170,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_FOOTPRINT_MASTER","SL_IFD_SEG_PROC","MOCA","Process Footprint Master","F","T","F","F","T","T","T",":i_c_moca_verb footprint",24,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_ORD_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded Order Lines After Refresh","F","F","F","F","F","F","T","[select :i_c_client_id client_id from dual]
|
if (@client_id ='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID' |
    [select @sysparmvalue       client_id from dual ]
}
|
[select count(*) cnt
    from ord_line
    where nvl(edtflg,0) = 0
    and ordnum = :i_c_ordnum
    and ordlin = :i_c_ordlin
        and ordsln = :i_c_ordsln
    and client_id = @client_id]
|
if (@cnt > 0)
{
    [select ordlin, ordsln
    from ord_line
    where nvl(edtflg,0) = 0
    and ordnum = :i_c_ordnum
    and client_id = @client_id]
    |
    remove order line
    where ordnum = :i_c_ordnum
    and client_id = @client_id
    and ordlin = @ordlin
    and invsln = @ordsln
}",671,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_ORD_PREPARE","SL_IFD_PRE","MOCA","Prepare Sales Order For  Edit","F","F","F","F","F","F","T","{     publish data where client_id = :i_c_client_id     |     if (@client_id='')      {         sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'    |       publish data where client_id = @sysparmvalue     }     |     /* Update Order Line EDTFLG  */     {[update   ord_line set edtflg = 0       where     ordnum = :i_c_ordnum       and  client_id = @client_id and wh_id = :i_c_whse_id]} catch (@?)     |     /* Update Order Header Notes EDTFLG  */     {[update ord_note set edtflg = 0        where ordnum = :i_c_ordnum       and client_id = @client_id and wh_id = :i_c_whse_id]} catch (@?)     |     /* Update Order Detail Notes EDTFLG */     {[update ord_line_note        set edtflg = 0        where ordnum = :i_c_ordnum and client_id = @client_id and wh_id = :i_c_whse_id]} catch (@?)     |     save session variable where name = 'ordnum_list' and value =  }",870,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_PART_DELETE","SL_IFD_SEG_PROC","MOCA","remove Item","F","F","F","F","F","F","T","[select count(*) cnt from prtmst_view
where   prtnum = :i_c_prtnum
and     prt_client_id = :i_c_prt_client_id
and     wh_id = '----']
|
if (@cnt >0)
    remove part
    where   prtnum = :i_c_prtnum
    and     prt_client_id = :i_c_prt_client_id
        and wh_id = '----'
|
[select count(*) cnt
from    ftpmst
where   ftpcod = :i_c_prtnum  ]
|
if (@cnt >0)
    remove footprint where ftpcod = :i_c_prtnum catch (@?)",415,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_PO_DTL","SL_IFD_SEG_POST","MOCA","Process Invoice Detail","F","F","F","F","T","T","T","process host receive invoice master line where <<OVERSTACKED_ARGS>>",67,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_PO_HDR","SL_IFD_SEG_PROC","MOCA","Process Invoice Header","F","F","F","F","T","T","T","process host receive invoice master where <<OVERSTACKED_ARGS>>",62,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_PRTMST","SL_IFD_SEG_POST","MOCA","Process Item Master","F","T","F","F","T","T","T","{maintain part package type where <<OVERSTACKED_ARGS>> | :i_c_moca_verb part}",77,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_RA_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded RA Lines After Refresh","F","F","F","F","F","T","T","post full validation status where <<OVERSTACKED_ARGS>>
|
get warehouse id where wh_id = :i_c_whse_id
|
sl_get sys_data_attr where sys_id = :i_c_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_client_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_client_id ='' or
    :i_c_client_id = @abs_char or
    :i_c_client_id = @nochg_char)
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    [select @sysparmvalue  client_id from dual ]
}
else
{
    publish data where client_id = :i_c_client_id
}
|
{
if ((:i_c_trntyp = 'R') or (:i_c_trntyp = 'r'))
{
    [select count(*) cnt
       from rimlin
      where nvl(edtflg,0) = 0
    and supnum = :i_c_supnum
    and invnum = :i_c_invnum
    and client_id = @client_id
        and wh_id = @wh_id]
    |
    if (@cnt > 0)
    {
        [select invlin, invsln, idnqty
           from rimlin
          where nvl(edtflg,0) = 0
            and supnum = :i_c_supnum
            and invnum = :i_c_invnum
            and client_id = @client_id
                and wh_id = @wh_id]
        |
        if(@idnqty <= 0)
        {
            remove receive invoice master line
             where supnum = :i_c_supnum
               and invnum = :i_c_invnum
               and client_id = @client_id
               and invlin = @invlin
               and invsln = @invsln
               and wh_id = @wh_id
        }
   }
}
|
if(:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
{
    /* Auto Allocation of unplanned orders
     * Plan and allocate auto created orders for distros.
     */
    [select distinct 'x'
       from auto_alc_rule
      where incl_unpln_ord_flg = 1
        and ena_flg = 1
        and auto_alc_mtd in ('D','SCHD')
        and rule_type = 'ORD'
        and wh_id = @wh_id] catch(-1403)
    |
    if(@? = 0)
    {
        [select distinct 'x'
           from rimlin,
                distro,
                ord_line
          where rimlin.invnum = distro.invnum
            and rimlin.invlin = distro.invlin
            and rimlin.invsln = distro.invsln
            and distro.distro_id = ord_line.distro_id
            and distro.wh_id = ord_line.wh_id
            and distro.client_id = ord_line.client_id
            and rimlin.invnum= :i_c_invnum
            and rimlin.supnum = :i_c_supnum
            and rimlin.client_id = @client_id
            and rimlin.wh_id = @wh_id] catch(-1403)
        |
        if(@? = 0)
        {
            process auto allocation
              where rulmod = 'O'
                and oprmod = 'D'
                and client_id = @client_id
                and wh_id = @wh_id
        }
    }
}
}",2685,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_RA_PREPARE","SL_IFD_PRE","MOCA","Prepare Order Lines For Refresh","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
{
sl_get sys_data_attr where sys_id = :i_c_sys_id
|
[select LPAD(@nochg_ind_char, length(:i_c_client_id), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(:i_c_client_id), @absent_ind_char) abs_char
   from dual]
|
if (:i_c_client_id ='' or
    :i_c_client_id = @abs_char or
    :i_c_client_id = @nochg_char)
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    [select @sysparmvalue  client_id from dual ]
}
else
{
    publish data where client_id = :i_c_client_id
}
|
[select count(*) cnt
   from rimlin
  where supnum = :i_c_supnum
    and invnum = :i_c_invnum
    and client_id = @client_id
    and wh_id = @wh_id ]
|
if (@cnt>0)
    [update rimlin
        set edtflg = 0
      where supnum = :i_c_supnum
        and invnum = :i_c_invnum
        and client_id = @client_id
        and wh_id = @wh_id ]
}",890,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_RA_REMOVE_STATUS","SL_IFD_POST","MOCA","Publish status after remove","F","T","F","F","T","T","T","post full validation status where <<OVERSTACKED_ARGS>>",54,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_SHIPMENT_PREPARE","SL_IFD_PRE","MOCA","Prepare Shipment Lines For  Edit","F","F","F","F","F","F","T","{     publish data where client_id = :i_c_client_id     |     if (@client_id='')      {         sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'    |       publish data where client_id = @sysparmvalue     }     |     /* Update Shipment Line EDTFLG  */     {[update    shipment_line set edtflg = 0       where    ship_id in (select ship_id from shipment               where host_client_id = @client_id               and host_ext_id = :i_c_host_ship_id)]} catch (@?) }",473,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_SHIPORD_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded Shipment, Order, Header Note, Line Notes Lines","F","F","F","F","F","T","T","/* Get Default Warehouse ID*/
get warehouse id where wh_id = :i_c_whse_id
|
if (:i_c_client_id = '' or :i_c_client_id = @absent_ind_char)
{
    sl_get sys_data_attr where sys_id = :i_c_sys_id
    |
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    [select @SysParmValue client_id from dual]
}
else
{
    publish data where client_id=:i_c_client_id
}
|
{
/* PROCESS_DCS50_SHIPORD_CLEANUP */
/* Remove Unneeded Shipment, Order, Header Note, Line Notes Lines */
get session variable where name ='moca_verb_shipment' catch (@?)
|
   if (@? != 0)
      publish data where value = 'change'
|
if ((@value = 'change') and (:i_c_trntyp = 'R' or :i_c_trntyp = 'r'))
{
    publish data where save_ordnum=''
    |
    /* Loop through all orders on a shipment */
    [select shl.ordnum ordnum, sh.ship_id ship_id
           from shipment_line shl, shipment sh
          where shl.ship_id = sh.ship_id and
                shl.client_id = sh.host_client_id and
        sh.host_ext_id = :i_c_host_ship_id and
                sh.host_client_id = @client_id
         group by shl.ordnum, sh.ship_id]
    |
    /* Loop through all shipment lines for the order that are flagged for delete */
    [select shl.ship_line_id, shl.ordsln, shl.ordlin
       from shipment_line shl
      where nvl(shl.edtflg,0) = 0 and
                shl.ordnum = @ordnum and
                shl.ship_id = @ship_id and
                shl.client_id = @client_id and
                shl.wh_id = @wh_id] catch (-1403)
    |
    if (@? = 0)
    {
        /* Remove the Shipment Line */
        remove shipment line
        |
                /* Delete the order line if no other shipments are tied to this order line (and order line notes) */
        [select count(shl.ship_line_id) shp2cnt
          from shipment_line shl
         where shl.ship_id != @ship_id and
                       shl.ordnum = @ordnum and
                       shl.client_id = @client_id and
                       shl.wh_id = @wh_id]
                    | if (@shp2cnt=0) remove order line;
    }
    |
        if (@ordnum != @save_ordnum)
        {
        publish data where save_ordnum=@ordnum
        |
                /* Remove Order Notes */
            {[select orn.notlin
                   from ord_note orn
                where nvl(orn.edtflg,0) = 0
                    and orn.ordnum = @ordnum
                        and orn.client_id = @client_id
                        and orn.wh_id = @wh_id] catch (-1403) | if (@? = 0) remove order note
        }
                |
                /* Remove Order Line Notes for lines that weren't deleted but had notes that were deleted */
            {[select ordlin,ordsln,notlin
                   from ord_line_note
                where nvl(edtflg,0) = 0
                    and ordnum = @ordnum
                        and client_id = @client_id
                        and wh_id = @wh_id] catch (-1403) | if (@? = 0) remove order line note
        }
        |
        /* Remove Order Header if no Order Lines */
        [select count(*) cnt
         from ord_line
         where ordnum = @ordnum
              and client_id = @client_id
                  and wh_id = @wh_id]
        |
        if (@cnt=0) [delete from ord
                where ordnum=@ordnum and client_id=@client_id and wh_id = @wh_id]
    }
}
else if ((:i_c_trntyp = 'A' or :i_c_trntyp = 'a') or (:i_c_trntyp = 'C' or :i_c_trntyp = 'c'))
{
    [select sh.ship_id,
            sh.srvlvl,
            sh.src_sys,
            cm.carcod
       from shipment sh,
            stop st,
            car_move cm
      where sh.host_ext_id = :i_c_host_ship_id
        and sh.host_client_id = @client_id
        and cm.car_move_id = st.car_move_id
        and st.stop_id = sh.stop_id] catch(-1403)
    |
    process auto allocation
      where host_ext_id = :i_c_host_ship_id
        and host_client_id = @client_id
        and ship_id = @ship_id
        and client_id = @client_id
        and wh_id = @wh_id
        and rulmod = 'O'
        and oprmod = 'D'
        and carcod = @carcod
        and srvlvl = @srvlvl
        and src_sys= @src_sys
    |
     if(@? != 0)
    {
        publish data where post_error_code = @?
            and post_error_msg = @!
        |
        get inbound full validation flag
        |
        if (@inb_full_vld_flg)
        {
            log full validation error message
                where err_code = -1 * @post_error_code
                  and def_err_msg = @post_error_msg
                  and ifd_seg_id = "SHIPMENT"
        }
        else
        {
            set return status
                where status = @post_error_code
                  and message = @post_error_msg
        }
    }
}
}
|
post full validation status where <<OVERSTACKED_ARGS>>",4765,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_SHIPORD_PREPARE","SL_IFD_PRE","MOCA","Step One of Refresh Process - Mark all details","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
/* PROCESS_DCS50_SHIPORD_PREPARE */
/* Step One of Refresh Process - Mark all details */
{
if (:i_c_trntyp = 'R' or :i_c_trntyp = 'r')
{
        if (:i_c_client_id = '' or :i_c_client_id = @absent_ind_char)
        {
            sl_get sys_data_attr where sys_id = :i_c_sys_id
            |
            sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
            |
            [select @SysParmValue client_id from dual]
        }
        else
        {
            publish data where client_id=:i_c_client_id
        }
    |
    /* Get Internal Ship ID */
    [select min(sh.ship_id) ship_id
           from shipment sh
      where sh.host_ext_id = :i_c_host_ship_id and
            sh.host_client_id = @client_id]
        |
        if (@ship_id is not )
        {
        {[update shipment_line
            set edtflg = 0
            where ship_id = @ship_id
            and client_id = @client_id ]} catch (@?)
        |
        /* Update Order Lines EDTFLG */
        {[update ord_line
            set edtflg = 0
              where (ordnum||ordlin||ordsln||client_id||wh_id) in
                    (select ol.ordnum||ol.ordlin||ol.ordsln||ol.client_id ||ol.wh_id
                         from ord_line ol, shipment_line sl
                         where ol.ordnum = sl.ordnum and
                                               ol.client_id = sl.client_id and
                               ol.ordlin = sl.ordlin and
                                               ol.wh_id = sl.wh_id and
                               ol.ordsln = sl.ordsln and
                               sl.ship_id = @ship_id and
                           sl.client_id = @client_id) ]} catch (@?)
        |
        /* Update Order Header Notes EDTFLG  */
        {[update ord_note
                 set edtflg = 0
                    where ordnum in
                     (select nt.ordnum
                        from ord_note nt, shipment_line sl
                    where nt.ordnum = sl.ordnum and
                            sl.ship_id = @ship_id and
                        sl.client_id = @client_id) ]} catch (@?)
        |
        /* Update Order Detail Notes EDTFLG */
        {[update ord_line_note
                set edtflg = 0
                where (ordnum||ordlin||ordsln||client_id||wh_id) in
                        (select oln.ordnum||oln.ordlin||oln.ordsln||oln.client_id || oln.wh_id
                           from ord_line_note oln, shipment_line sl
                          where sl.ordnum = oln.ordnum and
                                                sl.client_id = oln.client_id and
                                sl.ordlin = oln.ordlin and
                                sl.ordsln = oln.ordsln and
                                sl.ship_id = @ship_id and
                            sl.client_id = @client_id and
                                                sl.wh_id  = @wh_id) ]} catch (@?)
    }
}
}",2967,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_SUPMST","SL_IFD_SEG_PROC","MOCA","Process Customer","F","F","F","F","T","T","T","{
if ( ':i_c_moca_verb' = 'remove' )
{
    [select count(*) cnt
    from supmst where supnum = :i_c_supnum and client_id = :i_c_client_id  ]
    |
    if (@cnt>0)
        remove supplier where supnum = :i_c_supnum
        and client_id = :i_c_client_id
}
else
{
    if (:i_c_adr_id = '')
        [select adr_id from adrmst where client_id = :i_c_client_id
        and host_ext_id = :i_c_host_ext_id] catch(-1403)
    |
    :i_c_moca_verb supplier where <<OVERSTACKED_ARGS>>
}
}",477,5,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_SUPMST_DELETE","SL_IFD_SEG_PROC","MOCA","Process Customer","F","F","F","F","F","F","T","{
    if (:i_c_client_id = '' or :i_c_client_id = @absent_ind_char)
    {
        sl_get sys_data_attr where sys_id = :i_c_sys_id
        |
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @SysParmValue client_id from dual]
    }
    else
    {
        [select :i_c_client_id client_id from dual]
    }
    |
    [select count(*) cnt from supmst
      where supnum = :i_c_supnum and client_id = @client_id  ]
    |
    if (@cnt>0)
       remove supplier where supnum = :i_c_supnum and client_id = @client_id
}",550,5,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_WO_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded Work Order Headers and  Lines","F","F","F","F","F","F","T","{
    [select count(*) cnt
       from wkodtl
      where edtflg = 0
        and client_id = :i_c_client_id
        and wkonum = :i_c_wkonum
        and wkorev = :i_c_wkorev]
    |
    if (@cnt >0)
    {
        [select wkolin
           from wkodtl
          where edtflg = 0
            and client_id = :i_c_client_id
            and wkonum = :i_c_wkonum
            and wkorev = :i_c_wkorev]
        |
        remove work order detail
         where wkolin = @wkolin
           and seqnum = 0
           and edtflg = 0
           and client_id = :i_c_client_id
           and wkonum = :i_c_wkonum
           and wkorev = :i_c_wkorev
        |
        [select count(*) cnt1
           from wkodtl
          where client_id = :i_c_client_id
            and wkonum = :i_c_wkonum
            and wkorev = :i_c_wkorev]
        |
        if (@cnt1 = 0)
        {
            [select count(*) cnt2
               from wkohdr
              where edtflg = 0
                and client_id = :i_c_client_id
                and wkonum = :i_c_wkonum
                and wkorev = :i_c_wkorev]
            |
            if (@cnt2 > 0)
                remove work order
                 where edtflg = 0
                   and client_id = :i_c_client_id
                   and wkonum = :i_c_wkonum
                   and wkorev = :i_c_wkorev
       }
    }
}",1345,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_WO_DTL","SL_IFD_SEG_PROC","MOCA","Process Work Order Detail","F","F","F","F","T","T","T","execute integrator transaction
  where resource = 'work order detail' and <<OVERSTACKED_ARGS>>",94,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS50_WO_HDR","SL_IFD_SEG_PROC","MOCA","Process Work Order Header","F","F","F","F","T","T","T","execute integrator transaction
  where resource = 'work order' and <<OVERSTACKED_ARGS>>",87,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_BOM_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded BOM Headers and  Lines","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
{
if ((:i_c_trntyp = 'R') or (:i_c_trntyp = 'r'))
{
    [select count(*) cnt
       from bomdtl
      where edtflg = 0
        and client_id = :i_c_client_id
        and bomnum = :i_c_bomnum
        and wh_id = @wh_id]
    |
    if (@cnt >0)
    {
        [select bomlin
           from bomdtl
          where edtflg = 0
            and client_id = :i_c_client_id
            and bomnum = :i_c_bomnum
            and wh_id = @wh_id]
        |
        remove bom detail
         where bomlin = @bomlin
           and client_id = :i_c_client_id
           and bomnum = :i_c_bomnum
           and wh_id = @wh_id
       |
       [select count(*) cnt1
          from bomdtl
         where client_id = :i_c_client_id
           and bomnum = :i_c_bomnum
           and wh_id = @wh_id]
       |
       if (@cnt1 = 0)
       {
           [select count(*) cnt2
              from bomhdr
             where edtflg = 0
               and client_id = :i_c_client_id
               and bomnum = :i_c_bomnum
               and wh_id = @wh_id]
           |
           if (@cnt2 > 0)
               remove bom header
                where edtflg = 0
                  and client_id = :i_c_client_id
                  and bomnum = :i_c_bomnum
                  and wh_id = @wh_id
        }
    }
}
}",1327,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_BOM_DTL","SL_IFD_SEG_PROC","MOCA","Process BOM Line","F","F","F","F","T","T","T",":i_c_moca_verb bom detail",25,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_BOM_HDR","SL_IFD_SEG_PROC","MOCA","Process BOM Header","F","F","F","F","T","T","T",":i_c_moca_verb bom header",25,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_DESCR","SL_IFD_SEG_POST","MOCA","Maintain","F","T","F","F","T","T","T",":i_c_moca_verb description",26,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_WO_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded Work Order Headers and  Lines","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
post full validation status
|
{
if ((:i_c_trntyp = 'R') or (:i_c_trntyp = 'r'))
{
    if (:i_c_client_id = '' or :i_c_client_id = @absent_ind_char)
    {
        sl_get sys_data_attr where sys_id = :i_c_sys_id
        |
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @SysParmValue client_id from dual]
    }
    else
    {
        [select :i_c_client_id client_id from dual]
    }
    |
    [select count(*) cnt
       from wkodtl
      where edtflg = 0
        and linsts != 'K'
        and client_id = @client_id
        and wkonum = :i_c_wkonum
        and wkorev = :i_c_wkorev
        and wh_id = @wh_id]
    |
    if (@cnt >0)
    {
        [select wkolin
           from wkodtl
          where edtflg = 0
            and linsts != 'K'
            and client_id = @client_id
            and wkonum = :i_c_wkonum
            and wkorev = :i_c_wkorev
            and wh_id = @wh_id]
        |
        remove work order detail
         where wkolin = @wkolin
           and seqnum = 0
           and edtflg = 0
           and client_id = @client_id
           and wkonum = :i_c_wkonum
           and wkorev = :i_c_wkorev
           and wh_id = @wh_id
        |
        [select count(*) cnt1
           from wkodtl
          where client_id = @client_id
            and wkonum = :i_c_wkonum
            and wkorev = :i_c_wkorev
            and wh_id = @wh_id]
        |
        if (@cnt1 = 0)
        {
            [select count(*) cnt2
               from wkohdr
              where edtflg = 0
                and client_id = @client_id
                and wkonum = :i_c_wkonum
                and wkorev = :i_c_wkorev
                and wh_id = @wh_id]
            |
            if (@cnt2 > 0)
                remove work order
                 where edtflg = 0
                   and client_id = @client_id
                   and wkonum = :i_c_wkonum
                   and wkorev = :i_c_wkorev
                   and wh_id = @wh_id
       }
    }
}
else if ((:i_c_trntyp = 'A') or (:i_c_trntyp = 'a'))
{
    if (:i_c_client_id = '' or :i_c_client_id = @absent_ind_char)
    {
        sl_get sys_data_attr where sys_id = :i_c_sys_id
        |
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @SysParmValue client_id from dual]
    }
    else
    {
        [select :i_c_client_id client_id from dual]
    }
    |
    write lms work order future assignment
       where wh_id = @wh_id
         and wkonum = :i_c_wkonum
         and wkorev = :i_c_wkorev
         and client_id = @client_id
    |
    process auto allocation
      where wh_id = @wh_id
         and wkonum = :i_c_wkonum
         and wkorev = :i_c_wkorev
         and client_id = @client_id
         and rulmod = 'W'
         and oprmod = 'D'
}
}",2842,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_WO_COMP_NOTE","SL_IFD_SEG_PROC","MOCA","Process Work Order Line Note","F","F","F","F","T","T","T","execute integrator transaction
  where resource = 'work order detail note' and <<OVERSTACKED_ARGS>>",99,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_WO_DTL","SL_IFD_SEG_PROC","MOCA","Process Work Order Line","F","F","F","F","T","T","T",":i_c_moca_verb work order detail",32,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_WO_HDR","SL_IFD_SEG_PROC","MOCA","Process Work Order Header","F","F","F","F","T","T","T",":i_c_moca_verb work order",25,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_WO_HDR_INS","SL_IFD_SEG_PROC","MOCA","Process Work Order Header Instructions","F","F","F","F","T","T","T",":i_c_moca_verb special instructions for work order",50,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_WO_HDR_NOTE","SL_IFD_SEG_PROC","MOCA","Process Work Order Header Note","F","F","F","F","T","T","T","execute integrator transaction
  where resource = 'work order note' and <<OVERSTACKED_ARGS>>",92,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS51_WO_TPLVL","SL_IFD_SEG_PROC","MOCA","Process Work Order Header","F","F","F","F","T","T","T","change work order",17,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS60_FOOT_CLEANUP","SL_IFD_POST","MOCA","Create default footprint description, if none was created for them during the download.","F","F","F","F","F","F","T","/* PROCESS_DCS60_FOOT_CLEANUP */
/* Create a default description for footprint, if none exists after download */
{
if (:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
{
    [select *
       from dscmst
      where colnam = 'ftpcod'
        and colval = :i_c_ftpcod] catch (-1403)
    |
    if (@? = -1403)
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
        |
        create description where colnam = 'ftpcod'
                             and colval = :i_c_ftpcod
                             and locale_id = @SysParmValue
                             and lngdsc = :i_c_ftpcod
    }
}
}",605,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS60_ITEMFOOT_CLEANUP","SL_IFD_POST","MOCA","Create default Item description and footprint description, if none was created for them during the download.","F","F","F","F","F","F","T","/* PROCESS_DCS60_ITEMFOOT_CLEANUP */
/* Create a default description for part and footprint, if none exists after download */
{
if (:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
{
    if (:i_c_prt_client_id = '' or :i_c_prt_client_id = @absent_ind_char)
    {
        if (:i_c_client_id != '' and :i_c_client_id != @absent_ind_char)
        {
            publish data where prtnum_client = :i_c_prtnum||'|'||:i_c_client_id
        }
        else
        {
            sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
            |
            publish data where prtnum_client = :i_c_prtnum||'|'||@SysParmValue
        }
    }
    else
    {
    publish data where prtnum_client = :i_c_prtnum||'|'||:i_c_prt_client_id ||'|'|| '----'
    }
    |
    [select *
       from prtdsc
      where colnam = 'prtnum|prt_client_id|wh_id_tmpl'
        and colval = @prtnum_client] catch (-1403)
    |
    if (@? = -1403)
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
        |
        create description where colnam = 'prtnum|prt_client_id|wh_id_tmpl'
                             and colval = @prtnum_client
                             and locale_id = @SysParmValue
                             and lngdsc = @prtnum_client
    }
    |
    [select *
       from dscmst
      where colnam = 'ftpcod'
        and colval = :i_c_prtnum] catch (-1403)
    |
    if (@? = -1403)
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
        |
        create description where colnam = 'ftpcod'
                             and colval = :i_c_prtnum
                             and locale_id = @SysParmValue
                             and lngdsc = :i_c_prtnum
    }
}
}",1695,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS60_PART_CLEANUP","SL_IFD_POST","MOCA","Create default Item description, if none was created for them during the download. Also we need to validate the details of the Item footprints.","F","F","F","F","F","T","T","/* PROCESS_DCS60_PART_CLEANUP */
{
if (:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
{
    sl_get sys_data_attr where sys_id = :i_c_sys_id
    |
    publish data where wh_id = :i_c_whse_id
    |
    /* If warehouse id is not passed,then default it to ---- */
    if(:i_c_whse_id = '' or
       :i_c_whse_id = @nochg_ind_char or
       :i_c_whse_id = @absent_ind_char)
    {
        publish data where wh_id = '----'
    }
    |
    /* Create a default description for part, if none exists after download */
    if (:i_c_prt_client_id = '' or :i_c_prt_client_id = @absent_ind_char)
    {
        if (:i_c_client_id != '' and :i_c_client_id != @absent_ind_char)
        {
            publish data where prtnum_client = :i_c_prtnum||'|'||:i_c_client_id || '|' || @wh_id
        }
        else
        {
            sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
            |
            publish data where prtnum_client = :i_c_prtnum||'|'||@SysParmValue || '|' || @wh_id
        }
    }
    else
    {
         publish data where prtnum_client = :i_c_prtnum||'|'||:i_c_prt_client_id || '|' || @wh_id
    }
    |
    [select *
       from prtdsc
      where colnam = 'prtnum|prt_client_id|wh_id_tmpl'
        and colval = @prtnum_client] catch (-1403)
    |
    if (@? = -1403)
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
        |
        create description where colnam = 'prtnum|prt_client_id|wh_id_tmpl'
                             and colval = @prtnum_client
                             and locale_id = @SysParmValue
                             and lngdsc = @prtnum_client
    }
    ;
    /* Validate all the footprint and details of the specific prtnum at here  */
    [select distinct ftpcod, wh_id
       from prtftp
      where prtnum = :i_c_prtnum
        and prt_client_id = :i_c_prt_client_id] catch (-1403)
    |
    if (@? = 0)
    {
        validate details for part footprint
           where prtnum = :i_c_prtnum
             and ftpcod = @ftpcod
             and prt_client_id = :i_c_prt_client_id
             and wh_id = @wh_id catch(@?)
        |
        if (@? != 0)
       {
             log full validation error message
                where <<OVERSTACKED_ARGS>>
                  and client_id = :i_c_prt_client_id
                  and err_code = @?
                  and precompiled_msg = @!
        }
     }
}
|
post full validation status
}",2399,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS60_TRFPLAN_PREPARE","SL_IFD_PRE","MOCA","Prepare Shipment Lines Associated with Carrier Move For  Edit","F","F","F","F","F","F","T","{     publish data where client_id = :i_c_client_id     |     if (@client_id='')      {         sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'    |       publish data where client_id = @sysparmvalue     }     |     /* Update Shipment Line EDTFLG  */ {[select shipment.ship_id from shipment, stop, car_move where shipment.stop_id = stop.stop_id and stop.car_move_id = car_move.car_move_id and car_move.host_ext_id = :i_c_host_car_move_id and car_move.host_client_id = @client_id] | [update shipment_line set edtflg = 0 where ship_id = @ship_id]} catch (@?) }",566,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS61_APPT","SL_IFD_SEG_PROC","MOCA","Process Appointment","F","F","F","F","T","T","T","
publish data where <<OVERSTACKED_ARGS>>
|
if (:i_c_car_move_id is  and :i_c_host_ext_id is not )
{
    [select car_move_id
       from car_move
      where host_ext_id = :i_c_host_ext_id
        and wh_id       = :i_c_wh_id] catch(-1403)
    |
    if (@? = 0)
    {
        publish data
          where CAR_MOVE_ID = @car_move_id
    }
    else
    {
        publish data
          where CAR_MOVE_ID = :i_c_car_move_id
    }
    |
    publish data
          where EXT_APPT_ID = :i_c_host_ext_id
}
else
{
    publish data
      where CAR_MOVE_ID = :i_c_car_move_id
}
|
save session variable 
       where name = 'appointment_change_from_TM' 
         and value = 'T'
|
execute integrator transaction where <<OVERSTACKED_ARGS>> and resource = 'appointment' and moca_verb = ':i_c_moca_verb'",796,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS61_APPT_NOTE","SL_IFD_SEG_PROC","MOCA","Process Appointment Note","F","F","F","F","T","T","T","execute integrator transaction where <<OVERSTACKED_ARGS>> and resource = 'appointment note' and moca_verb = 'create'",116,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS61_RCPT_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded Receipt Lines After Refresh","F","F","F","F","T","T","T","post full validation status
|
publish data where trknum = :i_c_trknum
|
if (@trknum != '')
{
    get warehouse id where wh_id = :i_c_whse_id
    |
    if (:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
    {
       /* Auto Allocation of unplanned orders
        * Plan and allocate auto created orders for distros.
        */
       [select distinct 'x'
          from auto_alc_rule
         where incl_unpln_ord_flg = 1
           and ena_flg = 1
           and auto_alc_mtd in ('D','SCHD')
           and rule_type = 'ORD'
           and wh_id = @wh_id] catch(-1403)
       |
       if (@? = 0)
       {
           [select distinct ord_line.client_id
              from rcvlin,
                   distro,
                   ord_line
             where rcvlin.invnum = distro.invnum
               and rcvlin.invlin = distro.invlin
               and rcvlin.invsln = distro.invsln
               and distro.distro_id = ord_line.distro_id
               and distro.wh_id = ord_line.wh_id
               and distro.client_id = ord_line.client_id
               and rcvlin.trknum = @trknum
               and rcvlin.wh_id = @wh_id] catch(-1403)
           |
           if (@? = 0)
           {
               process auto allocation
                 where rulmod = 'O'
                   and oprmod = 'D'
                   and client_id = @client_id
                   and wh_id = @wh_id catch (@?)
                |
                if (@? != 0)
                {
                    publish data where post_error_code = @?
                        and post_error_msg = @!
                    |
                    get inbound full validation flag
                    |
                    if (@inb_full_vld_flg)
                    {
                        log full validation error message
                            where err_code = -1 * @post_error_code
                              and def_err_msg = @post_error_msg
                    }
                    else
                    {
                        set return status
                            where status = -1 * @post_error_code
                              and message = @post_error_msg
                    }
                }
               |
               process asn distribution download
                   where trknum = :i_c_trknum
                      and wh_id = @wh_id
           }
        }
    }
    |
    if (:i_c_trntyp = 'R' or :i_c_trntyp = 'C')
    {
        postprocess host receipt asn
            where trntyp = :i_c_trntyp
              and trknum = :i_c_trknum
              and wh_id = @wh_id catch (@?)
        |
        if (@? != 0)
        {
            publish data
              where post_error_code = @?
                and post_error_msg = @!
            |
            get inbound full validation flag
            |
            if (@inb_full_vld_flg)
            {
                log full validation error message
                    where err_code = -1 * @post_error_code
                      and def_err_msg = @post_error_msg
            }
            else
            {
                set return status
                    where status = -1 * @post_error_code
                      and message = @post_error_msg
            }
        }
    }
    |
    process host receipt cleanup where
}",3290,1,"20210202172857","","SLIMP_I",""
"PROCESS_DCS61_RCPT_PREPARE","SL_IFD_PRE","MOCA","Prepare Receipt Lines For Refresh","F","F","F","F","F","F","T","post full validation status
|
publish data where trknum = :i_c_trknum
|
if (@trknum != '')
{
    get warehouse id where wh_id = :i_c_whse_id
    |
    publish data where client_id = :i_c_client_id
    |
    if (@client_id='')
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID' |
        [select @sysparmvalue client_id from dual ]
    }
    |
    if (:i_c_trntyp = 'R' or :i_c_trntyp = 'C')
    {
        [update rcvlin
            set edtflg = 0
          where trknum = :i_c_trknum
            and wh_id = @wh_id]catch(-1403)
        |
        preprocess host receipt asn
           where trntyp = :i_c_trntyp
             and trknum = :i_c_trknum
             and wh_id = @wh_id catch (@?)
        |
        if(@? != 0)
        {
            publish data where post_error_code = @?
                and post_error_msg = @!
            |
            get inbound full validation flag
            |
            if (@inb_full_vld_flg)
            {
                log full validation error message
                    where err_code = -1 * @post_error_code
                      and def_err_msg = @post_error_msg
            }
            else
            {
                set return status
                    where status = -1 * @post_error_code
                      and message = @post_error_msg
            }
        }
    }
}",1350,1,"20210202172857","","SLIMP_I",""
"PROCESS_DISTRO","SL_IFD_SEG_PROC","MOCA","PROCESS DISTRO ADD/CHANGE","F","F","F","F","T","T","T","process host distro where <<OVERSTACKED_ARGS>>",46,1,"20210202172857","","SLIMP_I",""
"PROCESS_DISTRO_AUTO_ALLOC","SL_IFD_POST","MOCA","Process Auto Allocation","F","F","F","F","F","F","T","if(:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
{
    /* Auto Allocation of unplanned orders
     * Plan and allocate auto created orders for distros.
     */
    [select distinct 'x'
       from auto_alc_rule
      where incl_unpln_ord_flg = 1
        and ena_flg = 1
        and auto_alc_mtd in ('D','SCHD')
        and rule_type = 'ORD'
        and wh_id = :i_c_whse_id] catch(-1403)
    |
    if(@? = 0)
    {
        [select ord_line.client_id
           from distro,
                ord_line
          where distro.distro_id = ord_line.distro_id
            and distro.client_id = ord_line.client_id
            and distro.wh_id = ord_line.wh_id
            and distro.distro_id = :i_c_distro_id
            and distro.client_id = :i_c_client_id
            and distro.wh_id = :i_c_whse_id] catch(-1403)
        |
        if(@? = 0)
        {
            process auto allocation
              where rulmod = "O"
                and oprmod = "D"
                and client_id = @client_id
                and wh_id = :i_c_whse_id
        }
    }
}",1047,1,"20210202172857","","SLIMP_I",""
"PROCESS_DISTRO_DELETE","SL_IFD_SEG_PROC","MOCA","Process Distro","F","F","F","F","F","T","T","{
    if (:i_c_client_id = '' or :i_c_client_id = @absent_ind_char)
    {
        sl_get sys_data_attr where sys_id = :i_c_sys_id
        |
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @SysParmValue client_id from dual]
    }
    else
    {
       publish data where client_id = :i_c_client_id
    }
    |
    process host distro where <<OVERSTACKED_ARGS>>
}",403,1,"20210202172857","","SLIMP_I",""
"PROCESS_GS1_DELETE_ORDER","SL_IFD_POST","MOCA","GS1 Inbound Order Delete Algorithm","F","F","F","F","F","F","T","post full validation status",27,1,"20210202173204","","SLIMP_I",""
"PROCESS_GS1_INBOUND_ORDER","ORDER","MOCA","Process the inbound order","F","F","F","F","T","T","T","process gs1 inbound order where <<OVERSTACKED_ARGS>>
|
/* In case of CHANGE_BY_REFRESH actionCode, the external system is expected
   send the complete order including all the lines.  Here we are getting the 
   input invnum,client_id and supnum and storing it in  session variables,
   this will be used by "process gs1 remove inbound order lines" command to
   remove the lines that are not sent by the external system */
get session variable
    where name = 'remove_invnum_list' catch (@?)  
|
if (@? != 0) 
{
    save session variable 
        where name = 'remove_invnum_list' 
          and value = :i_c_invnum
}
else
{
    save session variable 
        where name = 'remove_invnum_list' 
          and value = @value || ',' || :i_c_invnum
}
|
get session variable 
    where name = 'remove_rimlin_invnum' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
        where name = 'remove_rimlin_invnum'
          and value = :i_c_invnum
}
|
get session variable 
    where name = 'remove_rimlin_client' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
        where name = 'remove_rimlin_client'
          and value = :i_c_client_id
}
|
get session variable 
    where name = 'remove_rimlin_wh' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
        where name = 'remove_rimlin_wh'
          and value = :i_c_wh_id
}
|
get session variable 
    where name = 'remove_rimlin_supnum' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
        where name = 'remove_rimlin_supnum'
          and value = :i_c_supnum
}
",1564,1,"20210202173204","","SLIMP_I",""
"PROCESS_GS1_INBOUND_ORDER_LINE","ORDER","MOCA","Process the inbound order line","F","F","F","F","F","T","T","process gs1 inbound order line where <<OVERSTACKED_ARGS>>
|
/* In case of CHANGE_BY_REFRESH actionCode, the external system is expected
   send the complete order including all the lines.  Here we are getting the 
   input lines and storing it in remove_rimlin_invline_list session variable,
   this will be used by "process gs1 remove inbound order lines" command to
   remove the lines that are not sent by the external system */
get session variable where name = 'remove_rimlin_invline_list' catch (@?)  
|
if (@? = -1403) 
{
    save session variable 
        where name = 'remove_rimlin_invline_list'
          and value = '''' || :i_c_invlin || ''''
}
else
{
    save session variable
        where name = 'remove_rimlin_invline_list' 
          and value = @value || ',''' || :i_c_invlin || ''''
}
",805,1,"20210202173204","","SLIMP_I",""
"PROCESS_GS1_ORDER_LINE_NOTE","SL_IFD_SEG_PROC","MOCA","Process the order line note segment","F","F","F","F","F","T","T","process gs1 order line note where <<OVERSTACKED_ARGS>>",54,1,"20210202173205","","SLIMP_I",""
"PROCESS_GS1_ORDER_NOTE","SL_IFD_SEG_PROC","MOCA","Process the order note segment","F","F","F","F","F","T","T","process gs1 order note where <<OVERSTACKED_ARGS>>",49,1,"20210202173205","","SLIMP_I",""
"PROCESS_GS1_PARTY_CAR_DELETE","SL_IFD_SEG_PROC","MOCA","GS1 Carrier Party Delete","F","F","F","F","T","T","T","remove carrier detail where <<OVERSTACKED_ARGS>>
|
remove carrier where carcod = :i_c_carcod
|
remove address",109,1,"20210202173339","","SLIMP_I",""
"PROCESS_GS1_PARTY_DELETE","SL_IFD_SEG_PROC","MOCA","Process Customer","F","F","F","F","T","T","T","remove supplier where <<OVERSTACKED_ARGS>>
|
remove address",59,1,"20210202173339","","SLIMP_I",""
"PROCESS_GS1_POST_INBOUND_ORDER","SL_IFD_POST","MOCA","GS1 Inbound Order Post Algorithm","F","F","F","F","F","T","T","process gs1 remove inbound order lines",38,1,"20210202173204","","SLIMP_I",""
"PROCESS_GS1_POST_ORDER","SL_IFD_POST","MOCA","GS1 Inbound Order Post Algorithm. This will perform cleanup.","F","F","F","F","F","F","T","process gs1 delete order lines
|
process gs1 update order lines
|
process gs1 auto allocate
|
post full validation status",121,1,"20210202173204","","SLIMP_I",""
"PROCESS_HOST_TRAFFIC_PLAN","SL_IFD_POST","MOCA","Process Host Traffic Plan Download","F","F","F","F","F","T","T","postprocess host traffic plan where <<OVERSTACKED_ARGS>>",56,1,"20210202172857","","SLIMP_I",""
"PROCESS_INB_ORDER_INV","SL_IFD_SEG_PROC","MOCA","Process the planned inbound order line inventory (ASN) for a despatch advice.","F","F","F","F","F","T","T","process planned inbound order inventory",39,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"PROCESS_INB_ORDER_LINE","SL_IFD_SEG_PROC","MOCA","Process the planned inbound order line segment for a despatch advice.","F","F","F","F","F","T","T","if (:i_c_expqty != '' or :i_c_expqty != '0')
{
    process planned inbound order line
}",87,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"PROCESS_INBOUND_SHIPMENT","SL_IFD_SEG_PROC","MOCA","Process the shipment segment for an inbound shipment","F","F","F","F","F","T","T","
process inbound shipment refresh",33,2,"20210202173301","20210202173312","SLIMP_I","SLIMP_I"
"PROCESS_INVSTS_PRG","SL_IFD_SEG_PROC","MOCA","Process Inventory Status Progression","F","F","F","F","T","T","T",":i_c_moca_verb inventory status progression detail",50,1,"20210202172857","","SLIMP_I",""
"PROCESS_ITEM_VELOCITY","SL_IFD_SEG_PROC","MOCA","Process Item Velocity","F","F","F","F","F","F","T","/* We have to handle this one different from our normal maintenance create/change algorithms.
 * If the trntyp is "A" but the moca_verb is "change" - meaning it already exists - then we
 * are going to add the quantity to the existing quantity.
 * If the trntyp is "C" and the moca_verb is "change" then we will actually adjust it to the new quantity.
 * If the trntyp is "A" and the moca_verb is "create, then we will create it.
 */

get warehouse id where wh_id = :i_c_whse_id
|
publish data where wh_id = @wh_id and velocity_id = :i_c_velocity_id
                     and item_num = :i_c_prtnum and client_id = :i_c_prt_client_id
                     and velocity_type = :i_c_velocity_type and plan_date = :i_c_plan_date
                     and ordnum = :i_c_ordnum and uomcod = :i_c_uomcod
                     and ordtyp = :i_c_ordtyp and invsts = :i_c_invsts
|
if (@client_id ='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    publish data where client_id = @sysparmvalue
}
|
if (:i_c_trntyp = 'A' and ':i_c_moca_verb' = 'change')
{
    if (@velocity_id != '' )
    {
        [select quantity qty
           from item_velocity
         where velocity_id = @velocity_id]
        |
        change item velocity
          where velocity_id = @velocity_id
              and quantity = :i_c_quantity + @qty
    }
    else
    {
        [select quantity qty
           from item_velocity
         where item_num  = @item_num
            and client_id = @client_id
            and velocity_type = @velocity_type
            and plan_date = @plan_date
            and wh_id = @wh_id
            and @+ordnum
            and @+uomcod
            and @+ordtyp
            and @+invsts]
        |
        change item velocity
          where item_num  = @item_num
             and client_id = @client_id
             and velocity_type = @velocity_type
             and plan_date = @plan_date
             and wh_id = @wh_id
             and quantity = :i_c_quantity + @qty
             and @+ordnum
             and @+uomcod
             and @+ordtyp
             and @+invsts
    }
}
else if (:i_c_trntyp = 'C' and ':i_c_moca_verb' = 'change')
{
        change item velocity
          where item_num  = @item_num
             and client_id = @client_id
             and velocity_type = @velocity_type
             and plan_date = @plan_date
             and wh_id = @wh_id
             and quantity = :i_c_quantity
             and @+ordnum
             and @+uomcod
             and @+ordtyp
             and @+invsts
}
else
{
         create item velocity
          where item_num  = @item_num
             and client_id = @client_id
             and velocity_type = @velocity_type
             and plan_date = @plan_date
             and wh_id = @wh_id
             and quantity = :i_c_quantity
             and @+ordnum
             and @+uomcod
             and @+ordtyp
             and @+invsts
}",2926,1,"20210202172857","","SLIMP_I",""
"PROCESS_LENS_SUBSCRIBE","SL_IFD_POST","MOCA","Process Lens Subscribe","F","F","F","F","F","F","T","process lens subscribe",22,1,"20210202172857","","SLIMP_I",""
"PROCESS_LENS_WH_SUBSCRIBE","SL_IFD_POST","MOCA","Process Lens Warehouse Subscribe","F","F","F","F","F","F","T","process lens warehouse subscribe",32,1,"20210202172857","","SLIMP_I",""
"PROCESS_LOC_CUST","SL_IFD_SEG_PROC","MOCA","Process Location To Customer","F","F","F","F","T","T","T","if (:i_c_documentActionCode = 'ADD' or :i_c_documentActionCode = 'CHANGE_BY_REFRESH')
{
    if (:i_c_alllocationsshipfrom = 'true')
    {
        process gs1 location customer where <<OVERSTACKED_ARGS>>
    }
    else
    {
        [select 'x' 
            from wh 
           where wh_id = :i_c_valueshipfrom] catch (-1403)
          |
          if(@? = 0)
          {
              process gs1 location customer where <<OVERSTACKED_ARGS>>
           } 
    }
}
else
{
    publish data where ret1 = ''
}",504,1,"20210202173348","","SLIMP_I",""
"PROCESS_LOC_CUST_REMOVE","SL_IFD_SEG_PROC","MOCA","Process Location To Customer","F","F","F","F","T","T","T","if (:i_c_documentActionCode = 'DELETE')
{
    if (:i_c_alllocationsshipfrom = 'true')
    {
         process gs1 location customer remove where <<OVERSTACKED_ARGS>>
    }
    else
    {
          [select 'x' 
             from wh 
            where wh_id = :i_c_valueshipfrom] catch (-1403)
          |
          if(@? = 0)
          {
              process gs1 location customer remove where <<OVERSTACKED_ARGS>>
          }
    }
}
else
{
    publish data where ret1 = ''
}
",476,1,"20210202173349","","SLIMP_I",""
"PROCESS_LOC_SUPP","SL_IFD_SEG_PROC","MOCA","Process Location To Supplier","F","F","F","F","T","T","T","if (:i_c_documentActionCode = 'ADD' or :i_c_documentActionCode = 'CHANGE_BY_REFRESH')
{
    if (:i_c_alllocationsshipto = 'true')
    { 
        process gs1 location supplier where <<OVERSTACKED_ARGS>>
    }
    else
    {
         [select 'x' 
            from wh 
           where wh_id = :i_c_valueshipto] catch (-1403)
          |
          if(@? = 0)
          {
              process gs1 location supplier where <<OVERSTACKED_ARGS>>
          }
    }
 }
else
{
    publish data where ret1 = ''
}",501,1,"20210202173349","","SLIMP_I",""
"PROCESS_LOC_SUPP_REMOVE","SL_IFD_SEG_PROC","MOCA","Process Location To Supplier Delete","F","F","F","F","T","T","T","if (:i_c_documentActionCode = 'DELETE')
{
    if (:i_c_alllocationsshipto = 'true')
    {
        process gs1 location supplier remove where <<OVERSTACKED_ARGS>>
    }
    else
    {
        [select 'x' 
           from wh 
          where wh_id = :i_c_valueshipto] catch (-1403)
        |
        if(@? = 0)
        {
            process gs1 location supplier remove where <<OVERSTACKED_ARGS>>
        }
    }
}
else
{
    publish data where ret1 = ''
}",454,1,"20210202173349","","SLIMP_I",""
"PROCESS_PART_CLASS","SL_IFD_SEG_PROC","MOCA","Process Item Classification","F","F","F","F","F","F","T","[update prtmst set :i_c_moca_nq_var_name  = :i_c_var_value,
                   :i_c_moca_nq_desc_name = :i_c_desc_value
             where prtnum = :i_c_prtnum] catch (@?)",171,1,"20210202172857","","SLIMP_I",""
"PROCESS_PART_COLOR","SL_IFD_SEG_PROC","MOCA","PROCESS_PART_COLOR","F","F","F","F","T","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@trntyp = 'D')
{
    remove item style attribute
      where attr_colnam = 'prtcolor'
          and attr_codnam = @codnam
}
else
{
    [select 1
       from prtstyle_attr
     where attr_colnam = 'prtcolor'
         and attr_codnam = @codnam] catch(-1403)
    |
    if (@? = -1403)
    {
        create item style attribute
        where attr_colnam = 'prtcolor'
           and attr_codnam = @codnam
           and lngdsc = @lngdsc
    }
    else
    {
        change item style attribute
         where attr_colnam = 'prtcolor'
            and attr_codnam = @codnam
            and lngdsc = @lngdsc
    }
}",653,1,"20210202172857","","SLIMP_I",""
"PROCESS_PART_DESCR","SL_IFD_SEG_POST","MOCA","Maintain","F","T","F","F","T","T","T","{publish data where wh_id = :i_c_whse_id|process host part description}",71,1,"20210202172857","","SLIMP_I",""
"PROCESS_PART_FIT","SL_IFD_SEG_PROC","MOCA","PROCESS_PART_FIT","F","F","F","F","T","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@trntyp = 'D')
{
    remove item style attribute
      where attr_colnam = 'prtfit'
          and attr_codnam = @codnam
}
else
{
    [select 1
       from prtstyle_attr
     where attr_colnam = 'prtfit'
         and attr_codnam = @codnam] catch(-1403)
    |
    if (@? = -1403)
    {
        create item style attribute
        where attr_colnam = 'prtfit'
           and attr_codnam = @codnam
           and lngdsc = @lngdsc
    }
    else
    {
        change item style attribute
         where attr_colnam = 'prtfit'
            and attr_codnam = @codnam
            and lngdsc = @lngdsc
    }
}",645,1,"20210202172857","","SLIMP_I",""
"PROCESS_PART_FOOTPRINT","SL_IFD_SEG_PROC","MOCA","Process Item Footprint","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
    /* We create and change footprints for the specified warehouse */
    publish data where wh_id = :i_c_whse_id
    |
    execute integrator transaction
        where <<OVERSTACKED_ARGS>>
          and resource = 'part footprint'
    |
    execute integrator transaction
        where moca_verb = 'remove'
          and resource = 'part footprint detail'
          and prt_client_id = :i_c_prt_client_id
          and wh_id = @wh_id
          and ftpcod = :i_c_ftpcod catch (-1403)
}",511,1,"20210202172857","","SLIMP_I",""
"PROCESS_PART_FOOTPRINT_DETAIL","SL_IFD_SEG_PROC","MOCA","Process Item Footprint Detail","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
   /* We create prtftp_dtl for the specified warehouse */
    publish data where wh_id = :i_c_whse_id
    |
    execute integrator transaction
        where <<OVERSTACKED_ARGS>>
          and resource = 'part footprint detail'
          and moca_verb = 'create'
}",289,1,"20210202172857","","SLIMP_I",""
"PROCESS_PART_LOT","SL_IFD_SEG_PROC","MOCA","Process Item Lot","F","F","F","F","T","T","T","execute integrator transaction
    where resource = 'part lot'
       and <<OVERSTACKED_ARGS>>",94,1,"20210202172857","","SLIMP_I",""
"PROCESS_PART_SIZE","SL_IFD_SEG_PROC","MOCA","PROCESS_PART_SIZE","F","F","F","F","T","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@trntyp = 'D')
{
    remove item style attribute
      where attr_colnam = 'prtsize'
          and attr_codnam = @codnam
}
else
{
    [select 1
       from prtstyle_attr
     where attr_colnam = 'prtsize'
         and attr_codnam = @codnam] catch(-1403)
    |
    if (@? = -1403)
    {
        create item style attribute
        where attr_colnam = 'prtsize'
           and attr_codnam = @codnam
           and lngdsc = @lngdsc
    }
    else
    {
        change item style attribute
         where attr_colnam = 'prtsize'
            and attr_codnam = @codnam
            and lngdsc = @lngdsc
    }
}",649,1,"20210202172857","","SLIMP_I",""
"PROCESS_PART_STYLE","SL_IFD_SEG_PROC","MOCA","PROCESS_PART_STYLE","F","F","F","F","T","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (@trntyp = 'D')
{
    remove item style attribute
      where attr_colnam = 'prtstyle'
          and attr_codnam = @codnam
}
else
{
    [select 1
       from prtstyle_attr
     where attr_colnam = 'prtstyle'
         and attr_codnam = @codnam] catch(-1403)
    |
    if (@? = -1403)
    {
        create item style attribute
        where attr_colnam = 'prtstyle'
           and attr_codnam = @codnam
           and lngdsc = @lngdsc
    }
    else
    {
        change item style attribute
         where attr_colnam = 'prtstyle'
            and attr_codnam = @codnam
            and lngdsc = @lngdsc
    }
}",653,1,"20210202172857","","SLIMP_I",""
"PROCESS_POST_TM_MOVE_IMPORT","SL_IFD_POST","MOCA","Move Import From TM - Move Import Post Algorithm","F","F","F","F","T","T","T","post tm move import",19,1,"20210202172857","","SLIMP_I",""
"PROCESS_PROOF_OF_DELIVERY","SL_IFD_SEG_PROC","MOCA","Processes an order line for proof of delivery","F","F","F","F","T","T","T","process proof of delivery",25,1,"20210202172857","","SLIMP_I",""
"PROCESS_RA_CLEANUP","SL_IFD_SEG_PROC","MOCA","Remove Unneeded RA Lines After Refresh","F","F","F","F","F","F","T","sl_dcs exec_command_at
where i_command =
"select count(*) cnt
from rimlin
where edtflg = 'N'
and supnum = :i_c_supnum
and invnum = :i_c_invnum
|
select invlin, invsln
from rimlin
where edtflg = 'N'
and supnum = :i_c_supnum
and invnum = :i_c_invnum if (@cnt > 0)
|
remove invoice master line where supnum = :i_c_supnum and invnum = :i_c_invnum and invlin = @invlin and invsln = @invsln  if (@cnt >0) "",400,1,"20210202172857","","SLIMP_I",""
"PROCESS_RA_PREPARE","SL_IFD_SEG_PROC","MOCA","Prepare Invoice Lines For Refresh","F","F","F","F","F","F","T","sl_dcs exec_command_at
where i_command =
"select count(*) cnt
from rimlin
where supnum = :i_c_supnum
and invnum = :i_c_invnum
|
update rimlin
set edtflg = 'N'
where supnum = :i_c_supnum
and invnum = :i_c_invnum if (@cnt > 0)"",225,1,"20210202172857","","SLIMP_I",""
"PROCESS_RET_DTL","SL_IFD_SEG_PROC","MOCA","Process Return Detail","F","F","F","F","T","T","T","process return detail",21,2,"20210202172857","20210202173206","SLIMP_I","SLIMP_I"
"PROCESS_RET_HDR","SL_IFD_SEG_PROC","MOCA","Process Return Header","F","F","F","F","T","T","T",":i_c_moca_verb return header",28,2,"20210202172857","20210202173206","SLIMP_I","SLIMP_I"
"PROCESS_RETURN_CSTMST_PREPARE","SL_IFD_SEG_PRE","MOCA","if customer doesn't exist then create customer","F","F","F","F","T","T","T","
   if (:i_c_cstnum != '')
   {
       if (:i_c_host_ext_id != '')
       {
           [select adr_id,temp_flg
              from adrmst
            where client_id     = :i_c_client_id
               and host_ext_id = :i_c_host_ext_id] catch(-1403)
           |
           if( @? = -1403)
           {
                create  address where <<OVERSTACKED_ARGS>> and temp_flg = 1
                |
                [select adr_id
                   from adrmst
                 where client_id     = :i_c_client_id
                    and host_ext_id = :i_c_host_ext_id] catch(-1403)
           }
           else if(@temp_flg = 1)
           {
              change address where <<OVERSTACKED_ARGS>>
           }
           |
           publish data where adr_id = @adr_id
        }
        |
        [ select adr_id old_adr_id

            from cstmst
          where cstnum   = :i_c_cstnum
             and  client_id = :i_c_client_id ] catch(-1403)
       |
       if( @? = -1403)
       {
            create customer
            where cstnum     = :i_c_cstnum
               and client_id    = :i_c_client_id
               and adr_id       = @adr_id
               and mc_csttyp = 'RET'
       }
       else
      {
          if( @old_adr_id != @ard_id)
         {
               change customer
                where  cstnum     = :i_c_cstnum
                   and   client_id   = :i_c_client_id
                   and   adr_id      = @adr_id;
              [  select 1
                   from adrmst
                 where client_id = :i_c_client_id
                    and adr_id    = @old_adr_id
                    and temp_flg = 1 ] catch(-1403)
              |
              if(@? = 0)
              {
                    [ select 1
                        from cstmst
                      where client_id = :i_c_client_id
                         and adr_id    = @old_adr_id ] catch(-1403)
                    |
                    if( @? = -1403)
                    {
                    remove address
                      where client_id = :i_c_client_id
                         and adr_id    = @old_adr_id
                    }
               }
          }
        }

   }",2192,1,"20210202172857","","SLIMP_I",""
"PROCESS_RETURN_DELETE","SL_IFD_SEG_PROC","MOCA","Process Return Order Delete","F","F","F","F","F","T","T","process return order delete",27,1,"20210202173206","","SLIMP_I",""
"PROCESS_RETURNS_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded Return Details After Refresh","F","F","F","F","F","F","T","{
if ((:i_c_trntyp = 'R') or (:i_c_trntyp = 'r'))
{
     [select count(*) cnt
       from rmadtl
      where nvl(edtflg,0) = 0
    and rmanum = :i_c_rmanum]
    |
    if (@cnt > 0)
    {
    [select rmanum, dtlnum
       from rmadtl
      where nvl(edtflg,0) = 0
        and rmanum = :i_c_rmanum]
    |
    remove return detail
     where rmanum = @rmanum
       and dtlnum = @dtlnum
   }
}
}",392,1,"20210202172857","","SLIMP_I",""
"PROCESS_RETURNS_PREPARE","SL_IFD_PRE","MOCA","Prepare Return Details For  Edit","F","F","F","F","F","F","T","{
[select count(*) cnt
    from retdtl
    where rmanum = :i_c_rmanum]
|
if (@cnt>0)
    [update retdtl
    set edtflg = 0
    where rmanum = :i_c_rmanum]
}",156,1,"20210202172857","","SLIMP_I",""
"PROCESS_ROUTE","SL_IFD_SEG_PROC","MOCA","PROCESS ROUTE ADD/CHANGE","F","F","F","F","T","T","T",":i_c_moca_verb route",20,1,"20210202172857","","SLIMP_I",""
"PROCESS_ROUTE_DELETE","SL_IFD_SEG_PROC","MOCA","Process Route","F","F","F","F","F","F","T","{
    [select count(*) cnt from car_move
      where car_move_id = :i_c_route_id and rte_tmpl_flg = 1]
    |
    if (@cnt>0)
       remove route where route_id = :i_c_route_id
}",177,1,"20210202172857","","SLIMP_I",""
"PROCESS_ROUTE_STOP","SL_IFD_SEG_PROC","MOCA","PROCESS ROUTE STOP ADD/CHANGE","F","F","F","F","T","T","T","if (:i_c_moca_verb = 'create')
{
    /* we only support creating stop, because all fields are logical PK fields */
    create route stop
}
",139,1,"20210202172857","","SLIMP_I",""
"PROCESS_SAL10_ADDRESS","SL_IFD_SEG_PROC","MOCA","PROCESS ADDRESS  MASTER ADD/CHANGE","F","F","F","F","T","T","T","{
  /* Log TMS Event trigger on create address component fails with 'Invalid Warehouse ID' error if global warehouse id is not set
   * or if we try to download supplier using inbound adapter and not through Process Inbound IFD GUI as WH_ID value will not be
   * on stack. Hence use the warehouse ID value in the input XML (WHSE_ID) and publish wh_id value on stack to be used by
   * create address
   */
   publish data where wh_id = :i_c_whse_id
   |
   execute integrator transaction
    where resource = 'address'
       and <<OVERSTACKED_ARGS>>
}",553,1,"20210202172857","","SLIMP_I",""
"PROCESS_SAL10_ADRMST_DELETE","SL_IFD_SEG_PROC","MOCA","Remove Addresses","F","F","F","F","F","T","T","
{
    if (:i_c_host_ext_id = '')
    {
      [select count(*) cnt
      from adrmst
     where adr_id = :i_c_adr_id and
           client_id = :i_c_client_id]
     |
     if (@cnt>0)
     {
             execute integrator transaction
                 where moca_verb = 'remove'
                   and resource = 'address'
                   and adr_id = :i_c_adr_id
                   and client_id = :i_c_client_id
                   and <<OVERSTACKED_ARGS>>
       }
    }
    else
    {
      [select count(*) cnt
         from adrmst
        where host_ext_id = :i_c_host_ext_id and
              client_id = :i_c_client_id]
      |
      if (@cnt>0)
      {
             execute integrator transaction
                 where moca_verb = 'remove'
                   and resource = 'address'
                   and host_ext_id = :i_c_host_ext_id
                   and client_id = :i_c_client_id
                   and <<OVERSTACKED_ARGS>>
       }
 }
}",957,1,"20210202172857","","SLIMP_I",""
"PROCESS_SHIPMENT","SL_IFD_SEG_PROC","MOCA","Process the Shipment Move segment on the TM Move Import transactions.","F","F","F","F","F","T","T","
process shipment for load create",33,1,"20210202173249","","SLIMP_I",""
"PROCESS_SHIPMENT_LINE","SL_IFD_SEG_PROC","MOCA","Process the Shipment Line Move segment on the TM Move Import transactions.","F","F","F","F","T","T","T","process shipment line for load create",37,1,"20210202173249","","SLIMP_I",""
"PROCESS_STOP","SL_IFD_SEG_PROC","MOCA","Process the Shipment Stop Move segment on the TM Move Import transactions.","F","F","F","F","F","T","T","
process stop for load create",29,1,"20210202173249","","SLIMP_I",""
"PROCESS_STORE","SL_IFD_SEG_PROC","MOCA","PROCESS STORE ADD/CHANGE","F","F","F","F","T","T","T",":i_c_moca_verb store",20,1,"20210202172857","","SLIMP_I",""
"PROCESS_STORE_DELETE","SL_IFD_SEG_PROC","MOCA","Process Customer","F","F","F","F","F","F","T","{
    [select count(*) cnt from wh_cstmst
      where cstnum = :i_c_cstnum and client_id = :i_c_client_id and wh_id = :i_c_wh_id]
    |
    if (@cnt>0)
       remove store where cstnum = :i_c_cstnum and client_id = :i_c_client_id and wh_id = :i_c_wh_id
}",254,1,"20210202172857","","SLIMP_I",""
"PROCESS_STORE_LOC","SL_IFD_SEG_PROC","MOCA","PROCESS STORE ADD/CHANGE","F","F","F","F","T","T","T",":i_c_moca_verb store staging location",37,1,"20210202172857","","SLIMP_I",""
"PROCESS_STORE_LOC_FLD","SL_IFD_SEG_PROC","MOCA","PROCESS STORE ADD/CHANGE","F","F","F","F","T","T","T",":i_c_moca_verb distribute to storage location field",51,1,"20210202172857","","SLIMP_I",""
"PROCESS_STORE_PUT_TO_LOC","SL_IFD_SEG_PROC","MOCA","PROCESS STORE ADD/CHANGE","F","F","F","F","T","T","T",":i_c_moca_verb distribute to storage location",45,1,"20210202172857","","SLIMP_I",""
"PROCESS_STORE_SCHED","SL_IFD_SEG_PROC","MOCA","PROCESS STORE ADD/CHANGE","F","F","F","F","T","T","T",":i_c_moca_verb store schedule",29,1,"20210202172857","","SLIMP_I",""
"PROCESS_SUP_PRT","SL_IFD_SEG_PROC","MOCA","Prcocss Supplier Item","F","F","F","F","T","T","T","{
if ( ':i_c_moca_verb' = 'remove' )
{
    [select count(*) cnt
       from sup_prt where supnum = :i_c_supnum
                  and client_id = :i_c_client_id
                  and prtnum = :i_c_prtnum
                  and prt_client_id = :i_c_prt_client_id]
    |
    if (@cnt>0)
        remove supplier part
                              where supnum = :i_c_supnum
             and client_id = :i_c_client_id
                                 and prtnum = :i_c_prtnum
                                 and prt_client_id = :i_c_prt_client_id
}
else
{
    :i_c_moca_verb supplier part where <<OVERSTACKED_ARGS>>
}
}
",616,5,"20210202172857","","SLIMP_I",""
"PROCESS_SUP_PRTFTP","SL_IFD_SEG_PROC","MOCA","Process Supplier Item Footprint","F","F","F","F","T","T","T","{
if ( ':i_c_moca_verb' = 'remove' )
{
    [select count(*) cnt
       from sup_prtftp where supnum = :i_c_supnum
                  and client_id = :i_c_client_id
                  and prtnum = :i_c_prtnum
                  and prt_client_id = :i_c_prt_client_id and ftpcod = :i_c_ftpcod]
    |
    if (@cnt>0)
        remove supplier part footprint
                              where supnum = :i_c_supnum
             and client_id = :i_c_client_id
                                 and prtnum = :i_c_prtnum
                                 and prt_client_id = :i_c_prt_client_id and ftpcod = :i_c_ftpcod
}
else
{
    :i_c_moca_verb supplier part footprint where <<OVERSTACKED_ARGS>>
}
}
",689,5,"20210202172857","","SLIMP_I",""
"PROCESS_SUPPLIER","SL_IFD_SEG_PROC","MOCA","Process Supplier Create or Change","F","F","F","F","T","T","T","process gs1 party where <<OVERSTACKED_ARGS>>",44,1,"20210202173339","","SLIMP_I",""
"PROCESS_TM_CAR_MOVE_NOTE_SEG","SL_IFD_SEG_PROC","MOCA","Process the Carrier Move Note segment on the TM Move Import transactions.","F","F","F","F","T","T","T","process tm carrier move note",28,1,"20210202172857","","SLIMP_I",""
"PROCESS_TM_CAR_MOVE_SEG","SL_IFD_SEG_PROC","MOCA","Process the Carrier Move segment on the TM Import transactions.","F","F","F","F","T","T","T",":i_c_moca_verb carrier move",27,1,"20210202172857","","SLIMP_I",""
"PROCESS_TM_CARRIER_MOVE_NOTE","SL_IFD_SEG_PROC","MOCA","Process TM Carrier Move Note","F","F","F","F","T","T","T","{ if ( ':i_c_moca_verb' = 'change' )
  {    remove tms carrier move note where <<OVERSTACKED_ARGS>>
       |
       create tms carrier move note where <<OVERSTACKED_ARGS>>
  }
  else if (':i_c_moca_verb' = 'create' )
  {
       :i_c_moca_verb tms carrier move note where <<OVERSTACKED_ARGS>>
  }
}",297,1,"20210202172857","","SLIMP_I",""
"PROCESS_TM_DIRECT_PREPARE","SL_IFD_PRE","MOCA","Prepare the shipments for updating by the TM LTL Direct Import","F","F","F","F","F","F","T","if (:i_c_imptype = 'U') {     [ select sh.ship_id         from shipment sh        where sh.tms_group_id = :i_c_groupid ] catch(-1403)     |     if (@? = 0)     {         [ update shipment_line              set edtflg = 0            where ship_id = @ship_id ] catch(-1403)     } }",279,1,"20210202172857","","SLIMP_I",""
"PROCESS_TM_LOAD_PREPARE","SL_IFD_PRE","MOCA","Prepare the shipment for update from the TM TL Load Import","F","F","F","F","F","F","T","if (:i_c_imptype = 'U')
{
    [select sh.ship_id
       from shipment sh,
            stop st,
            car_move cm
      where cm.car_move_id = st.car_move_id
        and st.stop_id = sh.stop_id
        and cm.tms_load_id = :i_c_loadid ] catch(-1403)
    |
    if (@? = 0)
    {
        [update shipment_line
            set edtflg = 0
          where ship_id = @ship_id ] catch(-1403)
    }
}",397,1,"20210202172857","","SLIMP_I",""
"PROCESS_TM_MOVE_CAR_SEG","SL_IFD_SEG_PROC","MOCA","Process the Carrier Move segment on the TM Move Import transactions.","F","F","F","F","T","T","T","process tm carrier move",23,1,"20210202172857","","SLIMP_I",""
"PROCESS_TM_MOVE_SHIP_LINE_SEG","SL_IFD_SEG_PROC","MOCA","Process the Shipment Line Move segment on the TM Move Import transactions.","F","F","F","F","T","T","T","process tm shipment line",24,1,"20210202172857","","SLIMP_I",""
"PROCESS_TM_MOVE_SHIP_SEG","SL_IFD_SEG_PROC","MOCA","Process the Shipment Move segment on the TM Move Import transactions.","F","F","F","F","T","T","T","process tm shipment segment",27,1,"20210202172858","","SLIMP_I",""
"PROCESS_TM_MOVE_STOP_SEG","SL_IFD_SEG_PROC","MOCA","Process the Stop Move segment on the TM Move Import transactions.","F","F","F","F","T","T","T","process tm stop",15,1,"20210202172858","","SLIMP_I",""
"PROCESS_TM_MOVE_TRLR_SEG","SL_IFD_SEG_PROC","MOCA","Process the Trailer Move segment on the TM Move Import transactions.","F","F","F","F","T","T","T","process tm trailer",18,1,"20210202172858","","SLIMP_I",""
"PROCESS_TM_ORDER_ASSIGN","SL_IFD_SEG_PROC","MOCA","Algorithm to process the TM Order Assignment","F","F","F","F","T","T","T","[ select distinct ordnum,          client_id,          ordlin,          ordsln     from ord_line    where tms_ordnum = :i_c_tms_ordnum ] catch(-1403) | if (@? = 0) {     [ select 1         from shipment_line        where ordnum = @ordnum          and client_id = @client_id          and ordlin = @ordlin          and ordsln = @ordsln ] catch(-1403)     |     if (@? = 0)     {         change order assignment          where <<OVERSTACKED_ARGS>>     }     else     {         assign order to shipment          where <<OVERSTACKED_ARGS>>     } }",542,1,"20210202172858","","SLIMP_I",""
"PROCESS_TM_SHIPMENT_DELETE","SL_IFD_SEG_PROC","MOCA","Delete the shipment for the TM Direct Import transaction","F","F","F","F","F","F","T","[ select ship_id     from shipment    where tms_group_id = :i_c_groupid ] catch(@?) | if (@? = 0) {     remove shipment      where ship_id = @ship_id }",151,1,"20210202172858","","SLIMP_I",""
"PROCESS_TM_SHIPMENT_SEG","SL_IFD_SEG_PROC","MOCA","Algorithm to process the shipments in the TM LTL Direct Import","F","F","F","F","T","T","T",":i_c_moca_verb shipment",23,1,"20210202172858","","SLIMP_I",""
"PROCESS_TM_STOP_SEG","SL_IFD_SEG_PROC","MOCA","Process the TM Stop Segment","F","F","F","F","T","T","T",":i_c_moca_verb stop",19,1,"20210202172858","","SLIMP_I",""
"PROCESS_TM_TRAFFIC_PLAN_DELETE","SL_IFD_SEG_PROC","MOCA","Remove the Traffic Plan.  Created for the TM TL Load Import Transaction","F","F","F","F","T","T","T","remove traffic plan",19,1,"20210202172858","","SLIMP_I",""
"PROCESS_TM_TRLR_SEG","SL_IFD_SEG_PROC","MOCA","Process the trailer segment on the TM Move Import transactions.","F","F","F","F","T","T","T","process tm trailer",18,1,"20210202172858","","SLIMP_I",""
"PROCESS_TMS_MOVE_UNPLAN","SL_PROC_IFD_ACTION","MOCA","This command will remove all the stuffs on the Carrier Move that TMS send to us","F","F","F","F","F","F","T","
{
    if ((:i_c_whse_id is not ) and (:i_c_whse_id <> ''))
    {
        process tms move unplan
          where car_move_id = :i_c_car_move_id
            and wh_id       = :i_c_whse_id
    }
    else
    {
        process tms move unplan
          where car_move_id = :i_c_car_move_id
    }
}",299,1,"20210202172858","","SLIMP_I",""
"PROCESS_TMS_RCPT_PREPARE","SL_IFD_PRE","MOCA","Prepare Receipt Lines For Refresh","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
publish data where client_id = :i_c_client_id
|
if (@client_id='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID' |
    [select @sysparmvalue client_id from dual ]
}
|
if(:i_c_trntyp = 'R' or :i_c_trntyp = 'C')
{
    [update rcvlin
        set edtflg = 0
      where trknum = :i_c_trknum
        and wh_id = @wh_id] catch(-1403)
    |
    preprocess host receipt asn
    where trntyp = :i_c_trntyp
       and trknum = :i_c_trknum
       and wh_id = @wh_id
}",518,1,"20210202172858","","SLIMP_I",""
"PROCESS_UC_PACKAGE_TYPE","SL_IFD_SEG_PROC","MOCA","Processing of the UC_PACKAGE_TYPE segment","F","F","F","F","F","T","F","/* Algorithm: PROCESS_UC_PACKAGE_TYPE */
publish data where <<OVERSTACKED_ARGS>>
/* NOTE: Table USR_PACKING_MAP has some other mandatory fields not yet defined in the interface, 
 * setting default values here 
 *
   and uc_stack = 0 
   and len = @uc_len
   and wid = @uc_wid
   and hgt = @uc_hgt
   and uc_hgt_dlt= @uc_hgt_dlt */
   and netwgt = 0
|
sl_process usr uc_package_type
|
create asset type where asset_cat='INV' and asset_typ=@UC_CODE and asset_hgt= @uc_hgt and asset_len=@uc_len  and  asset_wid=@uc_wid and lst_pck_asset_flg=1 and asset_wgt=@netwgt and max_vol= (@uc_len *  @uc_hgt * @uc_wid) and max_wgt=@netwgt and ser_flg=0 and temp_flg=0 and container_flg=0 and lngdsc=@UC_DESC catch (2966)
|
if (@?=2966)
{
change asset type where asset_cat='INV' and asset_typ=@UC_CODE and asset_hgt= @uc_hgt and asset_len=@uc_len  and  asset_wid=@uc_wid and lst_pck_asset_flg=1 and asset_wgt=@netwgt and max_vol= (@uc_len *  @uc_hgt * @uc_wid) and max_wgt=@netwgt and ser_flg=0 and temp_flg=0 and container_flg=0 and lngdsc=@UC_DESC catch (2966)

}

/*and alc_asset_grp='FUST'*/",1082,4,"20210216161557","","SLIMP",""
"PROCESS_UPDATE_PRTLOT_INVSTS","SL_IFD_SEG_PROC","MOCA","Process Host Inventory and Item Lot Update","F","F","F","F","T","T","T","execute integrator transaction
        where override_cmd = 'process inventory and item lot update'
          and validate_override_cmd = 'validate inventory and item lot update'
          and <<OVERSTACKED_ARGS>>",213,1,"20210202172858","","SLIMP_I",""
"PROCESS_WO_HDR_PART_REMQTY","SL_IFD_SEG_POST","MOCA","Reset WO Item To Be Produced Remaining Quantity","F","F","F","F","F","F","T","sl_dcs exec_command_at
where i_command =
"
update shpdtl
  set remqty=0
where
  shipid = :i_c_shipid
  and shpseq = :i_c_shpseq
  and subsid = :i_c_subsid
  and ordnum = :i_c_ordnum
  and ordlin = :i_c_ordlin
"",210,1,"20210202172858","","SLIMP_I",""
"REMOVE_CUST_TYPE_PROFILE","SL_IFD_SEG_PROC","MOCA","Remove Customer Type Profile","F","F","F","F","F","F","T","[select count(*) cnt
    from csttyp_pfl
       where csttyp = :i_c_csttyp]
|
if (@cnt >0)
    remove customer type profile
       where csttyp = :i_c_csttyp
",158,1,"20210202172858","","SLIMP_I",""
"REMOVE_DCS50_CARRIER","SL_IFD_SEG_PROC","MOCA","Remove Carrier Service","F","F","F","F","T","T","T","{ [select count(*) cnt from cardtl where carcod = :i_c_carcod  and srvlvl = :i_c_srvlvl ] | if (@cnt >0)  Process Host Carrier Detail where <<OVERSTACKED_ARGS>>  | [select count(*) cnt from carhdr where carcod = :i_c_carcod  ] | if (@cnt >0 ) {  [select count(*) cnt from cardtl where carcod = :i_c_carcod]    |   if (@cnt = 0)       remove carrier where carcod = :i_c_carcod } }",379,1,"20210202172858","","SLIMP_I",""
"REMOVE_DCS50_RA","SL_IFD_SEG_PROC","MOCA","Remove RA","F","F","F","F","F","T","T","get warehouse id where wh_id = :i_c_whse_id
|
[select count(*) cnt
    from rimhdr where
    supnum = :i_c_supnum
    and invnum = :i_c_invnum
    and client_id = :i_c_client_id
        and wh_id = @wh_id ]
|
if (@cnt >0)
    process host receive invoice master where <<OVERSTACKED_ARGS>>",288,1,"20210202172858","","SLIMP_I",""
"REMOVE_DCS50_SHIPORD","SL_IFD_SEG_PROC","MOCA","Remove Shipment Order","F","F","F","F","T","T","T","{
save session variable where name = 'order_change_from_host' 
                            and value = 'T'  
|
[select count(*) cnt
   from shipment
  where host_client_id = :i_c_client_id
    and host_ext_id = :i_c_host_ship_id
]
|
if (@cnt >0)
{
    
    Process Host SHPORD Shipment where <<OVERSTACKED_ARGS>>
}
}",316,1,"20210202172858","","SLIMP_I",""
"REMOVE_DCS50_WO","SL_IFD_SEG_PROC","MOCA","Remove Work Order","F","F","F","F","F","T","T","get warehouse id where wh_id = :i_c_whse_id
|
execute integrator transaction
  where moca_verb = 'remove' and resource = 'work order' and wkonum = :i_c_wkonum
    and wkorev = :i_c_wkorev and client_id = :i_c_client_id and wh_id = @wh_id and <<OVERSTACKED_ARGS>>",262,1,"20210202172858","","SLIMP_I",""
"REMOVE_DCS51_BOM","SL_IFD_SEG_PROC","MOCA","Remove Bill of Materials","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
[select count(*) cnt
    from bomhdr
       where bomnum = :i_c_bomnum
     and client_id = :i_c_client_id
         and wh_id = @wh_id]
|
if (@cnt >0)
    remove bom header
       where bomnum = :i_c_bomnum
     and client_id = :i_c_client_id
         and wh_id = @wh_id
|
[select count(*) cnt1
    from bomdtl
       where bomnum = :i_c_bomnum
     and client_id = :i_c_client_id
         and wh_id = @wh_id]
|
if (@cnt1 >0)
    remove bom detail
       where bomnum = :i_c_bomnum
     and client_id = :i_c_client_id
         and wh_id = @wh_id",591,1,"20210202172858","","SLIMP_I",""
"REMOVE_DCS51_WO","SL_IFD_SEG_PROC","MOCA","Remove Work Order","F","F","F","F","F","F","T","[select count(*) cnt
    from wkohdr where
    wkonum = :i_c_wkonum
    and wkorev = :i_c_wkorev
    and client_id = :i_c_client_id ]
|
if (@cnt >0)
    remove work order
    where wkonum = :i_c_wkonum
    and wkorev = :i_c_wkorev
    and client_id = :i_c_client_id",265,1,"20210202172858","","SLIMP_I",""
"REMOVE_DCS61_APPT","SL_IFD_SEG_PROC","MOCA","Remove Appointment","F","F","F","F","F","T","T","save session variable 
        where name = 'appointment_change_from_TM' 
          and value = 'T'
|
get warehouse id where wh_id = :i_c_whse_id
|
[select count(*) cnt
    from appt where
    appt_id = :i_c_appt_id]
|
if (@cnt >0)
{
    execute integrator transaction where <<OVERSTACKED_ARGS>> and
        resource = 'appointment' and moca_verb = 'remove' and appt_id = :i_c_appt_id
}
else
{
    get inbound full validation flag where <<OVERSTACKED_ARGS>>
    |
    if (@inb_full_vld_flg)
    {
        if (!@appt_id and !@ext_appt_id)
        {
        log full validation error message where err_code = 802
            and argid = 'appt_id'
            and lookup_argdsc = 'appt_id'
        }
        else
        {
            [select appt_id
               from appt
              where @+appt_id
                and @+ext_appt_id] catch(-1403)
            |
            if (@? = -1403) {
                log full validation error message where err_code = 2003
                    and argval = nvl(@appt_id, @ext_appt_id)
                    and lookup_argdsc = 'appt_id'
            }
        }
    }
}",1109,1,"20210202172858","","SLIMP_I",""
"REMOVE_INVSTS_PRG","SL_IFD_SEG_PROC","MOCA","Remove Inventory Status Progression","F","F","F","F","F","F","T","[select count(*) cnt
    from prgmst
       where invsts_prg = :i_c_invsts_prg
         and invsts = :i_c_invsts]
|
if (@cnt >0)
    remove inventory status progression detail
       where invsts_prg = :i_c_invsts_prg
         and invsts = :i_c_invsts",251,1,"20210202172858","","SLIMP_I",""
"REMOVE_ITEM_VELOCITY","SL_IFD_SEG_PROC","MOCA","Delete Item Velocity Record","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
publish data where wh_id = @wh_id and velocity_id = :i_c_velocity_id
                     and item_num = :i_c_prtnum and client_id = :i_c_prt_client_id
                     and velocity_type = :i_c_velocity_type and plan_date = :i_c_plan_date
                     and ordnum = :i_c_ordnum and uomcod = :i_c_uomcod
                     and ordtyp = :i_c_ordtyp and invsts = :i_c_invsts
|
if (@client_id ='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    publish data where client_id = @sysparmvalue
}
|
if (@velocity_id != '' )
{
    [select count(*) cnt
       from item_velocity
     where velocity_id = @velocity_id]
    |
    if (@cnt >0)
    {
        remove item velocity
          where velocity_id = @velocity_id
    }
}
else
{
    [select count(*) cnt
       from item_velocity
     where item_num  = @item_num
        and client_id = @client_id
        and velocity_type = @velocity_type
        and plan_date = @plan_date
        and wh_id = @wh_id
        and @+ordnum
        and @+uomcod
        and @+ordtyp
        and @+invsts]
    |
    if (@cnt >0)
    {
        remove item velocity
          where item_num  = @item_num
             and client_id = @client_id
             and velocity_type = @velocity_type
             and plan_date = @plan_date
             and wh_id = @wh_id
             and @+ordnum
             and @+uomcod
             and @+ordtyp
             and @+invsts
    }
}",1483,1,"20210202172858","","SLIMP_I",""
"REMOVE_PART_FOOTPRINT","SL_IFD_SEG_PROC","MOCA","Remove Item Footprint","F","F","F","F","T","T","T","
/* When we delete a part footprint for one warehouse we need to delete it for the mentioned warehouse*/
publish data where wh_id = :i_c_whse_id
|
execute integrator transaction
        where moca_verb = 'remove'
          and resource = 'part footprint'
          and <<OVERSTACKED_ARGS>>",289,1,"20210202172858","","SLIMP_I",""
"REMOVE_PART_LOT","SL_IFD_SEG_PROC","MOCA","Remove Part Lot","F","F","F","F","F","T","T","execute integrator transaction
        where moca_verb = 'remove'
          and resource = 'part lot'
          and <<OVERSTACKED_ARGS>>",136,1,"20210202172858","","SLIMP_I",""
"REMOVE_RETURNS","SL_IFD_SEG_PROC","MOCA","Remove Returns Header/Detail","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
[            select count(*) cnt
    from rethdr
            where rmanum = :i_c_rmanum
               and wh_id     = @wh_id]
|
if (@cnt >0)
{
    remove return header
                where rmanum            = :i_c_rmanum
                   and wh_id                = @wh_id
                   and purge_customer = '1'
}",367,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_ALLOC_RULE_DTL","SL_RETR_MTHD_IMPL","MOCA","Retrieve allocation rule details","F","F","F","F","F","F","T","list allocation rule details where rule_nam = :i_c_rule_nam and wh_id = :i_c_wh_id",82,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_ALLOC_RULE_HDR","SL_RETR_MTHD_IMPL","MOCA","Retrieve allocation rule header information","F","F","F","F","F","F","T","list allocation rule headers where rule_nam= :i_c_rule_nam and wh_id = :i_c_wh_id",81,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_INV_STATUS_CHNG","SL_RETR_MTHD_IMPL","MOCA","Retrieve Inventory Status Change","T","T","F","T","F","T","T","retrieve inventory status change",32,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_INVENTORY_ADJUST","SL_RETR_MTHD_IMPL","MOCA","Retrieve Inventory Adjustment","T","T","F","T","F","T","T","retrieve inventory adjustment",29,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_INVENTORY_RECON","SL_RETR_MTHD_IMPL","MOCA","Retrieve Inventory Reconciliation","F","F","F","F","F","F","T","if (:i_c_prt_client_id != '')
{
     retrieve inventory reconciliation
         where prt_client_id = :i_c_prt_client_id
 }
 else
 {
     retrieve inventory reconciliation
 }
 |
 get translated warehouse ID
 |
 publish data where arecod = @arecod
       and hstacc= @hstacc
       and prtnum = @prtnum
       and prt_client_id = @prt_client_id
       and invsts = @invsts
       and hld_flg = @hld_flg
       and lotnum = @lotnum
       and sup_lotnum = @sup_lotnum
       and orqcod = @orqcod
       and revlvl = @revlvl
       and stkuom = @stkuom
       and untqty = @untqty
       and catch_qty = @catch_qty
       and catch_unttyp = @catch_unttyp
       and wh_id = @trans_wh_id
       and mandte = @mandte
       and expire_dte = @expire_dte
       and inv_attr_str1 = @inv_attr_str1
       and inv_attr_str2 = @inv_attr_str2
       and inv_attr_str3 = @inv_attr_str3
       and inv_attr_str4 = @inv_attr_str4
       and inv_attr_str5 = @inv_attr_str5
       and inv_attr_str6 = @inv_attr_str6
       and inv_attr_str7 = @inv_attr_str7
       and inv_attr_str8 = @inv_attr_str8
       and inv_attr_str9 = @inv_attr_str9
       and inv_attr_str10 = @inv_attr_str10
       and inv_attr_str11 = @inv_attr_str11
       and inv_attr_str12 = @inv_attr_str12
       and inv_attr_str13 = @inv_attr_str13
       and inv_attr_str14 = @inv_attr_str14
       and inv_attr_str15 = @inv_attr_str15
       and inv_attr_str16 = @inv_attr_str16
       and inv_attr_str17 = @inv_attr_str17
       and inv_attr_str18 = @inv_attr_str18
       and inv_attr_int1 = @inv_attr_int1
       and inv_attr_int2 = @inv_attr_int2
       and inv_attr_int3 = @inv_attr_int3
       and inv_attr_int4 = @inv_attr_int4
       and inv_attr_int5 = @inv_attr_int5
       and inv_attr_flt1 = @inv_attr_flt1
       and inv_attr_flt2 = @inv_attr_flt2
       and inv_attr_flt3 = @inv_attr_flt3
       and inv_attr_dte1 = @inv_attr_dte1
       and inv_attr_dte2 = @inv_attr_dte2
       and cstms_cnsgnmnt_id = @cstms_cnsgnmnt_id
       and rttn_id           = @rttn_id
       and cstms_bond_flg    = @cstms_bond_flg
       and dty_stmp_flg      = @dty_stmp_flg
       and lot_sts = @lot_sts
",2154,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_LENS_ORD_SYNC","SL_RETR_MTHD_IMPL","MOCA","Retrieve LENS Order Sync","T","T","F","T","F","F","T","[
select prtnum prtnum,
        nvl(prt_client_id,'----') prt_client_id,
        nvl(orgcod,'----') orgcod,
        nvl(revlvl,'----') revlvl,
        nvl(lotnum,'----') lotnum,
        invsts invsts,
        (ol.ordqty - ol.shpqty) ordqty
from    ord_line ol
group by ol.prtnum,
         ol.prt_client_id,
         ol.orgcod,
         ol.revlvl,
         ol.invsts,
         ol.lotnum
]
|
publish data
where
      prtnum=@prtnum
and   prt_client_id =@prt_client_id
and   orgcod=@orgcod
and   revlvl=@revlvl
and   lotnum=@lotnum
and   invsts=@invsts
and   ordqty=@ordqty",570,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_RETURNS_SERIAL_NUM","SL_RETR_MTHD_IMPL","MOCA","retrieve serial number for returns","F","F","F","F","F","F","T","[select dtlnum from invdtl , retdtl where retdtl.rcvkey = invdtl.rcvkey and retdtl.rmanum = :i_c_rmanum and retdtl.lin_num = :i_c_lin_num and retdtl.wh_id = :i_c_wh_id and retdtl.seqnum = :i_c_seqnum]
|
publish data where dtlnum = @dtlnum
|
list inventory serial numbers rm
where dtlnum = @dtlnum catch(-1403)",309,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_SHIPMENT_ORDER","SHIPPING","MOCA","This will retrieve shipment order information","F","F","F","F","F","F","T","list shipment orders rm
    where wh_id = :i_c_wh_id
        and trlr_id = :i_c_trailer_id",90,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_SHIPMENT_TRUCK","SHIPPING","MOCA","Retrieve Truck Information","F","F","F","F","F","F","T","list shipment trucks rm
    where wh_id = :i_c_wh_id
        and trlr_id = :i_c_trailer_id",90,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_WAREHOUSES","SHIPPING","MOCA","Retrieve the warehouse information for the trailer.","F","F","F","F","F","F","T","list destination warehouses rm
    where trlr_id = :i_c_trailer_id",66,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_WH_INTRANSIT_SYNC","SL_RETR_MTHD_IMPL","MOCA","Retrieve In-Transit Reconciliation for a Digital Supplier Warehouse","T","T","F","T","F","F","T","list lens intransit inventory sync rm where wh_id = :i_c_wh_id
",63,1,"20210202172858","","SLIMP_I",""
"RETRIEVE_WH_SYNC","SL_RETR_MTHD_IMPL","MOCA","Retrieve LENS Sync for a Digital Supplier warehouse","T","T","F","T","F","F","T","list lens inventory sync rm where wh_id = :i_c_wh_id
",53,1,"20210202172858","","SLIMP_I",""
"RETRIVE_TMS_FLG","SL_RETR_MTHD_IMPL","MOCA","Retrive tms flag","F","F","F","F","F","F","F","[select count(ord.requir_tms_flg) res_cnt
      from ord
    join shipment_line      
      on
    shipment_line.ordnum = ord.ordnum  
    where shipment_line.ship_id = @ship_id
        and ord.requir_tms_flg = 1] catch(-1403)
 |
 if( @res_cnt = 0)
 {
     publish data
         where REQUIRE_TMS_FLG = 'false'
 }
 else
 {
     publish data
         where REQUIRE_TMS_FLG = 'true'
  }",384,1,"20210202173359","","SLIMP_I",""
"RPS_O_XML_MEM_ADD","SL_COMM","MOCA","Add current IFD to the IFD XML context","F","F","F","F","F","F","T","sl_send ifd_data_mem_xml_add
where alg_context = :I_V_ALG_CONTEXT
  and head_evt_id = :I_C_HEAD_EVT_ID
  and num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
  and parent_tag = :I_C_PARENT_TAG
  and put_nochg_absent_data = :I_C_PUT_NOCHG_ABSENT_DATA
  and xml_encoding = :I_C_XML_ENCODING
  and xml_version = :I_C_XML_VERSION
  and show_ifd_tag = :I_C_SHOW_IFD_TAG
  and ifd_data_seq = :I_N_IFD_DATA_SEQ
  and ifd_data_ptr = :I_C_IFD_DATA_PTR",444,1,"20210202172858","","SLIMP_I",""
"RPS_O_XML_MEM_FILE","SL_COMM","MOCA","Convert IFD to XML and create a file. Cutomized for RPS system to rename the trigger file so that RPS system can start processing.","F","F","F","F","F","F","T","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      sl_get dir_sep
      |
      publish data
      where full_file_name = decode(:I_C_DIRECTORY || 'X',
                'X', :I_C_FILENAME,
                :I_C_DIRECTORY || @dir_sep || :I_C_FILENAME)
      |
      /* Now resolve the environment variables if any */
      sl_resolve string_from_env where i_string = @full_file_name
      |
      publish data where full_file_name = @o_value
      |
      /* Set the communication comment */
      sl_set comm_cmnt where comm_cmnt = @full_file_name
      |
      sl_send ifd_data_mem_xml_get_ctxt where alg_context = :I_V_ALG_CONTEXT
      |
      get xml
      |
      if(nvl(:i_c_Encrypt_RPBF,'F') = 'F')
      {
         write output file
         where filename = @full_file_name
           and data = @mxml_xml
         |
         get extension from filename
       where file_name = :I_C_FILENAME
         |
         if (@file_ext = 'flag')
         {
             move file
              where from  = decode(:I_C_DIRECTORY || 'X',
                                               'X', :I_C_FILENAME,
                                               :I_C_DIRECTORY || @dir_sep || :I_C_FILENAME)
                 and to      = decode(:I_C_DIRECTORY || 'X',
                                               'X', @file_name || '.done',
                                               :I_C_DIRECTORY || @dir_sep || @file_name || '.done')
         }
      }
      else
      {
         encrypt data using RPBF where
            data_ptr =  and data_len =  and data=@mxml_xml
            and block_size = :i_n_block_size
         |
         convert binary column to pointer where column = 'encrypted_data'
         |
         write output file where
            filename = @full_file_name and data_ptr = @result_ptr
            and data_len = @result_len and data = 
         |
         get extension from filename
       where file_name = :I_C_FILENAME
         |
         if (@file_ext = 'flag')
         {
             move file
              where from  = decode(:I_C_DIRECTORY || 'X',
                                               'X', :I_C_FILENAME,
                                               :I_C_DIRECTORY || @dir_sep || :I_C_FILENAME)
                 and to      = decode(:I_C_DIRECTORY || 'X',
                                               'X', @file_name || '.done',
                                               :I_C_DIRECTORY || @dir_sep || @file_name || '.done')
         }
      }
      |
      if( :I_C_TRGFILE || 'X' != 'X')
      {
         publish data where full_trg_file_name = decode(:I_C_TRGDIR || 'X',
               'X', :I_C_TRGFILE,
               :I_C_TRGDIR || @dir_sep || :I_C_TRGFILE)
         |
         sl_resolve string_from_env
         where i_string = @full_trg_file_name
         |
         write output file
         where filnam = @o_value
           and data = 'Trigger file for ' || @full_file_name
         |
         get extension from filename
       where file_name = :I_C_TRGFILE
         |
         if (@file_ext = 'flag')
         {
             move file
              where from  = decode(:I_C_DIRECTORY || 'X',
                                               'X', :I_C_TRGFILE,
                                               :I_C_DIRECTORY || @dir_sep || :I_C_TRGFILE)
                 and to      = decode(:I_C_DIRECTORY || 'X',
                                               'X', @file_name || '.done',
                                               :I_C_DIRECTORY || @dir_sep || @file_name || '.done')
         }
      }
   }
}
finally
{
   sl_send ifd_data_mem_xml_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",3763,1,"20210202172858","","SLIMP_I",""
"RPS_O_XML_MEM_INIT","SL_COMM","MOCA","Initialize IFD XML context","F","F","F","F","F","F","T","sl_send ifd_data_mem_xml_init
where alg_context = :I_V_ALG_CONTEXT
  and xml_encoding = :I_C_XML_ENCODING
  and xml_version = :I_C_XML_VERSION",142,1,"20210202172858","","SLIMP_I",""
"SAL_VOC_PRC_CYCLE_COUNT_ALG","SL_IFD_SEG_PROC","MOCA","SAL Voice Process cycle count","F","F","F","F","F","F","F","{
    if ( :i_c_terminal = 'ERROR' )
    {      
        set return status where status=10000 and message = 'Testing for error situation'
    }
    else
    {
        publish data 
         where terminal = :i_c_terminal 
            and operator = :i_c_operator
            and loc_num = :i_c_loc_num 
            and item_number = :i_c_item_number 
            and quantity = :i_n_quantity 
            and uom = :i_c_uom 
            and wrkref = :i_c_wrkref 
            and catch_weight = :i_c_catch_weight
			and lpn = :i_c_lpn
			and lot = :i_c_lot
			and revlvl = :i_c_revlvl
			and orgcod = :i_c_orgcod
			and suplot = :i_c_suplot
			and summaryFlg = :i_n_summaryFlg
            and residuals = :i_n_residuals 
            and status = :i_n_status
            and countLpn = :i_n_countLpn
			and INVATTRSTR1  = :i_c_INVATTRSTR1
			and INVATTRSTR2  = :i_c_INVATTRSTR2
			and INVATTRSTR3  = :i_c_INVATTRSTR3
			and INVATTRSTR4  = :i_c_INVATTRSTR4
			and INVATTRSTR5  = :i_c_INVATTRSTR5
			and INVATTRSTR6  = :i_c_INVATTRSTR6
			and INVATTRSTR7  = :i_c_INVATTRSTR7
			and INVATTRSTR8  = :i_c_INVATTRSTR8
			and INVATTRSTR9  = :i_c_INVATTRSTR9
			and INVATTRSTR10 = :i_c_INVATTRSTR10
			and INVATTRSTR11 = :i_c_INVATTRSTR11
			and INVATTRSTR12 = :i_c_INVATTRSTR12
			and INVATTRSTR13 = :i_c_INVATTRSTR13
			and INVATTRSTR14 = :i_c_INVATTRSTR14
			and INVATTRSTR15 = :i_c_INVATTRSTR15
			and INVATTRSTR16 = :i_c_INVATTRSTR16
			and INVATTRSTR17 = :i_c_INVATTRSTR17
			and INVATTRSTR18 = :i_c_INVATTRSTR18
			and INVATTRINT1  = :i_n_INVATTRINT1
			and INVATTRINT2  = :i_n_INVATTRINT2
			and INVATTRINT3  = :i_n_INVATTRINT3
			and INVATTRINT4  = :i_n_INVATTRINT4
			and INVATTRINT5  = :i_n_INVATTRINT5
			and INVATTRFLT1  = :i_n_INVATTRFLT1
			and INVATTRFLT2  = :i_n_INVATTRFLT2
			and INVATTRFLT3  = :i_n_INVATTRFLT3
			and INVATTRDTE1  = :i_c_INVATTRDTE1
            and INVATTRDTE2  = :i_c_INVATTRDTE2			     
        |
        process voice debug command where command = '
                             process voice cycle count
                                where terminal = @terminal
                                   and operator = @operator
                                   and loc_num = @loc_num
                                   and item_number = @item_number
                                   and quantity = @quantity
                                   and uom = @uom
                                   and wrkref = @wrkref
                                   and catch_weight = @catch_weight
								   and lpn = @lpn
								   and lot = @lot
								   and revlvl = @revlvl
								   and orgcod = @orgcod
								   and suplot = @suplot
								   and summaryFlg = @summaryFlg
                                   and residuals = @residuals
                                   and status = @status
                                   and countLpn = @countLpn
								   and INVATTRSTR1  = @INVATTRSTR1 
								   and INVATTRSTR2  = @INVATTRSTR2 
								   and INVATTRSTR3  = @INVATTRSTR3
								   and INVATTRSTR4  = @INVATTRSTR4
								   and INVATTRSTR5  = @INVATTRSTR5
								   and INVATTRSTR6  = @INVATTRSTR6
								   and INVATTRSTR7  = @INVATTRSTR7
								   and INVATTRSTR8  = @INVATTRSTR8
								   and INVATTRSTR9  = @INVATTRSTR9
								   and INVATTRSTR10 = @INVATTRSTR10
								   and INVATTRSTR11 = @INVATTRSTR11
								   and INVATTRSTR12 = @INVATTRSTR12
								   and INVATTRSTR13 = @INVATTRSTR13
								   and INVATTRSTR14 = @INVATTRSTR14
								   and INVATTRSTR15 = @INVATTRSTR15
								   and INVATTRSTR16 = @INVATTRSTR16
								   and INVATTRSTR17 = @INVATTRSTR17
								   and INVATTRSTR18 = @INVATTRSTR18
								   and INVATTRINT1  = @INVATTRINT1
								   and INVATTRINT2  = @INVATTRINT2
								   and INVATTRINT3  = @INVATTRINT3
								   and INVATTRINT4  = @INVATTRINT4
								   and INVATTRINT5  = @INVATTRINT5
								   and INVATTRFLT1  = @INVATTRFLT1
								   and INVATTRFLT2  = @INVATTRFLT2
								   and INVATTRFLT3  = @INVATTRFLT3
								   and INVATTRDTE1  = @INVATTRDTE1
								   and INVATTRDTE2  = @INVATTRDTE2'
   }
}catch(@?)
|if ( @? != 0 )
{
   publish data where error_code = @? and error_descr=@!
}
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",4285,1,"20210202172237","","SLIMP_I",""
"SAL_VOI_END_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice End Assignment","F","F","F","F","F","F","","{
    if(:i_c_terminal = 'ERROR')
    {
        set return status where status=10000
          and message = 'Testing for error situation'
    }
    else
    {
        publish data where terminal = :i_c_terminal
          and operator = :i_c_operator
        |
        process voice debug command where command = 'end voice assignment where terminal = @terminal and operator = @operator'
    }
} catch(@?)
|
if ( @? != 0 )
    publish data where error_code = @? and error_descr=@!
else
    filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",580,1,"20210202171543","","SLIMP_I",""
"SAL_VOI_GET_ALT_PUT_LOC_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_GET_ALT_PUT_LOC_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and function_number = :i_n_function_number
                      and license_rpl_number = :i_c_license_rpl_number
                      and loc_num =:i_c_loc_num
                      and remqty = :i_n_remqty
       |
       process voice debug command where command = 'get voice alt put loc
                 where terminal = @terminal
                      and operator = @operator
                      and function_number = @function_number
                      and license_rpl_number = @license_rpl_number
                      and loc_num = @loc_num
                      and remqty = @remqty'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",991,1,"20210202171552","","SLIMP_I",""
"SAL_VOI_GET_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Assignment","F","F","F","F","F","F","","{
    if(:i_c_terminal = 'ERROR')
    {
        set return status where status=10000
          and message = 'Testing for error situation'
    }
    else
    {
        publish data where terminal = :i_c_terminal
          and operator = :i_c_operator
          and building_id = :i_c_building_id
          and work_zone_id = :i_c_work_zone_id
          and aisle_id = :i_c_aisle_id
          and request_next_list = :i_c_request_next_list
          and refresh_assignments = :i_c_refresh_assignments
          and retry_flg = :i_c_retry_flg
        |
        process voice debug command where command = 'get voice assignment where terminal = @terminal and operator = @operator and bldg_id = @building_id and wrkzon = @work_zone_id and aisle_id = @aisle_id and request_next_list = @request_next_list and refresh_assignments = @refresh_assignments and retry_flg = @retry_flg'
    }
} catch(@?)
|
if ( @? = -54 )
    publish data where error_code = 5
else if ( @? != 0 )
    publish data where error_code = @? and error_descr=@!
else
    filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",1125,1,"20210202171601","","SLIMP_I",""
"SAL_VOI_GET_ATTR_VALUES_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Attribute Values","F","F","F","F","F","F","","{
    if(:i_c_terminal = 'ERROR')
    {
        set return status where status=10000
          and message = 'Testing for error situation'
    }
    else
    {
        publish data
        where terminal = :i_c_terminal
          and operator = :i_c_operator
          and wrkref = :i_c_wrkref
          and stoloc = :i_c_stoloc
          and enabled_attr_list = :i_c_enabled_attr_list
        |
        process voice debug command where command = 'list voice available inventory for pick in location
                  where terminal = @terminal
                    and operator = @operator
                    and wrkref = @wrkref
                    and stoloc = @stoloc
                    and enabled_attr_list = @enabled_attr_list'
    }
} catch(@?)
|
if ( @? != 0 )
    publish data where error_code = @? and error_descr=@!
else
    filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",929,1,"20210202171616","","SLIMP_I",""
"SAL_VOI_GET_CONFIG_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Configuration","F","F","F","F","F","F","","{
    if ( :i_c_terminal = 'ERROR' )
    {
        set return status where status=10000 and message = 'Testing for error situation'
    }
    else
    {
        publish data
          where terminal = :i_c_terminal
            and lang_cd = :i_c_lang_cd
            and operator = :i_c_operator
        |
        process voice debug command where command = 'get voice configuration where terminal = @terminal and lang_cd = @lang_cd and operator = @operator' 
    }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",591,1,"20210202171630","","SLIMP_I",""
"SAL_VOI_GET_CYC_CNT_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Get Cycle Count Assignment","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
   {
      set return status where status=10000 and message = 'Testing for error situation'
   }
   else
   {
      publish data 
         where terminal = :i_c_terminal 
            and operator = :i_c_operator 
            and wrkref = :i_c_wrkref
            and scanned = :i_n_scanned
            and loc_num = :i_c_loc_num
            and check_digit = :i_c_check_digit
      |
      process voice debug command where command = 'get voice cycle count assignment
                                                                                      where terminal = @terminal 
                                                                                         and operator = @operator 
                                                                                         and wrkref = @wrkref
                                                                                         and scanned = @scanned
                                                                                         and loc_num = @loc_num
                                                                                         and loc_chk = @check_digit'
   }
}
catch(@?)
|
if ( @? = -54)
   publish data where error_code = 5
else if ( @? != 0 )
{
   publish data where error_code = @? and error_descr=@!
}
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",1433,1,"20210202171704","","SLIMP_I",""
"SAL_VOI_GET_CYCCNT_LOC_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Get Cycle Count Location","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'get voice cycle count location
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",553,1,"20210202171639","","SLIMP_I",""
"SAL_VOI_GET_CYCCNT_MODE_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Get Cycle Count Mode","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'process voice cycle count mode
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",553,1,"20210202171647","","SLIMP_I",""
"SAL_VOI_GET_CYCCNT_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","Get Voice Valid Cycle Counting Regions","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'list voice cnt regions
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",545,1,"20210202171655","","SLIMP_I",""
"SAL_VOI_GET_DEP_LOC_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Deposit Location","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal and operator = :i_c_operator and set_down = :i_n_set_down
       |
       process voice debug command where command = 'get voice deposit location where terminal = @terminal and operator = @operator and set_down = @set_down'
   }
}
catch(@?)
|
if ( @? = -54 )
   publish data where error_code = 5
else if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_desc = nvl(@error_descr, '')",657,1,"20210202171713","","SLIMP_I",""
"SAL_VOI_GET_DISCR_TYP_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Discrepancy Types","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal and operator = :i_c_operator
       |
       process voice debug command where command = 'list voice code descriptions where terminal = @terminal and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",490,1,"20210202171723","","SLIMP_I",""
"SAL_VOI_GET_GOAL_TIME_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Goal Time","F","F","F","F","F","F","","{
   if (:i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator
                      and wrkref = :i_c_assignment_id
       |
       process voice debug command where command = 'get voice assignment goal time where terminal = @terminal and operator = @operator and wrkref = @wrkref'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = @error_code",599,1,"20210202171732","","SLIMP_I",""
"SAL_VOI_GET_INV_ATTR_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Get Loading Assignment","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
      publish data 
         where terminal = :i_c_terminal 
            and operator = :i_c_operator 
            and license = :i_c_license
            and put_id = :i_c_put_id
      |
      process voice debug command where command = 'list mixed inventory attributes
                                                                                  where terminal = @terminal
                                                                                     and operator = @operator
                                                                                     and license = @license
                                                                                     and put_id = @put_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",971,1,"20210202171935","","SLIMP_I",""
"SAL_VOI_GET_LDG_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","Voice Get Loading Assignment Algorithm Definition","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
      publish data
          where terminal = :i_c_terminal
            and operator = :i_c_operator
            and spoken_code = :i_c_spoken_code
      |
      process voice debug command
          where command = 'get voice ldg assignment
                               where terminal = @terminal
                                 and operator = @operator
                                 and spoken_code = @spoken_code'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",690,1,"20210202171740","","SLIMP_I",""
"SAL_VOI_GET_LDG_LICENSE_ALG","SL_RETR_MTHD_IMPL","MOCA","Sal Voice - Loading get license algorithm","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                             and operator = :i_c_operator
                             and license = :i_c_license
                             and partial = :i_n_partial
       |
       process voice debug command where command = 'get voice loading license
                         where terminal = @terminal
                             and operator = @operator
                             and license = @license
                             and partial = @partial'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",786,1,"20210202171748","","SLIMP_I",""
"SAL_VOI_GET_LDG_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Loading Region","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
       |
       process voice debug command where command = 'list voice ldg regions
                 where terminal = @terminal 
                    and operator = @operator' 
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",547,1,"20210202171755","","SLIMP_I",""
"SAL_VOI_GET_LDG_STATUS_ALG","SL_RETR_MTHD_IMPL","MOCA","Sal Voice - Loading get status algorithm","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                            and operator = :i_c_operator
                            and car_move_id = :i_c_car_move_id
       |
       process voice debug command where command = 'get voice ldg status
                         where terminal = @terminal
                            and operator = @operator
                            and car_move_id = @car_move_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",685,1,"20210202171804","","SLIMP_I",""
"SAL_VOI_GET_PA_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","Get Put Away Region information","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'list voice pa regions
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",544,1,"20210202171812","","SLIMP_I",""
"SAL_VOI_GET_PCK_REM_ALG","SL_RETR_MTHD_IMPL","MOCA","Get Remaining Picks","F","F","F","F","F","F","","
publish data
  where terminal = :i_c_terminal
    and operator = :i_c_operator
    and assign_id = :i_c_assign_id
    and location = :i_c_location
    and tran_id = :i_c_tran_id
    and dt = :i_c_dt
|
{
    if ( @terminal = 'ERROR' )
    {
        set return status where status=10000 
            and message = 'Testing for error situation'
    }
    else
    {
        process voice debug command
          where command = 'get voice remaining work
                              where terminal = @terminal
                                and operator = @operator
                                and assign_id = @assign_id
                                and location = @location
                                and tran_id = @tran_id
                                and dt = @dt'
    }
} catch(@?)
|
if ( @? != 0 )
    publish data where error_code = @? 
        and error_descr=@!
else
    filter data where error_code = 0",926,1,"20210202171820","","SLIMP_I",""
"SAL_VOI_GET_PERF_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Performance","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'get voice performance where terminal = @terminal and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",506,1,"20210202171828","","SLIMP_I",""
"SAL_VOI_GET_PICKS_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Picks","F","F","F","F","F","T","","sl_list ifd_data_fld where ifd_data_dtl_seq = 0
|
{
    if ( @terminal = 'ERROR' )
        set return status where status=10000 and message = 'Testing for error situation'
    else
    {
        publish data 
          where terminal = :i_c_terminal
            and operator = :i_c_operator
            and fetch_updates = :i_n_fetch_updates
        |
        process voice debug command
          where command = 'get voice picks
                              where terminal = @terminal
                                and operator = @operator
                                and assign_id = @assign_id
                                and work_id = @work_id
                                and go_back_for_shorts = @go_back_for_shorts
                                and work_req_id = @work_req_id
                                and pass_assignment = @pass_assignment
                                and fetch_updates = @fetch_updates'
    }
}
catch(@?)
|
/* We catch concurrency errors and tell the device an issue occurred and to handle retrying the transaction. */
if ( @? = -54 or @? = -60 )
   publish data where error_code = 5
else if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",1310,1,"20210202171836","","SLIMP_I",""
"SAL_VOI_GET_PRINTERS_ALG","SL_RETR_MTHD_IMPL","MOCA","Get Voice Printers","F","F","F","F","F","F","","publish data where terminal = :i_c_terminal
    and operator = :i_c_operator
    and label_count = :i_c_label_count
|
{
    if ( @terminal = 'ERROR' )
    {
        set return status where status=10000 
            and message = 'Testing for error situation'
    }
    else
    {
        process voice debug command where command = 'process voice label count; get voice printers'
    }
} catch(@?)
|
if ( @? != 0 )
    publish data where error_code = @? 
        and error_descr=@!
else
    filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",581,1,"20210202171910","","SLIMP_I",""
"SAL_VOI_GET_PTS_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_GET_PTS_ASGN_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      
       |
       process voice debug command where command = 'get voice pts assignment  
                 where terminal = @terminal 
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",575,1,"20210202171918","","SLIMP_I",""
"SAL_VOI_GET_PTS_FT_LOC_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_GET_PTS_FT_LOC_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                            and operator = :i_c_operator 
                            and region_num = :i_n_region_num
                            and bldg_id  = :i_c_building_id
                            and wrkzon = :i_c_work_zone_id
                            and aisle_id = :i_c_aisle_id
       |
       process voice debug command where command = 'get voice pts flow through location 
         where terminal = @terminal 
            and operator = @operator
            and region_num = @region_num
            and bldg_id  = @bldg_id
            and wrkzon = @wrkzon
            and aisle_id = @aisle_id '
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_desc = nvl(@error_descr, '')",992,1,"20210202171927","","SLIMP_I",""
"SAL_VOI_GET_PTS_PUTS_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_GET_PTS_PUTS_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and group_id = :i_c_group_id
                      
       |
       process voice debug command where command = 'list voice pts puts  
                 where terminal = @terminal 
                      and operator = @operator
                      and group_id = @group_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",668,1,"20210202171949","","SLIMP_I",""
"SAL_VOI_GET_PTS_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Put to Store Region","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
       |
       process voice debug command where command = 'list voice pts regions
                 where terminal = @terminal 
                    and operator = @operator' 
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",547,1,"20210202172001","","SLIMP_I",""
"SAL_VOI_GET_PTS_RESID_ALG","SL_RETR_MTHD_IMPL","MOCA","Get Voice PTS Residuals. It will return one row for each item on each LPN on the device that has residuals","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and group_id = :i_c_group_id

       |
       process voice debug command where command = 'get voice pts residuals
                 where terminal = @terminal
                      and operator = @operator
                      and group_id = @group_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",645,1,"20210202172010","","SLIMP_I",""
"SAL_VOI_GET_PUT_AWAY_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Get Put Away","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'get voice pa information
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",547,1,"20210202172019","","SLIMP_I",""
"SAL_VOI_GET_REASON_CODE_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_GET_REASON_CODE_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'get voice reason code
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",544,1,"20210202172029","","SLIMP_I",""
"SAL_VOI_GET_RPL_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to get replenishment function","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'get voice rpl information
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",548,1,"20210202172038","","SLIMP_I",""
"SAL_VOI_GET_RPL_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to list the available regions within the put away function","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'list voice rpl regions
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",545,1,"20210202172048","","SLIMP_I",""
"SAL_VOI_GET_SLOTASSETTYP_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get S","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal and operator = :i_c_operator and asset_typ = :i_c_asset_typ 
       |
       process voice debug command where command = 'list voice slot asset types where terminal = @terminal and operator = @operator and asset_typ = @asset_typ'
}
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",545,1,"20210202172057","","SLIMP_I",""
"SAL_VOI_GET_TRANSLATIONS_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Item Attribute Translations","F","F","F","F","F","F","","
{

   if ( @terminal = 'ERROR' )

      set return status where status=10000 and message = 'Testing for error situation'

   else

   {      
      publish data
          where operator = :i_c_operator
              and terminal = :i_c_terminal
      |

      process voice debug command where command = 'get voice item attribute translations where operator = @operator


                           and terminal = @terminal'


   }

}

catch(@?)

|

if ( @? != 0 )

   publish data where error_code = @? and error_descr=@!

else

   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",624,1,"20210202172106","","SLIMP_I",""
"SAL_VOI_GET_VALID_ACT_TYPS_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Valid Indirect Activity Types","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
   {
      set return status where status=10000 and message = 'Testing for error situation'
   }
   else
   {
      publish data where terminal = :i_c_terminal and operator = :i_c_operator
      |
      process voice debug command where command = 'get voice indirect activity codes 
                                                                                     where terminal = @terminal 
                                                                                         and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",678,1,"20210202172118","","SLIMP_I",""
"SAL_VOI_GET_VEH_TYP_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Vehicle Types","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal and operator = :i_c_operator
       |
       process voice debug command where command = 'list voice vehicle types where terminal = @terminal and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",486,1,"20210202172126","","SLIMP_I",""
"SAL_VOI_GET_WORK_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Work","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and work_id_val = :i_c_work_id_val
       |
       process voice debug command where command = 'get voice work where terminal = @terminal and operator = @operator and work_id_val = @work_id_val'
   }

}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",589,1,"20210202172134","","SLIMP_I",""
"SAL_VOI_GET_WRKARE_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Work Areas","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'list voice work areas where terminal = @terminal and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",506,1,"20210202172151","","SLIMP_I",""
"SAL_VOI_GET_WRKFLW_INFO_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Get Workflow Information Algorithm","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {

         publish data
           where terminal = :i_c_terminal
              and operator = :i_c_operator
              and assignment_id = :i_c_assignment_id
              and workflow_type = :i_c_workflow_type
              and work_id = :i_c_work_id
              and location_id = :i_c_location_id
              and wrkref = :i_c_wrkref
         |
         process voice debug command where command = 'get voice workflow information
              where terminal         = @terminal
                 and operator         = @operator
                 and assignment_id = @assignment_id
                 and workflow_type = @workflow_type
                 and work_id          = @work_id
                 and location_id      = @location_id
                 and wrkref        = @wrkref'
    }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",1116,1,"20210202172142","","SLIMP_I",""
"SAL_VOI_GET_WRKOPT_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Get Work Options","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and sel_work_area = :i_c_sel_work_area
       |
       process voice debug command where command = 'list voice work options where terminal = @terminal and operator = @operator and sel_work_area = @sel_work_area'
   }
 
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",607,1,"20210202172200","","SLIMP_I",""
"SAL_VOI_PRC_CONTAINER_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Process Container","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
   {
      set return status where status=10000 and message = 'Testing for error situation'
   }
   else
   {
      publish data
        where terminal = :i_c_terminal
        and operator = :i_c_operator
        and work_id = :i_c_work_id
        and assignment_id = :i_c_assignment_id
        and target_container = :i_n_target_container
        and system_container_id = :i_c_system_container_id
        and operator_container_id = :i_c_operator_container_id
        and operation = :i_c_operation
        and number_of_labels = :i_c_number_of_labels
        and asset_typ = :i_c_asset_typ
        and new_position = :i_c_new_position
        and pal_position = :i_c_pal_position
      |
      process voice debug command where command = 'process voice container
                                                                where terminal = @terminal
                                                                and operator = @operator
                                                                and work_id = @work_id
                                                                and assignment_id = @assignment_id
                                                                and target_container = @target_container
                                                                and system_container_id = @system_container_id
                                                                and operator_container_id = @operator_container_id
                                                                and operation = @operation
                                                                and number_of_labels = @number_of_labels
                                                                and asset_typ = @asset_typ 
                                                                and new_position = @new_position
                                                                and pal_position = @pal_position'
   }
}
catch(@?)
|
if ( @? = -54 )
   publish data where error_code = 5
else if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
    filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",2230,1,"20210202172209","","SLIMP_I",""
"SAL_VOI_PRC_CUR_LOC_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Current Location","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and loc_num = :i_c_loc_num
                      and loc_chk = :i_c_loc_chk
       |
       process voice debug command where command = 'process voice current location where terminal = @terminal 
                                       and operator = @operator 
                                       and loc_num = @loc_num
                                       and loc_chk = @loc_chk'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",779,1,"20210202172220","","SLIMP_I",""
"SAL_VOI_PRC_CYCCNT_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Process Cycle Counting Region","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and region_num = :i_n_region_num
                      and all_regions = :i_n_all_regions
       |
       process voice debug command where command = 'process voice region
                 where terminal = @terminal
                      and operator = @operator
                      and region_num = @region_num
                      and all_regions = @all_regions'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",759,1,"20210202172229","","SLIMP_I",""
"SAL_VOI_PRC_IND_ACT_ODR_ALG","SL_IFD_SEG_PROC","MOCA","SAL Voice Process Indirect Activity for ODR","F","F","F","F","F","F","F","sl_list ifd_data_fld where ifd_data_dtl_seq = 0
|
{
   if ( @terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {

      process voice debug command where command = 
                  'process voice indirect activity
                                where operator               = @operator
                                    and terminal             = @terminal
                                    and actcod               = @break_type'
   }

}",514,1,"20210202172246","","SLIMP_I",""
"SAL_VOI_PRC_INV_DEP_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Inventory Deposit","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and override = :i_c_override 
                      and lpn = :i_c_lpn 
                      and loc_num = :i_c_loc_num 
                      and check_digit = :i_c_check_digit
                      and scanned = :i_n_scanned
                      and set_down = :i_n_set_down
       |
       process voice debug command where command = 'process voice inventory deposit where terminal = @terminal 
                      and operator = @operator 
                      and override = @override 
                      and lpn = @lpn 
                      and loc_num = @loc_num 
                      and check_digit = @check_digit
                      and scanned = @scanned
                      and set_down = @set_down'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",1177,1,"20210202172255","","SLIMP_I",""
"SAL_VOI_PRC_INV_SWAP_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Inventory Deposit","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                             and operator = :i_c_operator 
                             and put_id = :i_n_put_id
                             and scanned_qty = :i_n_scanned_qty
                             and lpn = :i_c_lpn
                             and lotnum = :i_c_lotnum
                             and orgcod = :i_c_orgcod
                             and revlvl = :i_c_revlvl
                             and supnum = :i_c_supnum
                             and sup_lotnum = :i_c_sup_lotnum
                             and mandte = :i_c_mandte
                             and expire_dte = :i_c_expire_dte
                             and rttn_id = :i_c_rttn_id
                             and inv_attr_str1 = :i_c_inv_attr_str1
                             and inv_attr_str2 = :i_c_inv_attr_str2
                             and inv_attr_str3 = :i_c_inv_attr_str3
                             and inv_attr_str4 = :i_c_inv_attr_str4
                             and inv_attr_str5 = :i_c_inv_attr_str5
                             and inv_attr_str6 = :i_c_inv_attr_str6
                             and inv_attr_str7 = :i_c_inv_attr_str7
                             and inv_attr_str8 = :i_c_inv_attr_str8
                             and inv_attr_str9 = :i_c_inv_attr_str9
                             and inv_attr_str10= :i_c_inv_attr_str10
                             and inv_attr_str11= :i_c_inv_attr_str11
                             and inv_attr_str12= :i_c_inv_attr_str12
                             and inv_attr_str13= :i_c_inv_attr_str13
                             and inv_attr_str14= :i_c_inv_attr_str14
                             and inv_attr_str15= :i_c_inv_attr_str15
                             and inv_attr_str16= :i_c_inv_attr_str16
                             and inv_attr_str17= :i_c_inv_attr_str17
                             and inv_attr_str18= :i_c_inv_attr_str18
                             and inv_attr_int1 = :i_n_inv_attr_int1
                             and inv_attr_int2 = :i_n_inv_attr_int2
                             and inv_attr_int3 = :i_n_inv_attr_int3
                             and inv_attr_int4 = :i_n_inv_attr_int4
                             and inv_attr_int5 = :i_n_inv_attr_int5
                             and inv_attr_flt1 = :i_c_inv_attr_flt1
                             and inv_attr_flt2 = :i_c_inv_attr_flt2
                             and inv_attr_flt3 = :i_c_inv_attr_flt3
                             and inv_attr_dte1 = :i_c_inv_attr_dte1
                             and inv_attr_dte2 = :i_c_inv_attr_dte2
       |
       process voice debug command where command = 'process mixed inventory swap 
                                                                                   where terminal = @terminal 
                                                                                      and operator = @operator
                                                                                      and lpn = @lpn 
                                                                                      and put_id = @put_id 
                                                                                      and scanned_qty= @scanned_qty 
                                                                                      and lotnum = @lotnum 
                                                                                      and orgcod = @orgcod 
                                                                                      and revlvl = @revlvl 
                                                                                      and supnum = @supnum 
                                                                                      and sup_lotnum = @sup_lotnum 
                                                                                      and mandte = @mandte 
                                                                                      and expire_dte = @expire_dte 
                                                                                      and rttn_id = @rttn_id 
                                                                                      and inv_attr_str1 = @inv_attr_str1 
                                                                                      and inv_attr_str2 = @inv_attr_str2 
                                                                                      and inv_attr_str3 = @inv_attr_str3 
                                                                                      and inv_attr_str4 = @inv_attr_str4 
                                                                                      and inv_attr_str5 = @inv_attr_str5 
                                                                                      and inv_attr_str6 = @inv_attr_str6 
                                                                                      and inv_attr_str7 = @inv_attr_str7 
                                                                                      and inv_attr_str8 = @inv_attr_str8 
                                                                                      and inv_attr_str9 = @inv_attr_str9 
                                                                                      and inv_attr_str10 = @inv_attr_str10 
                                                                                      and inv_attr_str11 = @inv_attr_str11 
                                                                                      and inv_attr_str12 = @inv_attr_str12 
                                                                                      and inv_attr_str13 = @inv_attr_str13 
                                                                                      and inv_attr_str14 = @inv_attr_str14 
                                                                                      and inv_attr_str15 = @inv_attr_str15 
                                                                                      and inv_attr_str16 = @inv_attr_str16 
                                                                                      and inv_attr_str17 = @inv_attr_str17 
                                                                                      and inv_attr_str18 = @inv_attr_str18 
                                                                                      and inv_attr_int1 = @inv_attr_int1 
                                                                                      and inv_attr_int2 = @inv_attr_int2 
                                                                                      and inv_attr_int3 = @inv_attr_int3 
                                                                                      and inv_attr_int4 = @inv_attr_int4 
                                                                                      and inv_attr_int5 = @inv_attr_int5 
                                                                                      and inv_attr_flt1 = @inv_attr_flt1 
                                                                                      and inv_attr_flt2 = @inv_attr_flt2 
                                                                                      and inv_attr_flt3 = @inv_attr_flt3 
                                                                                      and inv_attr_dte1 = @inv_attr_dte1 
                                                                                      and inv_attr_dte2 = @inv_attr_dte2'
    }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",7922,1,"20210202172442","","SLIMP_I",""
"SAL_VOI_PRC_LDG_LICENSE_ALG","SL_RETR_MTHD_IMPL","MOCA","Sal Voice loading process license algorithm","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                             and operator = :i_c_operator
                             and status = :i_c_status
                             and license = :i_c_license
                             and master_lpn = :i_c_master_lpn
                             and position = :i_c_position
                             and trailer_id = :i_c_trailer_id
       |
       process voice debug command where command = 'process voice loading license
                                                    where terminal = @terminal
                                                       and operator = @operator
                                                       and status = @status
                                                       and license = @license
                                                       and master_lpn = @master_lpn
                                                       and position = @position
                                                       and trailer_id = @trailer_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",1321,1,"20210202172303","","SLIMP_I",""
"SAL_VOI_PRC_LDG_REGCFG_ALG","SL_RETR_MTHD_IMPL","MOCA","sal voice process loading region configurations algorithm","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data 
           where terminal = :i_c_terminal
               and operator = :i_c_operator
       |
       process voice debug command 
           where command = 'process voice ldg region config
                                          where terminal = @terminal
                                             and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",619,1,"20210202172312","","SLIMP_I",""
"SAL_VOI_PRC_LDG_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_PRC_LDG_REGION_RM to save the region number returned by the device.","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data 
           where terminal = :i_c_terminal
               and operator = :i_c_operator
               and region_num = :i_n_region_num
       |
       process voice debug command 
           where command = 'process voice region
                                          where terminal = @terminal
                                             and operator = @operator
                                             and region_num = @region_num'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",730,1,"20210202172320","","SLIMP_I",""
"SAL_VOI_PRC_PA_DEPOSIT_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to process put license.","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and license = :i_c_license
                      and loc_num = :i_c_loc_num
                      and put_status = :i_n_put_status
                      and qty_put = :i_n_qty_put
                      and reason_code = :i_n_reason_code
                      and start_time = :i_c_start_time

       |
       process voice debug command where command = 'process voice pa deposit
                 where terminal = @terminal
                      and operator = @operator
                      and license = @license 
                      and loc_num = @loc_num 
                      and put_status = @put_status 
                      and qty_put = @qty_put 
                      and reason_code = @reason_code 
                      and start_time = @start_time'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",1157,1,"20210202172328","","SLIMP_I",""
"SAL_VOI_PRC_PA_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Process Put Away Region","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and region_num = :i_n_region_num
                      and all_regions = :i_n_all_regions
       |
       process voice debug command where command = 'process voice region
                 where terminal = @terminal
                      and operator = @operator
                      and region_num = @region_num
                      and all_regions = @all_regions'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",759,1,"20210202172336","","SLIMP_I",""
"SAL_VOI_PRC_PA_REGION_CFG_ALG","SL_RETR_MTHD_IMPL","MOCA","Process Put Away Region Config","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'process voice pa region config
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",553,1,"20210202172344","","SLIMP_I",""
"SAL_VOI_PRC_PCK_TO_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Pick To Identifier","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and lpn = :i_c_lpn 
                      and container_type = :i_c_container_type
       |
       process voice debug command where command = 'process voice pick to identifier where terminal = @terminal 
    and operator = @operator 
    and lpn = @lpn 
    and container_type = @container_type'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",690,1,"20210202172353","","SLIMP_I",""
"SAL_VOI_PRC_PICK_ODR_ALG","SL_IFD_SEG_PROC","MOCA","SAL Voice Process Pick for ODR","F","F","F","F","F","F","","sl_list ifd_data_fld where ifd_data_dtl_seq = 0
|
{
   if ( @terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
      process voice debug command where command = 'process voice pick
                         where terminal = @terminal
                           and operator = @operator
                           and assign_id = @assign_id
                           and work_id = @work_id
                           and location_id = @location_id
                           and qty_picked = @qty_picked
                           and picked_status = @picked_status
                           and put_lpn = @container_id
                           and work_req_id = @work_req_id
                           and lot_num = @lot_num
                           and catch_qty = @catch_qty
                           and serial_num = @serial_num
                           and lpn = @lpn
                           and revision_cd = @revision_cd
                           and origin_cd = @origin_cd
                           and supplier_cd = @supplier_cd
                           and discrepancy_type = @discrepancy_type
                           and ending_serial_num = @ending_serial_num
                           and asset_type = @asset_type
                           and wrkref = @wrkref
                           and sup_lotnum_cd = @sup_lotnum_cd
                           and mandte_cd = @mandte_cd
                           and expire_dte_cd = @expire_dte_cd
                           and rttn_id_cd = @rttn_id_cd
                           and captured_invtid = @captured_invtid
                           and cancelled_capture_flg = @cancelled_capture_flg
                           and odrflg = 1
                           and inv_attr_str1_cd = @inv_attr_str1_cd
                           and inv_attr_str2_cd = @inv_attr_str2_cd
                           and inv_attr_str3_cd = @inv_attr_str3_cd
                           and inv_attr_str4_cd = @inv_attr_str4_cd
                           and inv_attr_str5_cd = @inv_attr_str5_cd
                           and inv_attr_str6_cd = @inv_attr_str6_cd
                           and inv_attr_str7_cd = @inv_attr_str7_cd
                           and inv_attr_str8_cd = @inv_attr_str8_cd
                           and inv_attr_str9_cd = @inv_attr_str9_cd
                           and inv_attr_str10_cd = @inv_attr_str10_cd
                           and inv_attr_str11_cd = @inv_attr_str11_cd
                           and inv_attr_str12_cd = @inv_attr_str12_cd
                           and inv_attr_str13_cd = @inv_attr_str13_cd
                           and inv_attr_str14_cd = @inv_attr_str14_cd
                           and inv_attr_str15_cd = @inv_attr_str15_cd
                           and inv_attr_str16_cd = @inv_attr_str16_cd
                           and inv_attr_str17_cd = @inv_attr_str17_cd
                           and inv_attr_str18_cd = @inv_attr_str18_cd
                           and inv_attr_int1_cd = nvl(@inv_attr_int1_cd, NULL)
                           and inv_attr_int2_cd = nvl(@inv_attr_int2_cd, NULL)
                           and inv_attr_int3_cd = nvl(@inv_attr_int3_cd, NULL)
                           and inv_attr_int4_cd = nvl(@inv_attr_int4_cd, NULL)
                           and inv_attr_int5_cd = nvl(@inv_attr_int5_cd, NULL)
                           and inv_attr_flt1_cd = nvl(@inv_attr_flt1_cd, NULL)
                           and inv_attr_flt2_cd = nvl(@inv_attr_flt2_cd, NULL)
                           and inv_attr_flt3_cd = nvl(@inv_attr_flt3_cd, NULL)
                           and inv_attr_dte1_cd = @inv_attr_dte1_cd
                           and inv_attr_dte2_cd = @inv_attr_dte2_cd'
   }
}",3800,1,"20210202172401","","SLIMP_I",""
"SAL_VOI_PRC_PICKED_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Process Picked","F","F","F","F","F","F","F","sl_list ifd_data_fld where ifd_data_dtl_seq = 0
|
{
   if ( @terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
      process voice debug command where command = 'process voice pick
                         where terminal = @terminal
                           and operator = @operator
                           and assign_id = @assign_id
                           and work_id = @work_id
                           and location_id = @location_id
                           and qty_picked = @qty_picked
                           and picked_status = @picked_status
                           and put_lpn = @container_id
                           and work_req_id = @work_req_id
                           and lot_num = @lot_num
                           and catch_qty = @catch_qty
                           and serial_num = @serial_num
                           and lpn = @lpn
                           and revision_cd = @revision_cd
                           and origin_cd = @origin_cd
                           and supplier_cd = @supplier_cd
                           and discrepancy_type = @discrepancy_type
                           and ending_serial_num = @ending_serial_num
                           and asset_type = @asset_type
                           and wrkref = @wrkref
                           and sup_lotnum_cd = @sup_lotnum_cd
                           and mandte_cd = @mandte_cd
                           and expire_dte_cd = @expire_dte_cd
                           and rttn_id_cd = @rttn_id_cd
                           and captured_invtid = @captured_invtid
                           and cancelled_capture_flg = @cancelled_capture_flg
                           and odrflg = 1
                           and inv_attr_str1_cd = @inv_attr_str1_cd
                           and inv_attr_str2_cd = @inv_attr_str2_cd
                           and inv_attr_str3_cd = @inv_attr_str3_cd
                           and inv_attr_str4_cd = @inv_attr_str4_cd
                           and inv_attr_str5_cd = @inv_attr_str5_cd
                           and inv_attr_str6_cd = @inv_attr_str6_cd
                           and inv_attr_str7_cd = @inv_attr_str7_cd
                           and inv_attr_str8_cd = @inv_attr_str8_cd
                           and inv_attr_str9_cd = @inv_attr_str9_cd
                           and inv_attr_str10_cd = @inv_attr_str10_cd
                           and inv_attr_str11_cd = @inv_attr_str11_cd
                           and inv_attr_str12_cd = @inv_attr_str12_cd
                           and inv_attr_str13_cd = @inv_attr_str13_cd
                           and inv_attr_str14_cd = @inv_attr_str14_cd
                           and inv_attr_str15_cd = @inv_attr_str15_cd
                           and inv_attr_str16_cd = @inv_attr_str16_cd
                           and inv_attr_str17_cd = @inv_attr_str17_cd
                           and inv_attr_str18_cd = @inv_attr_str18_cd
                           and inv_attr_int1_cd = nvl(@inv_attr_int1_cd, NULL)
                           and inv_attr_int2_cd = nvl(@inv_attr_int2_cd, NULL)
                           and inv_attr_int3_cd = nvl(@inv_attr_int3_cd, NULL)
                           and inv_attr_int4_cd = nvl(@inv_attr_int4_cd, NULL)
                           and inv_attr_int5_cd = nvl(@inv_attr_int5_cd, NULL)
                           and inv_attr_flt1_cd = nvl(@inv_attr_flt1_cd, NULL)
                           and inv_attr_flt2_cd = nvl(@inv_attr_flt2_cd, NULL)
                           and inv_attr_flt3_cd = nvl(@inv_attr_flt3_cd, NULL)
                           and inv_attr_dte1_cd = @inv_attr_dte1_cd
                           and inv_attr_dte2_cd = @inv_attr_dte2_cd'
   }
}catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",3982,1,"20210202172410","","SLIMP_I",""
"SAL_VOI_PRC_PRINT_LABELS_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Print Labels Algorithm","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where assignment_id = :i_c_assignment_id
                           and operator = :i_c_operator
                           and terminal = :i_c_terminal
                           and work_id = :i_c_work_id
                           and printer = :i_n_printer
                           and reprint_labels = :i_n_reprint_labels
                           and number_of_labels = :i_n_number_of_labels
                           and operation = :i_n_operation
                           and system_container_id = :i_c_system_container_id
       |
       process voice debug command where command = 'process voice print labels where assignment_id = @assignment_id
                           and operator = @operator
                           and terminal = @terminal
                           and work_id = @work_id
                           and printer = @printer
                           and reprint_labels = @reprint_labels
                           and number_of_labels = @number_of_labels
                           and operation = @operation
                           and system_container_id = @system_container_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",1472,1,"20210202172418","","SLIMP_I",""
"SAL_VOI_PRC_PTS_CONTAINER_ALG","SL_RETR_MTHD_IMPL","MOCA","Process Voice PTS Container. It will return a list of open container if request equals to 0, close a container when request equals to 1 or open a new container when request equals to 2.","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and request = :i_n_request
                      and loc_num = :i_c_loc_num
                      and container_id = :i_c_container_id
       |
       process voice debug command where command = 'process voice pts container
                  where terminal = @terminal
                      and operator = @operator
                      and request = @request
                      and loc_num = @loc_num
                      and container_id = @container_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
    filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",912,1,"20210202172426","","SLIMP_I",""
"SAL_VOI_PRC_PTS_DELIVERY_ALG","SL_RETR_MTHD_IMPL","MOCA","Process Voice PTS Delivery. This retrieve method will try to deliver the residual to the expected/unexpected location and log a expection if necessary.","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                            and operator = :i_c_operator
                            and group_id = :i_c_group_id
                            and license = :i_c_license
                            and loc_num = :i_c_loc_num
                            and item_num = :i_c_item_num
                            and unexpected = :i_n_unexpected
                            and qty = :i_c_qty
       |
       process voice debug command where command = 'process voice pts delivery
                   where terminal = @terminal
                      and operator = @operator
                      and group_id = @group_id 
                      and license = @license 
                      and loc_num = @loc_num 
                      and item_num = @item_num 
                      and unexpected = @unexpected 
                      and qty = @qty'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",1224,1,"20210202172434","","SLIMP_I",""
"SAL_VOI_PRC_PTS_PASS_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","Process Voice PTS Pass Assignment. This method will move the inventory remaining in the assignment to the P&D location and clear the device context.","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and group_id = :i_c_group_id
       |
       process voice debug command where command = 'process voice pts pass assignment
                 where terminal = @terminal
                      and operator = @operator
                      and group_id = @group_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",654,1,"20210202172451","","SLIMP_I",""
"SAL_VOI_PRC_PTS_PRT_LABEL_ALG","SL_RETR_MTHD_IMPL","MOCA","Process Voice PTS Print Label. This retrieve method will print a label when opening a new container during the put to store process.","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and group_id = :i_c_group_id
                      and printer_num = :i_n_printer_num
                      and loc_num = :i_c_loc_num
                      and container_id = :i_c_container_id
       |
       process voice debug command where command = 'process voice pts container label
                 where terminal = @terminal
                      and operator = @operator
                      and group_id = @group_id
                      and printer_num = @printer_num
                      and loc_num = @loc_num
                      and container_id = @container_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",972,1,"20210202172459","","SLIMP_I",""
"SAL_VOI_PRC_PTS_PUT_ALG","SL_IFD_SEG_PROC","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_PRC_PTS_PUT_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and group_id = :i_c_group_id
                      and loc_num = :i_c_loc_num
                      and item_num = :i_c_item_num
                      and put_id = :i_n_put_id
                      and qty_put = :i_n_qty_put
                      and container_id = :i_c_container_id
                      and license = :i_c_license
                      and partial = :i_n_partial
                      and catch_qty = :i_c_catch_qty
                      and status = :i_n_status
                      and scanned_weight = :i_c_scanned_weight
                      and lotnum = :i_c_lotnum
                      and orgcod = :i_c_orgcod
                      and revlvl = :i_c_revlvl
                      and supnum = :i_c_supnum
                      and sup_lotnum = :i_c_sup_lotnum
                      and mandte = :i_c_mandte
                      and expire_dte = :i_c_expire_dte
                      and rttn_id = :i_c_rttn_id
                      and inv_attr_str1 = :i_c_inv_attr_str1
                      and inv_attr_str2 = :i_c_inv_attr_str2
                      and inv_attr_str3 = :i_c_inv_attr_str3
                      and inv_attr_str4 = :i_c_inv_attr_str4
                      and inv_attr_str5 = :i_c_inv_attr_str5
                      and inv_attr_str6 = :i_c_inv_attr_str6
                      and inv_attr_str7 = :i_c_inv_attr_str7
                      and inv_attr_str8 = :i_c_inv_attr_str8
                      and inv_attr_str9 = :i_c_inv_attr_str9
                      and inv_attr_str10= :i_c_inv_attr_str10
                      and inv_attr_str11= :i_c_inv_attr_str11
                      and inv_attr_str12= :i_c_inv_attr_str12
                      and inv_attr_str13= :i_c_inv_attr_str13
                      and inv_attr_str14= :i_c_inv_attr_str14
                      and inv_attr_str15= :i_c_inv_attr_str15
                      and inv_attr_str16= :i_c_inv_attr_str16
                      and inv_attr_str17= :i_c_inv_attr_str17
                      and inv_attr_str18= :i_c_inv_attr_str18
                      and inv_attr_int1 = :i_n_inv_attr_int1
                      and inv_attr_int2 = :i_n_inv_attr_int2
                      and inv_attr_int3 = :i_n_inv_attr_int3
                      and inv_attr_int4 = :i_n_inv_attr_int4
                      and inv_attr_int5 = :i_n_inv_attr_int5
                      and inv_attr_flt1 = :i_c_inv_attr_flt1
                      and inv_attr_flt2 = :i_c_inv_attr_flt2
                      and inv_attr_flt3 = :i_c_inv_attr_flt3
                      and inv_attr_dte1 = :i_c_inv_attr_dte1
                      and inv_attr_dte2 = :i_c_inv_attr_dte2
       |
       process voice debug command where command = 'process voice pts put  
                 where terminal = @terminal 
                      and operator = @operator
                      and group_id = @group_id
                      and loc_num = @loc_num
                      and item_num = @item_num
                      and put_id = @put_id
                      and qty_put = @qty_put
                      and container_id = @container_id
                      and license = @license
                      and partial = @partial
                      and catch_qty = @catch_qty
                      and status = @status
                      and scanned_weight = @scanned_weight
                      and lotnum = @lotnum 
                      and orgcod = @orgcod 
                      and revlvl = @revlvl 
                      and supnum = @supnum 
                      and sup_lotnum = @sup_lotnum 
                      and mandte = @mandte 
                      and expire_dte = @expire_dte 
                      and rttn_id = @rttn_id 
                      and inv_attr_str1 = @inv_attr_str1 
                      and inv_attr_str2 = @inv_attr_str2 
                      and inv_attr_str3 = @inv_attr_str3 
                      and inv_attr_str4 = @inv_attr_str4 
                      and inv_attr_str5 = @inv_attr_str5 
                      and inv_attr_str6 = @inv_attr_str6 
                      and inv_attr_str7 = @inv_attr_str7 
                      and inv_attr_str8 = @inv_attr_str8 
                      and inv_attr_str9 = @inv_attr_str9 
                      and inv_attr_str10 = @inv_attr_str10 
                      and inv_attr_str11 = @inv_attr_str11 
                      and inv_attr_str12 = @inv_attr_str12 
                      and inv_attr_str13 = @inv_attr_str13 
                      and inv_attr_str14 = @inv_attr_str14 
                      and inv_attr_str15 = @inv_attr_str15 
                      and inv_attr_str16 = @inv_attr_str16 
                      and inv_attr_str17 = @inv_attr_str17 
                      and inv_attr_str18 = @inv_attr_str18 
                      and inv_attr_int1 = @inv_attr_int1 
                      and inv_attr_int2 = @inv_attr_int2 
                      and inv_attr_int3 = @inv_attr_int3 
                      and inv_attr_int4 = @inv_attr_int4 
                      and inv_attr_int5 = @inv_attr_int5 
                      and inv_attr_flt1 = @inv_attr_flt1 
                      and inv_attr_flt2 = @inv_attr_flt2 
                      and inv_attr_flt3 = @inv_attr_flt3 
                      and inv_attr_dte1 = @inv_attr_dte1 
                      and inv_attr_dte2 = @inv_attr_dte2'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",5761,1,"20210202172507","","SLIMP_I",""
"SAL_VOI_PRC_PTS_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_PRC_PTS_REGION_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data 
           where terminal = :i_c_terminal
               and operator = :i_c_operator
               and region_num = :i_n_region_num
       |
       process voice debug command 
           where command = 'process voice pts region
                                          where terminal = @terminal
                                             and operator = @operator
                                             and region_num = @region_num'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",734,1,"20210202172516","","SLIMP_I",""
"SAL_VOI_PRC_PTS_RES_LABEL_ALG","SL_RETR_MTHD_IMPL","MOCA","Process Voice Pts Resudial Label. This method will print label for expected and unexpected label.","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and printer_num = :i_n_printer_num
                      and license = :i_c_license
                      and item_num = :i_c_item_num
                      and type = :i_n_type
       |
       process voice debug command where command = 'process voice pts residual label
                 where terminal = @terminal
                      and operator = @operator
                      and printer_num = @printer_num 
                      and license = @license 
                      and item_num = @item_num 
                      and type = @type'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",942,1,"20210202172527","","SLIMP_I",""
"SAL_VOI_PRC_PTS_STOP_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","Process Voice PTS Stop Assignment. This method will finish the assignment and complete all the direct works for the operator","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and group_id = :i_c_group_id
       |
       process voice debug command where command = 'process voice pts stop assignment
                 where terminal = @terminal
                      and operator = @operator
                      and group_id = @group_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",654,1,"20210202172534","","SLIMP_I",""
"SAL_VOI_PRC_PTS_UPDATE_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_PRC_PTS_UPDATE_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and group_id = :i_c_group_id
                      and loc_num = :i_c_loc_num
                      and update = :i_n_update
                      and update_to = :i_c_update_to
                      
       |
       process voice debug command 
         where command = 'process voice pts update  
                 where terminal = @terminal 
                      and operator = @operator
                      and group_id = @group_id
                      and loc_num = @loc_num
                      and update = @update
                      and update_to = @update_to'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",969,1,"20210202172542","","SLIMP_I",""
"SAL_VOI_PRC_PTS_UPDATE_ODR_ALG","SL_IFD_SEG_PROC","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_PRC_PTS_UPDATE_ORD_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator 
                      and group_id = :i_c_group_id
                      and loc_num = :i_c_loc_num
                      and update = :i_n_update
                      and update_to = :i_c_update_to
                      
       |
       process voice debug command 
         where command = 'process voice pts update  
                 where terminal = @terminal 
                      and operator = @operator
                      and group_id = @group_id
                      and loc_num = @loc_num
                      and update = @update
                      and update_to = @update_to'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",969,1,"20210202172550","","SLIMP_I",""
"SAL_VOI_PRC_RPL_LPN_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to replenish license.","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and rpl_num = :i_c_rpl_num
                      and qty_num = :i_n_qty_num
                      and loc_num = :i_c_loc_num
                      and rpl_status = :i_n_rpl_status
                      and reason_code = :i_n_reason_code
                      and start_time = :i_c_start_time
       |
       process voice debug command where command = 'process voice rpl license
                  where terminal = @terminal
                     and operator = @operator
                     and rpl_num = @rpl_num
                     and qty_num = @qty_num
                     and loc_num = @loc_num
                     and rpl_status = @rpl_status
                     and reason_code = @reason_code
                     and start_time = @start_time'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",1146,1,"20210202172557","","SLIMP_I",""
"SAL_VOI_PRC_RPL_REG_CFG_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Replenishment Config","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
       |
       process voice debug command where command = 'process voice rpl region config
                 where terminal = @terminal
                      and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",554,1,"20210202172606","","SLIMP_I",""
"SAL_VOI_PRC_RPL_REGION_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Process Replenishment Region","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and region_num = :i_n_region_num
                      and all_regions = :i_n_all_regions
       |
       process voice debug command where command = 'process voice region
                 where terminal = @terminal
                      and operator = @operator
                      and region_num = @region_num
                      and all_regions = @all_regions'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",759,1,"20210202172615","","SLIMP_I",""
"SAL_VOI_PRC_SFTY_CHK_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Safety Check","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and yes_to_all = :i_c_yes_to_all
                      and repair_action = :i_c_repair_action
                      and failure = :i_c_failure
       |
       process voice debug command where command = 'process voice safety check where terminal = @terminal
                                   and operator = @operator
                                   and yes_to_all = @yes_to_all
                                   and repair_action = @repair_action
                                   and failure = @failure'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",902,1,"20210202172622","","SLIMP_I",""
"SAL_VOI_PRC_SIGN_OFF_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Sign Off","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator
                      and usr_eod = :i_c_usr_eod
       |
       process voice debug command where command = 'process voice sign off where terminal = @terminal 
                               and operator = @operator
                               and usr_eod = @usr_eod'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else   
   filter data where error_code = nvl(@error_code,0) and error_descr = nvl(@error_descr,'')",701,1,"20210202172630","","SLIMP_I",""
"SAL_VOI_PRC_SIGN_ON_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Sign On","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                              and operator = :i_c_operator
                              and password = :i_c_password
       |
       process voice debug command where command = 'process voice sign on where terminal = @terminal 
                              and operator = @operator
                              and password = @password'
   }
}
catch(@?)
|
if ( @? != 0 )
{
   publish data where error_code = @? and error_descr=@!
}
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",721,1,"20210202172638","","SLIMP_I",""
"SAL_VOI_PRC_STOP_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Process Stop Assignment","F","F","F","F","F","T","F","{
   if ( :i_c_terminal = 'ERROR' )
  {
      set return status where status=10000 and message = 'Testing for error situation'
   }
   else
   {
      publish data where terminal = :i_c_terminal and operator = :i_c_operator
      |
      process voice debug command where command = 'process voice stop assignment 
            where terminal = @terminal
               and operator     = @operator 
               and group_id     = @group_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",574,1,"20210202172646","","SLIMP_I",""
"SAL_VOI_PRC_VEH_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Vehicle Algorithm","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator
                      and veh_typ_cd = :i_c_veh_typ_txt
                      and veh_id = :i_c_veh_id
       |
       process voice debug command where command = 'process voice vehicle where terminal = @terminal 
                              and operator = @operator
                              and veh_typ_cd = @veh_typ_cd
                              and veh_id = @veh_id'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",750,1,"20210202172701","","SLIMP_I",""
"SAL_VOI_PRC_VLD_FUNCTIONS_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Valid Functions","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
   {
      set return status where status=10000 and message = 'Testing for error situation'
   }
   else
   {
      publish data where terminal = :i_c_terminal and operator = :i_c_operator
      |
      process voice debug command where command = 'get voice valid functions 
                                                                                      where terminal = @terminal 
                                                                                         and operator = @operator'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",671,1,"20210202172653","","SLIMP_I",""
"SAL_VOI_PRC_WRKFLW_ODR_ALG","SL_IFD_SEG_PROC","MOCA","SAL Voice Process Workflow Results for ODR","F","F","F","F","F","F","F","sl_list ifd_data_fld where ifd_data_dtl_seq = 0
|
{
    if (@terminal = 'ERROR')
    {
        set return status where status=10000 and message = 'Testing for error situation'
    }
    else
    {
        process voice debug command
          where command = 'process voice workflow results
                             where operator = @operator
                               and terminal = @terminal
                               and workflow_id = @workflow_id
                               and instruction_id = @instruction_id
                               and response_type = @response_type
                               and response = @response
                               and pass_fail_flg = @pass_fail_flg
                               and last_record_flg = @last_record_flg
                               and cnfrm_serv_id = @cnfrm_serv_id
                               and exitpnt_typ = @exitpnt_typ
                               and exitpnt = @exitpnt
                               and last_workflow = @last_workflow'
    }
}",1047,1,"20210202172717","","SLIMP_I",""
"SAL_VOI_PRC_WRKFLW_RESULT_ALG","SL_RETR_MTHD_IMPL","MOCA","Sal Voice Process Workflow Result Algorithm","F","F","F","F","F","F","F","
{
    if ( :i_c_terminal = 'ERROR' )
        set return status where status=10000 and message = 'Testing for error situation'
    else
    {
        publish data
          where operator = :i_c_operator
            and terminal = :i_c_terminal
            and workflow_id = :i_c_workflow_id
            and instruction_id = :i_c_instruction_id
            and response_type = :i_n_response_type
            and response = :i_c_response
            and pass_fail_flg = :i_n_pass_fail_flg
            and last_record_flg = :i_c_last_record_flg
            and cnfrm_serv_id = :i_c_cnfrm_serv_id
            and exitpnt_typ = :i_c_exitpnt_typ
            and exitpnt = :i_c_exitpnt
            and last_workflow = :i_c_last_workflow
        |
        process voice debug command
          where command = 'process voice workflow results
                             where operator = @operator
                               and terminal = @terminal
                               and workflow_id = @workflow_id
                               and instruction_id = @instruction_id
                               and response_type = @response_type
                               and response = @response
                               and pass_fail_flg = @pass_fail_flg
                               and last_record_flg = @last_record_flg
                               and cnfrm_serv_id = @cnfrm_serv_id
                               and exitpnt_typ = @exitpnt_typ
                               and exitpnt = @exitpnt
                               and last_workflow = @last_workflow'
    }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",1774,1,"20210202172709","","SLIMP_I",""
"SAL_VOI_PRC_WRKOPT_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Process Work Option","F","F","F","F","F","F","","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                      and operator = :i_c_operator
                      and region_num = :i_c_region_num
       |
       process voice debug command where command = 'process voice work option where terminal = @terminal 
                                  and operator = @operator
                                  and region_num = @region_num'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",663,1,"20210202172724","","SLIMP_I",""
"SAL_VOI_START_ASGN_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice Start Assignment","F","F","F","F","F","F","","{
    if(:i_c_terminal = 'ERROR')
    {
        set return status where status=10000
          and message = 'Testing for error situation'
    }
    else
    {
        publish data where terminal = :i_c_terminal
          and operator = :i_c_operator
        |
        process voice debug command where command = 'start voice assignment where terminal = @terminal and operator = @operator'
    }
} catch(@?)
|
/* We catch concurrency errors and tell the device an issue occurred and to handle retrying the transaction. */
if ( @? = -60 )
   publish data where error_code = 5
else if ( @? != 0 )
    publish data where error_code = @? and error_descr=@!
else
    filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",752,1,"20210202172736","","SLIMP_I",""
"SAL_VOI_VALIDATE_INV_INFO_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Validate Inventory Information","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
   {
      set return status where status=10000 and message = 'Testing for error situation'
   }
   else
   {
      publish data 
        where terminal = :i_c_terminal 
          and operator = :i_c_operator
          and lot_id = :i_c_lot_id
          and quantity = :i_c_quantity
          and work_req_id = :i_c_work_req_id
          and lpn = :i_c_lpn
          and origin = :i_c_origin
          and revision = :i_c_revision
          and supplier = :i_c_supplier
          and wrkref = :i_c_wrkref
          and sup_lotnum = :i_c_sup_lotnum
          and mandte = :i_c_mandte
          and expire_dte = :i_c_expire_dte
          and rttn_id = :i_c_rttn_id
          and inv_attr_str1 = :i_c_inv_attr_str1
          and inv_attr_str2 = :i_c_inv_attr_str2
          and inv_attr_str3 = :i_c_inv_attr_str3
          and inv_attr_str4 = :i_c_inv_attr_str4
          and inv_attr_str5 = :i_c_inv_attr_str5
          and inv_attr_str6 = :i_c_inv_attr_str6
          and inv_attr_str7 = :i_c_inv_attr_str7
          and inv_attr_str8 = :i_c_inv_attr_str8
          and inv_attr_str9 = :i_c_inv_attr_str9
          and inv_attr_str10 = :i_c_inv_attr_str10
          and inv_attr_str11 = :i_c_inv_attr_str11
          and inv_attr_str12 = :i_c_inv_attr_str12
          and inv_attr_str13 = :i_c_inv_attr_str13
          and inv_attr_str14 = :i_c_inv_attr_str14
          and inv_attr_str15 = :i_c_inv_attr_str15
          and inv_attr_str16 = :i_c_inv_attr_str16
          and inv_attr_str17 = :i_c_inv_attr_str17
          and inv_attr_str18 = :i_c_inv_attr_str18
          and inv_attr_int1 = :i_c_inv_attr_int1
          and inv_attr_int2 = :i_c_inv_attr_int2
          and inv_attr_int3 = :i_c_inv_attr_int3
          and inv_attr_int4 = :i_c_inv_attr_int4
          and inv_attr_int5 = :i_c_inv_attr_int5
          and inv_attr_flt1 = :i_c_inv_attr_flt1
          and inv_attr_flt2 = :i_c_inv_attr_flt2
          and inv_attr_flt3 = :i_c_inv_attr_flt3
          and inv_attr_dte1 = :i_c_inv_attr_dte1
          and inv_attr_dte2 = :i_c_inv_attr_dte2
      |
      process voice debug command
        where command = 'process voice inventory information
                            where terminal = @terminal
                              and operator = @operator
                              and lot_id = @lot_id
                              and quantity = @quantity
                              and sequence_number = @sequence_number
                              and lpn = @lpn
                              and origin = @origin
                              and revision = @revision
                              and supplier = @supplier
                              and wrkref = @wrkref
                              and sup_lotnum = @sup_lotnum
                              and mandte = @mandte
                              and expire_dte = @expire_dte
                              and rttn_id = @rttn_id
                              and inv_attr_str1 = @inv_attr_str1
                              and inv_attr_str2 = @inv_attr_str2
                              and inv_attr_str3 = @inv_attr_str3
                              and inv_attr_str4 = @inv_attr_str4
                              and inv_attr_str5 = @inv_attr_str5
                              and inv_attr_str6 = @inv_attr_str6
                              and inv_attr_str7 = @inv_attr_str7
                              and inv_attr_str8 = @inv_attr_str8
                              and inv_attr_str9 = @inv_attr_str9
                              and inv_attr_str10 = @inv_attr_str10
                              and inv_attr_str11 = @inv_attr_str11
                              and inv_attr_str12 = @inv_attr_str12
                              and inv_attr_str13 = @inv_attr_str13
                              and inv_attr_str14 = @inv_attr_str14
                              and inv_attr_str15 = @inv_attr_str15
                              and inv_attr_str16 = @inv_attr_str16
                              and inv_attr_str17 = @inv_attr_str17
                              and inv_attr_str18 = @inv_attr_str18
                              and inv_attr_int1 = @inv_attr_int1
                              and inv_attr_int2 = @inv_attr_int2
                              and inv_attr_int3 = @inv_attr_int3
                              and inv_attr_int4 = @inv_attr_int4
                              and inv_attr_int5 = @inv_attr_int5
                              and inv_attr_flt1 = @inv_attr_flt1
                              and inv_attr_flt2 = @inv_attr_flt2
                              and inv_attr_flt3 = @inv_attr_flt3
                              and inv_attr_dte1 = @inv_attr_dte1
                              and inv_attr_dte2 = @inv_attr_dte2'
   }
}
catch(@?)
|
if ( @? != 0 )
    publish data where error_code = @? and error_descr = @!
else
    filter data where error_code = nvl(@error_code, 0)",4948,1,"20210202172744","","SLIMP_I",""
"SAL_VOI_VALIDATE_LOC_ALG","SL_RETR_MTHD_IMPL","MOCA","Validate Voice Location. This command is used by the system to validate a location number when the user is not currently at a location but is attempting to close a container","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and scanned = :i_n_scanned
                      and loc_num = :i_c_loc_num
                      and loc_chk = :i_c_loc_chk
       |
       process voice debug command where command = 'validate voice location
                 where terminal = @terminal
                      and operator = @operator
                      and scanned = @scanned
                      and loc_num = @loc_num
                      and loc_chk = @loc_chk'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",828,1,"20210202172755","","SLIMP_I",""
"SAL_VOI_VALIDATE_PA_LPN_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL VOICE - Validate Put Away License","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and license = :i_c_license
                      and scanned = :i_n_scanned
       |
       process voice debug command where command = 'process voice pa lpn
                 where terminal = @terminal
                      and operator = @operator
                      and license = @license
                      and scanned = @scanned'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_descr = nvl(@error_descr, '')",789,1,"20210202172803","","SLIMP_I",""
"SAL_VOI_VALIDATE_PTS_LOC_ALG","SL_RETR_MTHD_IMPL","MOCA","Validate Voice Location. This command is used by the system to validate a location number when the user is not currently at a location but is attempting to close a container","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and scanned = :i_n_scanned
                      and loc_num = :i_c_loc_num
                      and loc_chk = :i_c_loc_chk
       |
       process voice debug command where command = 'validate voice location
                 where terminal = @terminal
                      and operator = @operator
                      and scanned = @scanned
                      and loc_num = @loc_num
                      and loc_chk = @loc_chk'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",828,1,"20210202172811","","SLIMP_I",""
"SAL_VOI_VALIDATE_PTS_LPN_ALG","SL_RETR_MTHD_IMPL","MOCA","This algorithm is used to associate to retrieve method SAL_VOI_VALIDATE_PTS_LPN_RM to process and retrieve data","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal 
                            and operator = :i_c_operator 
                            and license = :i_c_license
                            and partial_license = :i_n_partial_license 
       |
       process voice debug command where command = 'process voice pts lpn 
         where terminal = @terminal 
            and operator = @operator
            and license = @license
            and partial_license = @partial_license'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = nvl(@error_code, 0) and error_desc = nvl(@error_descr, '')",806,1,"20210202172819","","SLIMP_I",""
"SAL_VOI_VALIDATE_RPL_LPN_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL VOICE - Validate Replenishment License","F","F","F","F","F","F","F","{
   if ( :i_c_terminal = 'ERROR' )
      set return status where status=10000 and message = 'Testing for error situation'
   else
   {
       publish data where terminal = :i_c_terminal
                      and operator = :i_c_operator
                      and rpl_num = :i_c_rpl_num
                      and license = :i_c_license
                      and qty = :i_n_qty
       |
       process voice debug command where command = 'validate voice rpl license
                 where terminal = @terminal
                      and operator = @operator
                      and rpl_num = @rpl_num
                      and license = @license
                      and qty = @qty'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",815,1,"20210202172827","","SLIMP_I",""
"SAL_VOI_VLDT_SERIAL_NUMBER_ALG","SL_RETR_MTHD_IMPL","MOCA","SAL Voice - Validate Serial Number","F","F","F","F","F","T","F","{
   if ( :i_c_terminal = 'ERROR' )
   {
      set return status where status=10000 and message = 'Testing for error situation'
   }
   else
   {
      publish data where terminal = :i_c_terminal 
                            and operator = :i_c_operator 
                            and serial_number = :i_c_serial_number 
                            and end_serial_number = :i_c_end_serial_number 
                            and wrkref = :i_c_wrkref
  |
      process voice debug command where command = 'process voice validate serial number
                   where terminal            = @terminal
                       and operator                = @operator
                       and serial_number        = @serial_number
                       and end_serial_number = @end_serial_number
                       and wrkref = @wrkref'
   }
}
catch(@?)
|
if ( @? != 0 )
   publish data where error_code = @? and error_descr=@!
else
   filter data where error_code = 0",971,1,"20210202172834","","SLIMP_I",""
"SAP_CHECK_CUS_RET_ORD","SL_IFD_SEG_BLOCK","MOCA","Check DESADV01 for Customer Return Order","F","F","F","F","F","F","T","[select decode(rtrim(:i_c_invtyp), 'R', 'T', 'F') from dual]",60,1,"20210202172858","","SLIMP_I",""
"SCARD_BLOCK_SENDING_METRICS","SL_EO_SEG_BLOCK","MOCA","Algorithm to block sending metrics information if LIST METRIC ACCUMULATIONS returns any data","T","F","F","F","F","F","T","list metric accumulations where cube_name = :i_c_cube_name and site_id = :i_c_wh_id and rqst_dt = :i_c_request_dt catch(-1403) >> nRecCount | if (rowcount(@nRecCount)!=0) publish data where block='T' else publish data where block='F'",233,1,"20210202172858","","SLIMP_I",""
"SEND CAR_INBOUND_QUALITY","SL_RETR_MTHD_IMPL","MOCA","Carrier Inbound Quality Algorithm","F","F","F","F","F","F","T","RETRIEVE CARRIER INBOUND QUALITY where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name |
if (@client_id) {
   filter data where client_id = @client_id and moca_filter_level = 2
}else {
   filter data where client_id = '----' and moca_filter_level = 2
}",331,1,"20210202172858","","SLIMP_I",""
"SEND INV_ACCURACY","SL_RETR_MTHD_IMPL","MOCA","Inventory Accuracy Algorithm","F","F","F","F","F","F","T","RETRIEVE INVENTORY ACCURACY where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name |
if (@client_id) {
   filter data where client_id = @client_id and moca_filter_level = 2
}else {
   filter data where client_id = '----' and moca_filter_level = 2
}",326,1,"20210202172858","","SLIMP_I",""
"SEND INV_ON_HAND","SL_RETR_MTHD_IMPL","MOCA","Inventory On Hand Algorithm","F","F","F","F","F","F","T","RETRIEVE INVENTORY ON HAND where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name |
if (@client_id) {
   filter data where client_id = @client_id and moca_filter_level = 2
}else {
   filter data where client_id = '----' and moca_filter_level = 2
}",325,1,"20210202172858","","SLIMP_I",""
"SEND INV_TURNS","SL_RETR_MTHD_IMPL","MOCA","Inventory Turns Algorithm","F","F","F","F","F","F","T","RETRIEVE INVENTORY TURNS where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name |
if (@client_id) {
   filter data where client_id = @client_id and moca_filter_level = 2
}else {
   filter data where client_id = '----' and moca_filter_level = 2
}",323,1,"20210202172858","","SLIMP_I",""
"SEND LOC_UTIL","SL_RETR_MTHD_IMPL","MOCA","Location Utilization Algorithm","F","F","F","F","F","F","T","RETRIEVE LOCATION UTILIZATION where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name",162,1,"20210202172858","","SLIMP_I",""
"SEND LOC_UTIL_BY_CLIENT","SL_RETR_MTHD_IMPL","MOCA","Location Utilization By Client Algorithm","F","F","F","F","F","F","T","RETRIEVE LOCATION UTILIZATION BY CLIENT where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name",172,1,"20210202172858","","SLIMP_I",""
"SEND ORD_EXCEPTIONS","SL_RETR_MTHD_IMPL","MOCA","Order Exceptions Algorithm","F","F","F","F","F","F","T","RETRIEVE ORDER EXCEPTIONS where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name |
if (@client_id) {
   filter data where client_id = @client_id and moca_filter_level = 2
}else {
   filter data where client_id = '----' and moca_filter_level = 2
}",324,1,"20210202172858","","SLIMP_I",""
"SEND OUTBOUND_ORDER","SL_RETR_MTHD_IMPL","MOCA","Outbound Order Algorithm","F","F","F","F","F","F","T","RETRIEVE OUTBOUND ORDERS where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name |
if (@client_id) {
   filter data where client_id = @client_id and moca_filter_level = 2
}else {
   filter data where client_id = '----' and moca_filter_level = 2
}",323,1,"20210202172858","","SLIMP_I",""
"SEND PICK_EXCEPTIONS","SL_RETR_MTHD_IMPL","MOCA","Pick Exceptions Algorithm","F","F","F","F","F","F","T","RETRIEVE PICK EXCEPTIONS where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name |
if (@client_id) {
   filter data where client_id = @client_id and moca_filter_level = 2
}else {
   filter data where client_id = '----' and moca_filter_level = 2
}",323,1,"20210202172858","","SLIMP_I",""
"SEND VEN_INBOUND_QUALITY","SL_RETR_MTHD_IMPL","MOCA","Vendor Inbound Quality Algorithm","F","F","F","F","F","F","T","RETRIEVE VENDOR INBOUND QUALITY where data_proc_dt = :i_c_request_dt and data_rqst_flg = :i_n_last_request_flg and wh_id = :i_c_wh_id and cube_name = :i_c_cube_name |
if (@client_id) {
   filter data where client_id = @client_id and moca_filter_level = 2
}else {
   filter data where client_id = '----' and moca_filter_level = 2
}",330,1,"20210202172858","","SLIMP_I",""
"SET_ABS_FOR_RPS","SL_IFD_FLD","MOCA","Set the field to absent indicator char if the value is .","F","F","F","F","F","F","T","sl_get data_attr
   where
         src_sys_id = :i_c_dest_sys_id
   and   value = :i_c_ifd_fld_data
|
if(@is_ = 'T')
{
   sl_get sys_data_attr
     where sys_id = :i_c_dest_sys_id
   |
   publish data where value = @absent_ind_char
}
else
{
   publish data where value = :i_c_ifd_fld_data
}",294,5,"20210202172858","","SLIMP_I",""
"SET_ALT_PRTTYP_FOR_RPS","SL_IFD_FLD","MOCA","Set the alternate Item type for RPS.
(Values - GTIN -->g, EAN-->e, UPC-->u, Any other-->c)","F","F","F","F","F","F","T","if (:i_c_alt_prt_typ = 'GTIN')
{
    publish data where fld_data = 'g'
}
else if (:i_c_alt_prt_typ = 'EAN')
{
    publish data where fld_data = 'e'
}
else if (:i_c_alt_prt_typ = 'UPC')
{
    publish data where fld_data = 'u'
}
else
{
    publish data where fld_data = 'c'
}",273,1,"20210202172858","","SLIMP_I",""
"SET_DEF_STKUOM_FOR_RPS","SL_IFD_FLD","MOCA","Set the default stock uom for RPS.","F","F","F","F","F","F","T","sl_get data_attr
   where
         src_sys_id = :i_c_dest_sys_id
   and   value = :i_c_ifd_fld_data
|
if(@is_ = 'T')
{
   publish data where value = 'EA'
}
else
{
   publish data where value = :i_c_ifd_fld_data
}",216,1,"20210202172858","","SLIMP_I",""
"SET_DEF_UNTCST_FOR_RPS","SL_IFD_FLD","MOCA","Set the default unit cost for RPS","F","F","F","F","F","F","T","sl_get data_attr
   where
         src_sys_id = :i_c_dest_sys_id
   and   value = :i_c_ifd_fld_data
|
if(@is_ = 'T')
{
   publish data where value = '0'
}
else
{
   publish data where value = :i_c_ifd_fld_data
}",215,1,"20210202172858","","SLIMP_I",""
"SET_INVSTS_IF_NULL","SL_IFD_FLD","MOCA","Get the Receive Status through from supplier item level, supplier level and item level if passed in Receive Status is NULL","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (:i_c_rcvsts = '')
{
    [select rcvsts ovrd_rcvsts
       from sup_prt
      where supnum = :i_c_supnum
        and client_id = :i_c_client_id
        and prtnum = :i_c_prtnum
        and prt_client_id = :i_c_client_id]catch(-1403)
    |
    if (@? = 0 and @ovrd_rcvsts != '')
    {
         publish data
             where rcvsts = @ovrd_rcvsts
    }
    else
    {
        [select rcvsts ovrd_rcvsts
           from supmst
          where supnum = :i_c_supnum
            and client_id = :i_c_client_id]catch(-1403)
        |
        if (@? = 0 and @ovrd_rcvsts != '')
        {
            publish data
                where rcvsts = @ovrd_rcvsts
        }
        else
        {
            [select rcvsts ovrd_rcvsts
               from prtmst
              where prtnum = :i_c_prtnum
                and wh_id_tmpl = :i_c_whse_id
                and prt_client_id = :i_c_client_id]catch(-1403)
            |
            if (@? = 0 and @ovrd_rcvsts != '' )
            {
                publish data
                    where rcvsts = @ovrd_rcvsts
            }
            else
            {
               get inbound full validation flag
               |
               if (@inb_full_vld_flg)
               {
                log full validation error message
                    where err_code = 2005
                      and def_err_msg = @!
                      and argid = "rcvsts"
                      and lookup_argdsc = "rcvsts"
               }
               |
               publish data
                   where rcvsts = ''
            }
        }
    }
}
else
{
     publish data
      where rcvsts = :i_c_rcvsts
}",1683,5,"20210202172858","","SLIMP_I",""
"SET_TRLR_NUM_ON_RECEIPT_MSTR","SL_IFD_FLD","MOCA","If it is not a tms load, set trlr_num to temp_trlr_num, else verify that this is the lowest delivery stop on the load.","F","F","F","F","F","F","T","if (:i_c_temp_trlr_num != '' and :i_c_tms_load_id != '' and :i_c_tms_stop_seq != '' )
{
    [select min(tms_stop_seq) min_stop_seq
       from rcvtrk
     where tms_load_id = :i_c_tms_load_id]catch(-1403)
    |
    if (@?=0 and @min_stop_seq != '')
    {
        if (@min_stop_seq < :i_c_tms_stop_seq)
        {
             publish data
                 where trlr_num = ''
        }
        else
        {
             publish data
                 where trlr_num = :i_c_temp_trlr_num
        }
    }
    else
    {
          publish data
             where trlr_num = :i_c_temp_trlr_num
    }
}
else
{
     publish data
      where trlr_num = :i_c_temp_trlr_num
}",666,5,"20210202172858","","SLIMP_I",""
"SHIP_ASN","SHIPPING","MOCA","In-transit Shipment ASN Information","F","F","F","F","F","F","T","list shipment asns rm
    where ordnum = :i_c_orgref
        and trlr_id = :i_c_trailer_id
        and client_id = :i_c_client_id
        and ordlin = :i_c_invlin
        and ordsln = :i_c_invsln
        and lotnum = :i_c_lotnum
        and orgcod = :i_c_orgcod
        and revlvl = :i_c_revlvl
        and supnum = :i_c_supnum
        and rttn_id = :i_c_rttn_id
        and dst_distro_id = :i_c_dst_distro_id
        and asn_sys = :i_c_asn_sys",444,1,"20210202172858","","SLIMP_I",""
"SHIP_DISTRO","SHIPPING","MOCA","Order line distribution information","F","F","F","F","F","F","T","list distro segments for asn
    where trailer_id = :i_c_trailer_id
        and wh_id = :i_c_wh_id
        and client_id = :i_c_client_id
        and ordnum = :i_c_orgref
        and invnum = :i_c_invnum
        and supnum = :i_c_supnum
        and expqty = :i_n_expqty
        and ordlin = :i_c_invlin
        and ordsln = :i_c_invsln
        and distro_id = :i_c_distro_id
        and dst_distro_id = :i_c_dst_distro_id
        and asn_sys = :i_c_asn_sys",456,1,"20210202172858","","SLIMP_I",""
"SHIP_SER_NUM","SHIPPING","MOCA","In-transit Shipment Serial Numbers","F","F","F","F","F","F","T","list shipment serial numbers rm
    where lodnum = :i_c_lodnum
      and subnum = :i_c_subnum
      and dtlnum = :i_c_dtlnum
      and inv_hist_id = :i_c_inv_hist_id
      and asn_sys = :i_c_asn_sys",198,1,"20210202172858","","SLIMP_I",""
"SHIPMENT_ORDER_LINE","SHIPPING","MOCA","Returns the intransit shipment's order line(s)","F","F","F","F","F","F","T","list shipment order lines rm
    where ordnum = :i_c_orgref
        and trlr_id = :i_c_trailer_id
        and client_id = :i_c_client_id
        and asn_sys = :i_c_asn_sys",171,1,"20210202172858","","SLIMP_I",""
"SHIPMENT_STATUS_CHG_INFO","SHIPPING","MOCA","Retrive shipment status changed information","F","F","F","F","F","F","T","publish data where ship_id = :i_c_ship_id and to_status = :i_c_to_status and fr_status = :i_c_fr_status",103,1,"20210202172858","","SLIMP_I",""
"SHIPMENT_STATUS_CHG_ORDERS","SHIPPING","MOCA","Retrive orders for which shipment status changed","F","F","F","F","F","F","T","[select distinct(ordnum) from shipment_line where ship_id = :i_c_ship_id and client_id = :i_c_client_id and wh_id = :i_c_wh_id]
|
[select * from ord where ordnum = @ordnum and client_id = :i_c_client_id and wh_id = :i_c_wh_id]",226,1,"20210202172858","","SLIMP_I",""
"SHIPMENT_STATUS_CHG_ORDLINS","SHIPPING","MOCA","Retrive order lines for which shipment status changed","F","F","F","F","F","F","T","[select * from ord_line where ordnum = :i_c_ordnum and client_id = :i_c_client_id and wh_id = :i_c_wh_id]",105,1,"20210202172858","","SLIMP_I",""
"SL_ACCUM_SAP_WMMBID01","SL_IFD_SEG_PROC","MOCA","Accumulate WMMBID01 from DCS to SAP","F","F","F","F","F","F","F","publish data where TCODE_FIELD = ':' || 'MBXYH_TCODE'|sl_apply sql_on_ifd_fld_data where i_evt_data_ptr = :i_c_evt_data_ptr and i_sql_expr = @TCODE_FIELD|sl_accum data where table_name = 'sl_es_sap_wmmbid01' and group_by_col_list = 'evt_id,es_sap_matnr,es_sap_lgort,es_sap_charg,es_sap_umlgo,es_sap_bwart,es_sap_insmk,es_sap_grund,es_sap_ebeln,es_sap_ebelp,es_sap_kostl,es_sap_tcode' and accum_col_list = 'es_sap_erfmg' and pk_seq_col = 'sl_es_sap_wmmbid01_seq' and evt_id = :I_C_EVT_ID and es_sap_matnr = :I_C_MBXYI_MATNR and es_sap_lgort = :I_C_MBXYI_LGORT and es_sap_charg = :I_C_MBXYI_CHARG and es_sap_umlgo = :I_C_MBXYI_UMLGO and es_sap_bwart = :I_C_MBXYI_BWART and es_sap_insmk = :I_C_MBXYI_INSMK and es_sap_grund = :I_C_MBXYI_GRUND and es_sap_ebeln = :I_C_MBXYI_EBELN and es_sap_ebelp = :I_C_MBXYI_EBELP and es_sap_kostl = :I_C_MBXYI_KOSTL and es_sap_tcode = @o_value and es_sap_erfmg = :I_C_MBXYI_ERFMG",910,1,"20210202171439","","SLIMP_I",""
"SL_ACK_XML_STRING_FROM_HTTP","SL_COMM","MOCA","Obsolete (no implementation) After getting and processing XML string, send ack or nack","F","F","F","F","F","F","F","sl_ack inb_string_from_http
where
      status = :i_n_status",60,1,"20210202171439","","SLIMP_I",""
"SL_ASYNC_MOCA_EXEC","SL_IFD_SEG_PROC","MOCA","Async MOCA Exec processing alg","F","F","F","F","F","T","F","sl_exec async_moca",18,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_APPLY_SQL_ON_EO_FLD","SL_IFD_FLD","MOCA","Apply SQL on the EO fields.  Constant Value speciefes a SQL EXPRESSION in this case that refers to the EO Fields as :eo_field_name","T","F","F","F","F","F","F","sl_apply sql_on_eo_fld_data where i_evt_data_ptr = :i_c_evt_data_ptr and i_sql_expr = :i_c_ifd_fld_misc_data",108,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_APPLY_SQL_ON_IFD_FLD","SL_IFD_FLD","MOCA","Apply SQL on the IFD fields.  Constant Value speciefes a SQL EXPRESSION in this case that refers to the IFD Fields as :ifd_field_name","T","F","F","F","F","F","F","sl_apply sql_on_ifd_fld_data where i_evt_data_ptr = :i_c_evt_data_ptr and i_ifd_fld_data_ptr = :I_C_IFD_FLD_DATA_PTR and i_ifd_fld_arr_siz = :I_N_IFD_FLD_ARR_SIZ and i_sql_expr = :i_c_ifd_fld_misc_data",201,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_GET_CHILD_EO_FLD","SL_IFD_FLD","MOCA","Get EO Field from a child segment.  The field is speacied without quotes as a constant value","T","F","F","F","F","F","F","sl_list eo_fld_from_evt_data_ptr where i_evt_data_ptr = :i_c_evt_data_ptr and i_eo_fld_id = :i_c_ifd_fld_misc_data | publish data where o_value = @o_value",154,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_GET_PARENT_EO_FLD","SL_IFD_FLD","MOCA","Get EO Field from a parent segment.  The field is speacied without quotes as a constant value","T","F","F","F","F","F","F","sl_list par_eo_fld_from_evt_data_ptr where i_evt_data_ptr = :i_c_evt_data_ptr and i_eo_fld_id = :i_c_ifd_fld_misc_data | publish data where o_value = @o_value",158,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_IFD_FLD_DEFAULT_LOGIC","SL_IFD_FLD","MOCA","Field Default Logic for IFD Fields. Constant Value specifies a SQL EXPRESSION.  For absent value on source system and verb of create, the expression will be evaluated to determine the value; and for change non-change of dest system will be used","F","F","F","F","F","T","F","publish data where <<OVERSTACKED_ARGS>>
|
sl_apply ifd_fld_default_logic
where
      src_sys_id = :i_c_evt_sys_id
and   dest_sys_id = :i_c_dest_sys_id
and   value = :i_c_ifd_fld_data
and   default_value = :i_c_ifd_fld_misc_data
and   moca_verb = ':i_c_moca_verb'",262,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_KW_VAL","SL_IFD_FLD","MOCA","Get KW Value. KW provided as constant value without quotes","F","F","F","F","F","F","F","sl_get kw_val where i_evt_data_ptr = :i_c_evt_data_ptr and kw_id = :i_c_ifd_fld_misc_data",89,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_LEFT","SL_IFD_FLD","MOCA","Take n characters from Left.  The number of characters is specified in the constant value field without quotes","F","F","F","F","F","F","F","sl_get left where i_string = :I_C_IFD_FLD_DATA and i_max_chars = :I_C_IFD_FLD_MISC_DATA",87,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_LEN","SL_IFD_FLD","MOCA","Take length of the field value","F","F","F","F","F","F","F","publish data where len = LENGTH(:I_C_IFD_FLD_DATA)",50,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_LOWER","SL_IFD_FLD","MOCA","Make the field value lower case","F","F","F","F","F","F","F","publish data where o_value = LOWER(:I_C_IFD_FLD_DATA)",53,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_NQ_NOCHGVAR","SL_IFD_FLD","MOCA","If the value of field is no-change return  else return value in quotes.  Use for :I_C_MOCA_NQ kind of variables","F","F","F","F","F","F","F","sl_set nq_nochg_var where value = :I_C_IFD_FLD_DATA and src_sys_id = :i_c_evt_sys_id",84,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_NQ_NULLVAR","SL_IFD_FLD","MOCA","If the value of field is  return  else return value in quotes.  Use for :I_C_MOCA_NQ kind of variables","F","F","F","F","F","F","F","sl_set nq__var where value = :I_C_IFD_FLD_DATA and src_sys_id = :i_c_evt_sys_id",83,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_NVL","SL_IFD_FLD","MOCA","If value is  or spaces use the value specified as constant value","F","F","F","F","F","F","F","publish data where o_value = nvl(:I_C_IFD_FLD_DATA,:I_C_IFD_FLD_MISC_DATA)",74,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_REPLACE","SL_IFD_FLD","MOCA","From the field value replace first argument with second argument.  The arguments are expressed as constant value.  It is a coma separated list where the first argument is replaced with the second argument.","F","F","F","F","F","F","F","sl_parse arg where i_arg_list = :I_C_IFD_FLD_MISC_DATA | sl_replace string where str = :I_C_IFD_FLD_DATA and look_for = @o_arg1 and repl_with = @o_arg2",151,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_RIGHT","SL_IFD_FLD","MOCA","Take n characters from right.  The number of characters is specified in the constant value field without quotes","F","F","F","F","F","F","F","sl_get right where i_string = :I_C_IFD_FLD_DATA and i_max_chars = :I_C_IFD_FLD_MISC_DATA",88,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_SET_NULL_OR_NOCHG_IND","SL_IFD_FLD","MOCA","Set the  ind or no-chg ind based on source and dest system.  If value is no change or  character on the source system, it is changed to the corresponding characters of the destination system","F","F","F","F","F","F","F","sl_set no_chg_or__ind where i_src_sys_id = :i_c_evt_sys_id and i_dest_sys_id = :i_c_dest_sys_id and i_value = :i_c_ifd_fld_data and i_value_len = :i_n_ifd_fld_len",166,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_SUBSTR","SL_IFD_FLD","MOCA","Take n characters from anywhere.  Constant Value field specifies the starting position and the length as a comma spearated list.  Do not use quotes to specify this data. e.g. 2,3","F","F","F","F","F","F","F","sl_parse arg where i_arg_list = :I_C_IFD_FLD_MISC_DATA | publish data where o_value = SUBSTR(:I_C_IFD_FLD_DATA,@o_arg1,@o_arg2)",127,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_TRANSLATE","SL_IFD_FLD","MOCA","Translate the field value.  Use the coma separated list in the constant value.  This maps to Oracle PL/SQL's translate function","F","F","F","F","F","F","F","sl_parse arg where i_arg_list = :I_C_IFD_FLD_MISC_DATA | sl_apply plsql_function where i_function_name = 'translate' and i_value = :I_C_IFD_FLD_DATA and i_arg1 = @o_arg1 and i_arg2 = @o_arg2",190,1,"20210202171439","","SLIMP_I",""
"SL_CHAR_UPPER","SL_IFD_FLD","MOCA","Make the field value upper case","F","F","F","F","F","F","F","publish data where o_value = UPPER(:I_C_IFD_FLD_DATA)",53,1,"20210202171439","","SLIMP_I",""
"SL_DOC_BLK_STK_STS_MAP","SL_IFD_SEG_BLOCK","MOCA","Block generation of Stock Status Map link when no records are defined","F","F","F","F","F","F","F","[
  select 'T' result from dual where not exists
  (select 'X' from sl_es_sap_loc_map)
]",88,1,"20210202171438","","SLIMP_I",""
"SL_DOC_CLEAN_FILENAME","SL_IFD_FLD","MOCA","Cleans filename from invalid characters  '/', '\', '*', '?', ':', '<', '>' and also from spaces ' '","F","F","F","F","F","F","F","if (:i_c_ifd_fld_data != '')
{
   publish data where repl_with = '_' and o_value = lower(:i_c_ifd_fld_data)
   |
   sl_replace where str = @o_value and look_for = ' '
   |
   sl_replace where str = @o_value and look_for = '/'
   |
   sl_replace where str = @o_value and look_for = '\'
   |
   sl_replace where str = @o_value and look_for = '*'
   |
   sl_replace where str = @o_value and look_for = '?'
   |
   sl_replace where str = @o_value and look_for = ':'
   |
   sl_replace where str = @o_value and look_for = '<'
   |
   sl_replace where str = @o_value and look_for = '>'
   |
   publish data where res = @o_value
}
else
{
        publish data where res = ''
}",668,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GEN_FILENAME","SL_COMM","MOCA","creates a file name from IFD_DATA_SEQ based with IFD field specified (fld_id)","F","F","F","F","F","T","F","sl_generate doc filename from ifd data  where <<OVERSTACKED_ARGS>>  and pre_filename = :I_C_PRE_FILENAME  and post_filename = :I_C_POST_FILENAME and fld_id = :I_C_LOOK_FLD_ID",174,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GET_ALG_CODE","SL_IFD_FLD","MOCA","Get Algorithm Code Value","F","F","F","F","F","F","F","if (:i_c_ifd_fld_data != '')
{
 /*doc_get alg_code where alg_id = :i_c_ifd_fld_data*/
 [select code from sl_alg_def where alg_id = :i_c_ifd_fld_data]
}
else
{
 publish data where res = ''
}
/*[select '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890' alg_code from dual]*/",354,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GET_DOC_PATH","SL_COMM","MOCA","Get documents directory","F","F","F","F","F","T","F","sl_get doc_directory_from_ifd_data
where <<OVERSTACKED_ARGS>>
  and base_dir = :I_C_BASE_DIR
  and locale_id = :I_C_LOOK_LOCALE_ID",130,1,"20210202171440","","SLIMP_I",""
"SL_DOC_GET_IFD_FLD","SL_RETR_MTHD_IMPL","MOCA","Get Inbound IFD Field Information","F","F","F","F","F","F","F","sl_list ifd_fld_with_fld_pos
 where ifd_id = :i_c_ifd_id
   and ifd_ver = :i_c_ifd_ver
   and ifd_seg_id = :i_c_ifd_seg_id
   and locale_id = :i_c_locale_id",156,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GET_IFD_INFO","SL_RETR_MTHD_IMPL","MOCA","Get IFD Definition Information","F","F","F","F","F","F","F","sl_list ifd_def
 where ifd_id = :i_c_ifd_id
   and ifd_ver = :i_c_ifd_ver
   and locale_id = :i_c_locale_id",107,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GET_IFD_SEG","SL_RETR_MTHD_IMPL","MOCA","Get IFD Segment","F","F","F","F","F","F","F","sl_list ifd_seg
 where ifd_id = :i_c_ifd_id
   and ifd_ver = :i_c_ifd_ver
   and ifd_seg_id = :i_c_ifd_seg_id
   and locale_id = :i_c_locale_id",143,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GET_IFD_TREE","SL_RETR_MTHD_IMPL","MOCA","Get IFD Tree","F","F","F","F","F","F","F","sl_list ifd tree for ifd where ifd_id = :i_c_ifd_id and ifd_ver = :i_c_ifd_ver and locale_id = :i_c_locale_id",109,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GET_IRIFD_FLD_MAPPING","SL_RETR_MTHD_IMPL","MOCA","Get Result IFD Field Information For Source inbound IFD","F","F","F","F","F","F","F","publish data where ifd_fld_ordr = -1 |
sl_list mappings for result ifd   where iifd_id= :i_c_iifd_id  /*Inbound triggering IFD */  and iifd_ver= :i_c_iifd_ver  /*Inbound triggering IFD Version */  and evt_id= :i_c_evt_id  /*Event Generated */  and rifd_id= :i_c_ifd_id /*Resultant IFD */  and rifd_ver= :i_c_ifd_ver /*Resultant IFD Version */
and sys_id = decode( :i_c_iifd_id, '', :i_c_trg_sys_id, )
|
sl_list ifd_fld
  where ifd_id = :i_c_ifd_id
    and ifd_ver = :i_c_ifd_ver
    and ifd_seg_id = @ifd_seg_id
    and ifd_fld_id = @ifd_fld_id
    and locale_id = :i_c_locale_id catch(-1403)
|
if (@? != -1403)
{
    publish data
      where ifd_fld_ordr = nvl(@ifd_fld_ordr, -1)
        and @+validation_cmnt
        and @+required_flg
        and @+default_val_cmnt
}
|
[ select to_char(sum(decode(ifd_fld_id, @ifd_fld_id, 1, ifd_fld_len))) ifd_fld_pos
  from sl_ifd_fld
  where ifd_id = :i_c_ifd_id
    and ifd_ver = :i_c_ifd_ver
    and ifd_seg_id = @ifd_seg_id
    and ( ifd_fld_ordr < @ifd_fld_ordr
          or (ifd_fld_ordr = @ifd_fld_ordr and ifd_fld_id <= @ifd_fld_id))
] catch(-1403)
|
filter data
where moca_filter_level = 4 /* Filter level is 4 now */
and ifd_fld_pos = @ifd_fld_pos
  and validation_cmnt = @validation_cmnt
  and required_flg = @required_flg
  and default_val_cmnt = @default_val_cmnt",1319,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GET_ITRG_TABS","SL_RETR_MTHD_IMPL","MOCA","Get Remote Trigger System Tables","F","F","F","F","F","F","F","sl_list ifd_seg
 where ifd_id = :i_c_ifd_id
   and ifd_ver = :i_c_ifd_ver
   and locale_id = :i_c_locale_id",107,1,"20210202171438","","SLIMP_I",""
"SL_DOC_GET_RIFD_FLD_MAPPING","SL_RETR_MTHD_IMPL","MOCA","Get Result IFD Field Information For Source","F","F","F","F","F","F","F","publish data where ifd_fld_ordr = -1 |
sl_list mappings for result ifd   where iifd_id= :i_c_iifd_id  /*Inbound triggering IFD */  and iifd_ver= :i_c_iifd_ver  /*Inbound triggering IFD Version */  and sys_id= :i_c_sys_id   /*Inbound triggering system */  and evt_id= :i_c_evt_id  /*Event Generated */  and rifd_id= :i_c_ifd_id /*Resultant IFD */  and rifd_ver= :i_c_ifd_ver /*Resultant IFD Version */
|
[select nvl(ifd_fld_ordr, -1) ifd_fld_ordr ,
        validation_cmnt validation_cmnt,
        required_flg required_flg,
        default_val_cmnt default_val_cmnt
 from sl_ifd_fld
 where ifd_id = :i_c_ifd_id
   and ifd_ver = :i_c_ifd_ver
   and ifd_seg_id = @ifd_seg_id
   and ifd_fld_id = @ifd_fld_id
] catch(-1403)
|
[ select to_char(sum(decode(ifd_fld_id, @ifd_fld_id, 1, ifd_fld_len))) ifd_fld_pos
  from sl_ifd_fld
  where ifd_id = :i_c_ifd_id
    and ifd_ver = :i_c_ifd_ver
    and ifd_seg_id = @ifd_seg_id
    and ( ifd_fld_ordr < @ifd_fld_ordr
          or (ifd_fld_ordr = @ifd_fld_ordr and ifd_fld_id <= @ifd_fld_id))
] catch(-1403)
|
filter data
where moca_filter_level = 3
and ifd_fld_pos = @ifd_fld_pos
and validation_cmnt = @validation_cmnt
and required_flg = @required_flg
and default_val_cmnt = @default_val_cmnt",1230,1,"20210202171438","","SLIMP_I",""
"SL_DOC_PRODUCE_IFD_SCHEMA","SL_IFD_SEG_PROC","MOCA","Produce ifd xml schema","F","F","F","F","F","F","F","if( :I_C_IFD_SCHEMA = 'W3C' )
{
   [[dir_sep = java.io.File.separator;]] catch (@?)
   |
   publish data
   where sys_id = 'SL_DOC'
     and comm_mode_cd = 'SYNCD'
     and comm_dir_cd = 'O'
     and ifd_id = :I_C_IFD_ID
     and ifd_ver = :I_C_IFD_VER
     and schema_ifd_id = :I_C_SCHEMA_IFD_ID
     and schema_ifd_ver = :I_C_SCHEMA_IFD_VER
   |
   sl_get comm_mthd_id
   where sys_id = @sys_id
     and comm_mode_cd = @comm_mode_cd
     and comm_dir_cd = @comm_dir_cd
     and IFD_ID = @ifd_id
     and IFD_VER = @ifd_ver
   |
   publish data
     where doc_dir = nvl(:I_C_DIRECTORY,'${LESDIR}/docs/integration')
   |
   [[doc_dir = MocaUtils.expandEnvironmentVariables(moca,doc_dir)]]
   |
   publish data
   where mxml_ctxt = NULL
   |
   if( :I_C_IFD_SCHEMA = 'W3C' )
   {
      sl_get xml w3c schema for ifd
      where ifd_id = @schema_ifd_id
        and ifd_ver = @schema_ifd_ver
        and parent_tag = NULL
        and show_ifd_tag = 'T'
        and e_ifd_id = NULL
        and e_ifd_ver = NULL
      |
      write xml file
      where mxml_ctxt = @mxml_ctxt
        and filename = @doc_dir || @dir_sep || :I_C_IFD_SCHEMA_DOC_NAME
      |
      stop xml parser where mxml_ctxt = @mxml_ctxt
   }
}
else
{
  publish data where result = 'OK'
}",1252,1,"20210202171438","","SLIMP_I",""
"SL_DOC_RESET_NUMBER","SL_IFD_FLD","MOCA","Set value as  if value is less than 1","F","F","F","F","F","F","F","publish data
where o_value = :i_c_ifd_fld_data
|
if(@o_value < 1)
{
    publish data where res = ''
}
else
{
    publish data where res = @o_value
}",148,1,"20210202171440","","SLIMP_I",""
"SL_DT_ADD_DAYS","SL_IFD_FLD","MOCA","Add days to the field value.  Number of days to add is provided as a constant value","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_add days where i_value = :I_C_IFD_FLD_DATA and i_increase_by = :I_C_IFD_FLD_MISC_DATA
|
sl_apply dt_format where i_value = @o_value and i_format = :I_C_FLD_FMT",248,1,"20210202171439","","SLIMP_I",""
"SL_DT_APPLY_SQL_ON_EO_FLD","SL_IFD_FLD","MOCA","Apply SQL on the EO fields","T","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_apply sql_on_eo_fld_data where i_evt_data_ptr = :i_c_evt_data_ptr and i_sql_expr = :i_c_ifd_fld_misc_data
|
sl_apply dt_format where i_value = @o_value and i_format = :I_C_FLD_FMT",268,1,"20210202171439","","SLIMP_I",""
"SL_DT_APPLY_SQL_ON_IFD_FLD","SL_IFD_FLD","MOCA","Apply SQL on the IFD fields","T","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_apply sql_on_ifd_fld_data where i_evt_data_ptr = :i_c_evt_data_ptr and i_ifd_fld_data_ptr = :I_C_IFD_FLD_DATA_PTR and i_ifd_fld_arr_siz = :I_N_IFD_FLD_ARR_SIZ and i_sql_expr = :i_c_ifd_fld_misc_data
|
sl_apply dt_format where i_value = @o_value and i_format = :I_C_FLD_FMT",361,1,"20210202171439","","SLIMP_I",""
"SL_DT_GET_CHILD_EO_FLD","SL_IFD_FLD","MOCA","Get EO Field from a child segment","T","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_list eo_fld_from_evt_data_ptr where i_evt_data_ptr = :i_c_evt_data_ptr and i_eo_fld_id = :i_c_ifd_fld_misc_data
|
publish data where o_value = @o_value
|
sl_apply dt_format where i_value = @o_value and i_format = :I_C_FLD_FMT",314,1,"20210202171439","","SLIMP_I",""
"SL_DT_GET_PARENT_EO_FLD","SL_IFD_FLD","MOCA","Get EO Field from a parent segment","T","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_list par_eo_fld_from_evt_data_ptr where i_evt_data_ptr = :i_c_evt_data_ptr and i_eo_fld_id = :i_c_ifd_fld_misc_data
|
publish data where o_value = @o_value
|
sl_apply dt_format where i_value = @o_value and i_format = :I_C_FLD_FMT",318,1,"20210202171439","","SLIMP_I",""
"SL_DT_IFD_FLD_DEFAULT_LOGIC","SL_IFD_FLD","MOCA","Field Default Logic for IFD Fields.  Constant Value specifies a SQL EXPRESSION.  For absent value on source system and verb of create, the expression will be evaluated to determine the value; and for change non-change of dest system will be used","F","F","F","F","F","T","F","publish data where <<OVERSTACKED_ARGS>>
|
sl_apply ifd_fld_default_logic
where
      src_sys_id = :i_c_evt_sys_id
and   dest_sys_id = :i_c_dest_sys_id
and   value = :i_c_ifd_fld_data
and   default_value = :i_c_ifd_fld_misc_data
and   moca_verb = ':i_c_moca_verb'
and   data_typ_cd = 'D'
|
sl_apply dt_format where i_value = @o_value and i_format = :i_c_fld_fmt",360,1,"20210202171439","","SLIMP_I",""
"SL_DT_KW_VAL","SL_IFD_FLD","MOCA","Get KW Value.  KW provided as constant value","F","F","F","F","F","F","F","sl_get kw_val where i_evt_data_ptr = :i_c_evt_data_ptr and kw_id = :i_c_ifd_fld_misc_data
|
sl_apply dt_format where i_value = @kw_val and i_format = :I_C_FLD_FMT",162,1,"20210202171439","","SLIMP_I",""
"SL_DT_NOW","SL_IFD_FLD","MOCA","Get current datetime according to format (i.e java formats and sql formats.)","F","F","F","F","F","F","F","sl_get now where format = :i_c_fld_fmt",38,1,"20210202171440","","SLIMP_I",""
"SL_DT_SUBTRACT_DAYS","SL_IFD_FLD","MOCA","Subtract days from the field value.  Number of days provided as constant valie","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_subtract days where i_value = :I_C_IFD_FLD_DATA and i_increase_by = :I_C_IFD_FLD_MISC_DATA
|
sl_apply dt_format where i_value = @o_value and i_format = :I_C_FLD_FMT",253,1,"20210202171439","","SLIMP_I",""
"SL_ES_SAP_GET_ADJ_MOV_TYP","SL_IFD_FLD","MOCA","Get SAP movement type from adj qty and WMS status","F","F","F","F","F","F","F","sl_parse arg where i_arg_list = :i_c_ifd_fld_data
|
sl_es_sap_get adj_mov_typ where adj_qty = @o_arg1 and wms_stk_sts = @o_arg2",127,1,"20210202171439","","SLIMP_I",""
"SL_ES_SAP_GET_HOST_LOC","SL_IFD_FLD","MOCA","Get SAP host location from WMS status","F","F","F","F","F","F","F","sl_es_sap_get hst_loc where wms_stk_sts = :i_c_ifd_fld_data",59,1,"20210202171439","","SLIMP_I",""
"SL_ES_SAP_GET_HOST_STS","SL_IFD_FLD","MOCA","Get SAP host status from WMS status","F","F","F","F","F","F","F","sl_es_sap_get stk_sts where wms_stk_sts = :i_c_ifd_fld_data
|
[select decode (@hst_stk_sts, 'U', ,  @hst_stk_sts) hst_stk_sts from dual]",140,1,"20210202171439","","SLIMP_I",""
"SL_ES_SAP_GET_STS_MOV_TYP","SL_IFD_FLD","MOCA","Get SAP mov typ from wms from and to statuses","F","F","F","F","F","F","F","sl_parse arg where i_arg_list = :i_c_ifd_fld_data
|
sl_es_sap_get stk_mov_typ where src_wms_sts = @o_arg1 and dst_wms_sts = @o_arg2",131,1,"20210202171439","","SLIMP_I",""
"SL_EVT_ARG_FROM_STACK_AS_ROWS","SL_RETR_MTHD_IMPL","MOCA","Get the event argument values from the MOCA stack.  Values returned as rows","F","F","F","F","F","F","F","sl_get evt_arg_data_from_stack where evt_id = :i_c_sl_evt_id and sl_return_as_rows = 'T'",88,1,"20210202171439","","SLIMP_I",""
"SL_EVT_ARG_VALUES_FROM_STACK","SL_RETR_MTHD_IMPL","MOCA","Get the event argument values from the MOCA stack.  Values returned as columns","F","F","F","F","F","F","F","sl_get evt_arg_data_from_stack where evt_id = :i_c_sl_evt_id",60,1,"20210202171439","","SLIMP_I",""
"SL_EVT_WHERE_CLAUSE","SL_RETR_MTHD_IMPL","MOCA","Get the where clause passed to the log event call","F","F","F","F","F","F","F","sl_list evt_where_clause",24,1,"20210202171439","","SLIMP_I",""
"SL_FTP_MOVE_INB_FILE","SL_COMM","MOCA","When done, move the inbound file","F","F","F","F","F","T","F","/* Ignore trigger file, since it should never be downloaded. */
sl_move inb_file
  where succ_dir = :i_c_succ_dir
    and fail_dir = :i_c_fail_dir
    and file_path = :i_v_alg_context
    and status = :i_n_status
  catch(@?)
|
publish data
  where move_status = @?
|
/* Attempt to run transaction if status OK or NOT_FOUND, even if could not move file */
if(:i_n_status = 0 and :i_c_run_tran_flg = 'T')
{
    sl_process dwnld
         where dwnld_stat_cd = 'EPROC' and <<OVERSTACKED_ARGS>> catch (-1403)
}
|
set return status where status = @move_status",553,1,"20210202171440","","SLIMP_I",""
"SL_GEN_CHANGE","SL_IFD_SEG_PROC","MOCA","Generic Change component","F","F","F","F","F","T","F","sl_change gen_maint",19,1,"20210202171439","","SLIMP_I",""
"SL_GEN_FILENAME","SL_COMM","MOCA","creates a file name from IFD_DATA_SEQ","F","F","F","F","F","F","F","sl_gen filename where use_current = :I_C_USE_CURRENT and pre_filename = :I_C_PRE_FILENAME and post_filename = :I_C_POST_FILENAME and alg_id_cd = :I_N_ALG_ID_CD",159,1,"20210202171439","","SLIMP_I",""
"SL_GEN_FILENAME_PRE","SL_COMM","MOCA","Creates a file name from IFD_DATA_SEQ.  Only use this algorithm if the communication method generates the filename in a pre-algorithm not in the processing algorithm. This algorithm was created to help solve the problem where filenames were skipped.","F","F","F","F","F","F","F","sl_gen filename where use_current = :I_C_USE_CURRENT and pre_filename = :I_C_PRE_FILENAME and post_filename = :I_C_POST_FILENAME and alg_id_cd = :I_N_ALG_ID_CD and gen_only_in_prealg_flg = 'T'",192,1,"20210202171439","","SLIMP_I",""
"SL_GEN_JMS_MSG_ATTRS","SL_COMM","MOCA","(SAMPLE) Creates a request variable assigned to a MOCA result set that holds custom JMS Message Attributes. It must return a request variable name. Notice: Intended to be used with a JMSMQ communication method attribute","F","F","F","F","F","F","F","[[
import com.redprairie.seamles.components.jms.JmsPropTypeCd;
requestAttr = "CUSTOM_JMS_PROPERTIES";

// Set Custom properties
MocaResults res = new SimpleResults();
res.addColumn("PROP_NAM", MocaType.STRING);
res.addColumn("PROP_TYP", MocaType.STRING);
res.addColumn("STR_VAL", MocaType.STRING);
res.addColumn("BOOLEAN_VAL", MocaType.BOOLEAN);
res.addColumn("INT_VAL", MocaType.INTEGER);
res.addColumn("FLOAT_VAL", MocaType.DOUBLE);
// TODO set the value based on IFD Data details
// res.addRow();
// res.setStringValue("PROP_NAM", "CustomStr");
// res.setStringValue("PROP_TYP", JmsPropTypeCd.STRING);
// res.setStringValue("STR_VAL", "Custom String");
// res.addRow();
// res.setStringValue("PROP_NAM", "CustomBoolean");
// res.setStringValue("PROP_TYP", JmsPropTypeCd.BOOLEAN);
// res.setBooleanValue("BOOLEAN_VAL", true);
// res.addRow();
// res.setStringValue("PROP_NAM", "CustomInt");
// res.setStringValue("PROP_TYP", JmsPropTypeCd.INT);
// res.setIntValue("INT_VAL", 1);
// res.addRow();
// res.setStringValue("PROP_NAM", "CustomFloat");
// res.setStringValue("PROP_TYP", JmsPropTypeCd.DOUBLE);
// res.setDoubleValue("FLOAT_VAL", 1.0);

// Set request attribute
MocaUtils.currentContext().setRequestAttribute(requestAttr, res);
]]",1240,1,"20210202171438","","SLIMP_I",""
"SL_GEN_JMS_REPLYTO","SL_COMM","MOCA","(SAMPLE) Creates a request variable assigned to an JMS Reply To Destination for JMS Message.  It must return a request variable name. Notice:Intended to be used with a JMSMQ communication method attribute","F","F","F","F","F","F","F","[[import javax.jms.*;
requestAttr = "JMS_REPLYTO";

// TODO set the value based on IFD Data details
Queue replyTo = ;

// Set request attribute
MocaUtils.currentContext().setRequestAttribute(requestAttr, replyTo);
]]",220,1,"20210202171438","","SLIMP_I",""
"SL_GET_COMM_DATA","SL_IFD_FLD","MOCA","Get data from Comm processing","F","F","F","F","F","F","F","sl_get ifd_data_kw where mode_cd = 'G' and parm_cd = :I_C_PARM_CD",65,1,"20210202171439","","SLIMP_I",""
"SL_GET_CURR_SEQUENCE","SL_IFD_FLD","MOCA","Get the current Sequence number.  The sequence name is specified as constant value","F","F","F","F","F","F","F","sl_get sequence where seq_name = :I_C_IFD_FLD_MISC_DATA and use_current = 'T'",77,1,"20210202171439","","SLIMP_I",""
"SL_GET_ENV_VAR","SL_IFD_FLD","MOCA","Get an Environment variable.  Environment variable is specified as a constant value","F","F","F","F","F","F","F","sl_get env_var where env_name = :I_C_IFD_FLD_MISC_DATA",54,1,"20210202171439","","SLIMP_I",""
"SL_GET_FTP_PROC_FILE","SL_COMM","MOCA","Process an inbound file","F","F","F","F","F","F","F","sl_split filename where full_file_name = :i_v_alg_context
|
/* Temporarily resolve environment variables, remove it once MOCA-4202 is completed */
publish data where tmp_dir = :i_c_tmp_dir
|
[[tmp_dir = MocaUtils.expandEnvironmentVariables(moca,tmp_dir)]]
|
publish data
  where srcdir = :i_c_path
    and srcfile = @s_orig_filename
    and host = :i_c_host
    and port = decode(:i_c_port, '', , :i_c_port)
    and user = :i_c_user
    and pass = decode(:i_c_pass, '', , :i_c_pass)
    and use_sftp = :i_c_use_sftp
    and destdir = @tmp_dir
    and destfile = @s_orig_filename
    and mode = :i_c_mode
|
if(:i_c_use_sftp = 'T')
{
    publish data
      where pk_file = decode(:i_c_pk_file, '', , :i_c_pk_file)
        and pk_password = decode(:i_c_pk_pass, '', , :i_c_pk_pass)
    |
    get sftp
}
else
{
    get ftp
}
|
if(@? != 0)
{
    write trace message
        where level = 'W'
          and message = 'Could not get any files from '||:i_c_path||', connection, authorization or permission denied!'
}
|
/* Set up schema, XSL style sheet */
[[dir_sep = java.io.File.separator;]] catch (@?)
|
publish data
  where schema_dir = :i_c_schema_dir
    and xsl_dir = :i_c_xsl_dir
|
[[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
|
[[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
|
if (:i_c_schema_filename)
{
    publish data
      where schema_filename = decode(@schema_dir || 'X',
                'X', :i_c_schema_filename,
                @schema_dir || @dir_sep || :i_c_schema_filename)
}
|
if (:i_c_xsl_filename)
{
    publish data
      where xsl_filename = decode(@xsl_dir || 'X',
                'X', :i_c_xsl_filename,
                @xsl_dir || @dir_sep || :i_c_xsl_filename)
}
|
try
{
    sl_proc inb_file
      where filename = :i_v_alg_context
        and sys_id = :i_c_sys_id
        and run_tran_flg = :i_c_run_tran_flg
        and xml_file_flg = :i_c_xml_file_flg
        and data_parent_node = :i_c_data_parent_node
        and ignore_seg_list = :i_c_ignore_seg_list
        and merge_from_sibling_seg = :i_c_merge_from_sibling_seg
        and decrypt_RPBF = :i_c_decrypt_RPBF
        and block_size = :i_n_block_size
        and ext_codepage = :i_c_ext_codepage
        and schema_filename = @schema_filename
        and xsl_filename = @xsl_filename
        and blocking_flg = :i_c_blocking_flg
}
finally
{
    /* If download was created */
    if(@? = 0)
    {
        /* Remove remote trigger file */
        sl_get trigger_file_name
         where filename = @s_orig_filename
           and trg_ext = :i_c_trg_ext
           and trg_prefix = :i_c_trg_prefix
         catch (@?)
        |
        if(@trg_filename)
        {
            publish data
              where targetdir = :i_c_path
                and targetfile = @trg_filename
                and host = :i_c_host
                and port = decode(:i_c_port, '', , :i_c_port)
                and user = :i_c_user
                and pass = :i_c_pass
            |
            if(:i_c_use_sftp = 'T')
            {
                publish data
                  where pk_file = decode(:i_c_pk_file, '', , :i_c_pk_file)
                    and pk_password = decode(:i_c_pk_pass, '', , :i_c_pk_pass)
                |
                remove sftp catch (@?)
            }
            else
            {
                remove ftp catch (@?)
            }
        }
        |
        /* Remove remote data file */
        publish data
          where targetdir = :i_c_path
            and targetfile = @s_orig_filename
            and host = :i_c_host
            and port = decode(:i_c_port, '', , :i_c_port)
            and user = :i_c_user
            and pass = :i_c_pass
        |
        if(:i_c_use_sftp = 'T')
        {
            publish data
              where pk_file = decode(:i_c_pk_file, '', , :i_c_pk_file)
                and pk_password = decode(:i_c_pk_pass, '', , :i_c_pk_pass)
            |
            remove sftp catch (@?)
        }
        else
        {
            remove ftp catch (@?)
        }
        |
        if(@? != 0)
        {
            write trace message
                where level = 'W'
                  and message = 'Could not remove any files from '||:i_c_path||', connection, authorization or permission denied!'
        }
    }
    else
    {
        write trace message
            where level = 'W'
              and message = 'Did not remove any files from '||:i_c_path||', since no download was created!'
    }
}",4525,1,"20210202171440","","SLIMP_I",""
"SL_GET_HOST_NAME","SL_KW_ALG","MOCA","Get the Host name","F","F","F","F","F","F","F","sl_get host_name",16,1,"20210202171439","","SLIMP_I",""
"SL_GET_IFD_DATA_DTL_FLDS","SL_RETR_MTHD_IMPL","MOCA","Example used to get the fields of the first inbound IFD Data Detail as columns","F","F","F","F","F","F","F"," sl_list ifd_data_fld where /* ifd_data_ptr gotten from MOCA stack */ return_as_projection = 'T' and ifd_data_dtl_seq = 0 /* force to first segment */",150,1,"20210202171439","","SLIMP_I",""
"SL_GET_IFD_DATA_DTL_FLDS_ROWS","SL_RETR_MTHD_IMPL","MOCA","Example used to get the fields the first inbound IFD Data Detail as rows","F","F","F","F","F","F","F","  sl_list ifd_data_fld where /* ifd_data_ptr gotten from MOCA stack */ return_as_projection = 'F' and ifd_data_dtl_seq = 0 /* force to first segment */",151,1,"20210202171439","","SLIMP_I",""
"SL_GET_IFD_DATA_DTL_SEQ","SL_KW_ALG","PLSQL","Get the IFD Data Detail Sequence","T","F","F","F","F","F","F","declare v_evt_data_rec sl_env.evt_data_rec_typ; begin v_evt_data_rec := sl_env.get_evt_data; :o_n_result := v_evt_data_rec.v_gen_ifd_data_dtl_seq+1; end;",153,1,"20210202171439","","SLIMP_I",""
"SL_GET_INB_FILES","SL_COMM","MOCA","Get Inbound Files from a directory with a trigger extention","F","F","F","F","F","F","F","/* Retrieve all files in i_c_path matching i_c_file_pattern sorted by i_c_by_date_flg */
/*   that */
/*   if i_c_trg_ext defined */
/*     must have a another file in the i_c_path with same name except ends with extension */
/*   if i_c_trg_prefix defined */
/*     must have a another file in the i_c_path with same name except starts prefix */
/*   if neither i_c_trg_ext nor i_c_trg_prefix defined and have a i_c_dir defined */
/*     must have succ_dir created */
/*     and must NOT have same file already existing in the i_c_succ_dir */
if(:i_c_succ_dir)
{
   get file info
         where
            pathname = :i_c_succ_dir
}
else
{
  publish data where type = 'D'
}
|
if(@type = 'D')
{
   sl_get inb_files
   where
         path = :i_c_path || '/' || :i_c_file_pattern
   and   trg_ext = :i_c_trg_ext
   and   trg_prefix = :i_c_trg_prefix
   and   by_date_flg = :i_c_by_date_flg
   |
   if(@full_file_name)
   {
      /* If using trigger file, (i_c_trg_ext or i_c_trg_prefix */
      /*    don't care if will fail to move file */
      /*   or  */
      /* If never move file (i.e. no succ_dir) */
      /* Then go ahead and process file */
      if((:i_c_trg_ext or :i_c_trg_prefix) or !(:i_c_succ_dir))
      {
          /* Do not use trigger file or succ_dir, so go ahead and process it */
          publish data where context = @full_file_name
      }
      else
      {
         /* If NOT using trigger file, */
         /*   do CARE if will fail to move file (will cause looping issue), */
         /*   so check if that destination file already exists */
         publish data where save_full_file_name = @full_file_name
         |
         sl_split filename
         |
         /* Check to see if destination file exists */
         get file info
            where
               pathname = :i_c_succ_dir || '/' ||  @s_filename || '.'||@s_ext
         |
         if(@size = -1)
         {
            /* Destination file does not exist, so go ahead and process it */
            publish data where context = @save_full_file_name
         }
         else
         {
            write trace message
               where level = 'W'
               and message = 'Skipping file ('||@save_full_file_name||'), since file already exists in the success directory ('||:i_c_succ_dir||')!'
         }
      }
   }
}
else
{
   write trace message
     where level = 'W'
      and message = 'Not processing any files from '||:i_c_path||', since success directory ('||:i_c_succ_dir||') does not exist!'
}",2508,1,"20210202171439","","SLIMP_I",""
"SL_GET_INB_FTP_FILES","SL_COMM","MOCA","Get Inbound Files from a directory with a trigger extension from remote FTP server","F","F","F","F","F","F","F","/* Retrieve all files in i_c_path matching i_c_file_pattern  */
/*   that */
/*   if i_c_trg_ext defined */
/*     must have another file in the i_c_path with same name except ends with extension */
/*   if i_c_trg_prefix defined */
/*     must have another file in the i_c_path with same name except starts prefix */
/*   if neither i_c_trg_ext nor i_c_trg_prefix defined and have a i_c_dir defined */
/*     must have succ_dir created */
/*     and must NOT have same file already existing in the i_c_succ_dir */
get file info
    where pathname = :i_c_tmp_dir
|
if(@type = 'D')
{
    if(:i_c_succ_dir)
    {
        get file info
            where pathname = :i_c_succ_dir
    }
    else
    {
        publish data where type = 'D'
    }
    |
    if(@type = 'D')
    {
        publish data
          where directory = :i_c_path
            and filename_pattern = :i_c_file_pattern
            and host = :i_c_host
            and port = decode(:i_c_port, '', , :i_c_port)
            and user = :i_c_user
            and pass = decode(:i_c_pass, '', , :i_c_pass)
            and use_sftp = :i_c_use_sftp
            and trg_ext = :i_c_trg_ext
            and trg_prefix = :i_c_trg_prefix
            and proxyHost = :i_c_proxy_host
            and proxyPort = :i_c_proxy_port
            and proxyUser = :i_c_proxy_user
            and proxyPass = :i_c_proxy_pass
            and proxyType = :i_c_proxy_type
        |
        if(:i_c_use_sftp = 'T')
        {
            publish data
              where pk_file = decode(:i_c_pk_file, '', , :i_c_pk_file)
                and pk_password = decode(:i_c_pk_pass, '', , :i_c_pk_pass)
            |
            sl_list sftp_files
        }
        else
        {
            sl_list ftp_files
        }
        |
        if(@? != 0)
        {
            write trace message
                where level = 'W'
                  and message = 'Could not list any files from '||:i_c_path||', connection, authorization or permission denied!'
        }
        |
        if(@filename)
        {
            /* If using trigger file, (i_c_trg_ext or i_c_trg_prefix */
            /*    don't care if will fail to move file */
            /*   or  */
            /* If never move file (i.e. no succ_dir) */
            /* Then go ahead and get and process file */
            if((:i_c_trg_ext or :i_c_trg_prefix) or !(:i_c_succ_dir))
            {
                /* Not using trigger file or succ_dir, so go ahead and get and process it */
                publish data where context = :i_c_tmp_dir || '/' ||@filename
            }
            else
            {
                /* If NOT using trigger file, */
                /*   do CARE if will fail to move file (will cause looping issue), */
                /*   so check if that destination file already exists */
                publish data where full_file_name = :i_c_tmp_dir|| '/' ||@filename
                |
                sl_split filename
                |
                /* Check to see if destination file exists in succ_dir */
                get file info
                    where pathname = :i_c_succ_dir || '/' ||  @s_filename || '.'||@s_ext
                |
                if(@size = -1)
                {
                    /* Destination file does not exist, so go ahead and process it */
                    publish data where context = @full_file_name
                }
                else
                {
                    write trace message
                        where level = 'W'
                          and message = 'Skipping file ('||@full_file_name||'), since file already exists in the success directory ('||:i_c_succ_dir||')!'
                }
            }
        }
    }
    else
    {
        write trace message
            where level = 'W'
              and message = 'Not processing any files from '||:i_c_path||', since success directory ('||:i_c_succ_dir||') does not exist!'
    }
}
else
{
    write trace message
        where level = 'W'
          and message = 'Not processing any files from '||:i_c_path||', since tmp directory ('||:i_c_tmp_dir||') does not exist!'
}",4144,1,"20210202171440","","SLIMP_I",""
"SL_GET_IP_ADDRESS","SL_KW_ALG","MOCA","Get the hosts ip address","F","F","F","F","F","F","F","sl_get ip_address where host_name = :I_C_HOST_NAME",50,1,"20210202171439","","SLIMP_I",""
"SL_GET_NAT_NAM_FOR_SYS_ID","SL_IFD_FLD","MOCA","Get Native Name for a System Id","F","F","F","F","F","F","F","publish data
where
      fld_val = :i_c_ifd_fld_data
and   evt_sys_id = :i_c_evt_sys_id
|
if ( @fld_val != '' )
   [select min(native_nam) native_nam from sl_sys_def where sys_id = @fld_val]
else
   [select min(native_nam) native_nam from sl_sys_def where sys_id = @evt_sys_id]",277,1,"20210202171439","","SLIMP_I",""
"SL_GET_SEQUENCE","SL_IFD_FLD","MOCA","Get a Sequence number.  The sequence name is specified as constant value","F","F","F","F","F","F","F","sl_get sequence where seq_name = :I_C_IFD_FLD_MISC_DATA",55,1,"20210202171439","","SLIMP_I",""
"SL_GET_SYS_ID_FOR_NAT_NAM","SL_IFD_FLD","MOCA","Get System Id for a given Native Name","F","F","F","F","F","F","F","[select min(sys_id) sys_id from sl_sys_def where native_nam = :i_c_ifd_fld_data]",80,1,"20210202171439","","SLIMP_I",""
"SL_GET_SYS_PARM","SL_IFD_FLD","MOCA","Get a system parameter.  System parameter is specified as constant value","F","F","F","F","F","F","F","sl_get sys_parm where parm_id = :I_C_IFD_FLD_MISC_DATA",54,1,"20210202171439","","SLIMP_I",""
"SL_GET_XML_STRING_FROM_HTTP","SL_COMM","MOCA","Obsolete (no implementation) Get Inbound XML String from an HTTP port","F","F","F","F","F","F","F","sl_get inb_string_from_http",27,1,"20210202171439","","SLIMP_I",""
"SL_IFD_FAIL_TO_FILE","SL_CONTROL","MOCA","Write information to a flat file for IFD Error","F","F","F","F","F","T","F","sl_handle event_control_file where sl_info='IFD Creation Failure' and <<OVERSTACKED_ARGS>>",90,1,"20210202171439","","SLIMP_I",""
"SL_IFD_O_IFD","SL_COMM","MOCA","Inserts data into another IFD DATA table","F","F","F","F","F","F","F","sl_send ifd_to_rem_ifd where ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX and ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT and ifd_data_dtl = :I_V_IFD_DATA_DTL and alg_context = :I_V_ALG_CONTEXT and ifd_data_seq = :I_N_IFD_DATA_SEQ and ifd_data_ptr = :i_c_ifd_data_ptr",260,1,"20210202171439","","SLIMP_I",""
"SL_IFD_O_IFD_XML","SL_COMM","MOCA","Inserts data into another SeamLES's IFD DATA table using the XML adapter","F","F","F","F","F","F","F","/* Only use rem_host_port if both host and port are provided */
if (len('X'||:i_c_service)>1)
{
   publish data where rem_host_port = :i_c_service
}
else
{
   if (len('X'||:i_c_rem_host_port)>1)
   {
      publish data
         where colon_pos = instr (:i_c_rem_host_port, ':')
   }
   |
   /* Only use rem_host_port if both host and port are provided */
   if ((len('X'||:i_c_rem_host_port)>1) and @colon_pos > 1)
   {
      publish data
         where rem_host = substr (:i_c_rem_host_port, 1, @colon_pos - 1)
            and rem_port = substr (:i_c_rem_host_port, @colon_pos + 1)
      |
      if ((len ('X'||@rem_port) >1) and (len ('X'||@rem_host) >1))
      {
         publish data
            where rem_host_port = :i_c_rem_host_port
      }
   }
}
|
/* Only use rem_host and rem_port if both are provided and rem_host_port is not provided */
if ((len ('X'||@rem_host_port) =1) and (len('X'||:i_c_rem_host)>1) and (len('X'||:i_c_rem_port)>1))
{
   publish data
      where rem_host_port = :i_c_rem_host || ':' || :i_c_rem_port
}
|
sl_send ifd_to_rem_ifd_using_xml where ifd_data_seq = :I_N_IFD_DATA_SEQ and ifd_data_ptr = :i_c_ifd_data_ptr and put_nochg_absent_data = :i_c_put_nochg_absent_data and sending_system = :i_c_sending_system and run_tran_flg = :i_c_run_tran_flg and rem_host_port = @rem_host_port and xml_version = :i_c_xml_version and xml_encoding = :i_c_xml_encoding",1386,1,"20210202171439","","SLIMP_I",""
"SL_IFD_O_TABLE_ACCUM","SL_COMM","MOCA","Accumulates data in a table","F","F","F","F","F","F","F","sl_send ifd_to_table_accum
where
      ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX
and   ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT
and   ifd_data_dtl = :I_V_IFD_DATA_DTL
and   alg_context = :I_V_ALG_CONTEXT
and   table_name = :I_C_TABLE_NAME
and   group_by_col_list = :i_c_group_by_col_list
and   accum_col_list = :i_c_accum_col_list
and   pk_seq_col = :i_c_pk_seq_col
and   seg_id_list = :i_c_seg_id_list
and   up_seg_col_list = :i_c_up_seg_col_list
and   accum_tab_col_prefix = :i_c_accum_tab_col_prefix
and   ifd_fld_extra_prefix = :i_c_ifd_fld_extra_prefix
and   ifd_data_seq = :I_N_IFD_DATA_SEQ
and   ifd_data_ptr = :i_c_ifd_data_ptr",634,1,"20210202171439","","SLIMP_I",""
"SL_IFD_O_TABLE_INS_UPD","SL_COMM","MOCA","Inserts or updates data in a table","F","F","F","F","F","F","F","sl_send ifd_to_table_insupd where ifd_data_blk_ndx = :I_N_IFD_DATA_BLK_NDX and ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT and ifd_data_dtl = :I_V_IFD_DATA_DTL and alg_context = :I_V_ALG_CONTEXT and table_name = :I_C_TABLE_NAME and ifd_data_seq = :I_N_IFD_DATA_SEQ and ifd_data_ptr = :i_c_ifd_data_ptr",298,1,"20210202171439","","SLIMP_I",""
"SL_IFD_SUCC_TO_FILE","SL_CONTROL","MOCA","Write information to a flat file for IFD Success","F","F","F","F","F","T","F","sl_handle event_control_file where sl_info='IFD Creation Success' and <<OVERSTACKED_ARGS>>",90,1,"20210202171439","","SLIMP_I",""
"SL_IFD_TO_XML_AS_FILE","SL_COMM","MOCA","Convert IFD to XML and create a file","F","F","F","F","F","F","F","sl_send ifd_to_xml_file
where
      xml_version = :I_C_XML_VERSION
and   xml_encoding = :I_C_XML_ENCODING
and   head_evt_id = :I_C_HEAD_EVT_ID
and   parent_tag = :I_C_PARENT_TAG
and   num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
and   ifd_data_seq = :I_N_IFD_DATA_SEQ
and   ifd_data_ptr = :i_c_ifd_data_ptr
and   tail_moca_cmd = :i_c_tail_moca_cmd
and   put_nochg_absent_data = :i_c_put_nochg_absent_data
and   directory = :i_c_directory
and   filename = :i_c_filename
and   trgdir = :i_c_trgdir
and   trgfile = :i_c_trgfile",530,1,"20210202171439","","SLIMP_I",""
"SL_IFD_TO_XML_AS_PTR","SL_COMM","MOCA","Convert IFD to XML and returns a pointer to that XML","F","F","F","F","F","F","F","sl_send ifd_to_xml_ptr
where
      xml_version = :I_C_XML_VERSION
and   xml_encoding = :I_C_XML_ENCODING
and   head_evt_id = :I_C_HEAD_EVT_ID
and   parent_tag = :I_C_PARENT_TAG
and   num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
and   ifd_data_seq = :I_N_IFD_DATA_SEQ
and   ifd_data_ptr = :i_c_ifd_data_ptr
and   tail_moca_cmd = :i_c_tail_moca_cmd
and   put_nochg_absent_data = :i_c_put_nochg_absent_data",409,1,"20210202171439","","SLIMP_I",""
"SL_IFD_TO_XML_ON_EMAIL","SL_COMM","MOCA","Convert IFD to XML and send it using email","F","F","F","F","F","F","F","sl_send ifd_to_xml_email
where
      xml_version = :I_C_XML_VERSION
and   xml_encoding = :I_C_XML_ENCODING
and   head_evt_id = :I_C_HEAD_EVT_ID
and   parent_tag = :I_C_PARENT_TAG
and   num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
and   ifd_data_seq = :I_N_IFD_DATA_SEQ
and   ifd_data_ptr = :i_c_ifd_data_ptr
and   tail_moca_cmd = :i_c_tail_moca_cmd
and   put_nochg_absent_data = :i_c_put_nochg_absent_data
and   to = :i_c_to
and   from = :i_c_from
and   hostname = :i_c_hostname
and   subject = :i_c_subject",513,1,"20210202171439","","SLIMP_I",""
"SL_IFD_TO_XML_ON_HTTP","SL_COMM","MOCA","Convert IFD to XML and send it using HTTP post","F","F","F","F","F","F","F","publish data
where
      xml_version = :I_C_XML_VERSION
and   xml_encoding = :I_C_XML_ENCODING
and   head_evt_id = :I_C_HEAD_EVT_ID
and   parent_tag = :I_C_PARENT_TAG
and   num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
and   ifd_data_seq = :I_N_IFD_DATA_SEQ
and   ifd_data_ptr = :i_c_ifd_data_ptr
and   tail_moca_cmd = :i_c_tail_moca_cmd
and   put_nochg_absent_data = :i_c_put_nochg_absent_data
and   url = :i_c_url
and   name_value_pairs = :i_c_name_value_pairs
and   encode_data = :i_c_encode_data
/*
   html_headers are extra headers that will be sent with the post
*/
and   html_headers = :I_C_HTTP_HEADERS
/*
   handle_status_cmd provides local syntax for handling response status.
   The default logic raises a communication error whenever response status
   not equal to 200
*/
and   handle_status_cmd = :I_C_HANDLE_STATUS_CMD
/*
   get_comm_comment_cmd provides local syntax for publishing the comm_cmnt variable,
   used for determining the communication comment.  By default comment is set to the body
   of web server response (@body)
*/
and   get_comm_comment_cmd = :I_C_GET_COMM_COMMENT_CMD
/*
   handle_response_cmd provides local syntax for adding extra logic to the communication algorithm.
   It is invoked as the last step of the algorithm execution.
*/
and   handle_response_cmd = :I_C_HANDLE_RESPONSE_CMD
|
sl_send ifd_to_xml_common
|
get xml
|
do http request
where url = @url
  and method = 'POST'
  and headers = @html_headers
  and body = @mxml_xml
  and encoding = @xml_encoding
  and namevaluepairs = @name_value_pairs
|
if(@handle_status_cmd)
{
   /* Execute custom status handler */
   execute server command
   where command = @handle_status_cmd
}
else
{
   /* standard status handler raises an error if return status != 200 */
   if(@status != 200)
   {
      set return status
      where code  = 3571
        and error_message = 'HTTP Error status: [' || @status || '] message: ['
                      || @reason || '] body: [' || @body || ']'
   }
}
|
{
   if(@get_comm_comment_cmd)
   {
      /* custom comment command needs to publish comment text as comm_cmnt */

      execute server command where command = @get_comm_comment_cmd
   }
   else
   {
      /* standard comment will be set to the value of variable body */
      publish data where comm_cmnt = @body
   }
   |
   sl_set comm_cmnt where comm_cmnt=@comm_cmnt
   ;
   if(@handle_response_cmd)
   {
      /* any post processing is done by handle_response_command */
      execute server command where command = @handle_response_cmd
   }
}",2539,1,"20210202171439","","SLIMP_I",""
"SL_IFD_TO_XML_ON_MOCA","SL_COMM","MOCA","Convert IFD to XML and execute a MOCA Component that gets this XML","F","F","F","F","F","F","F","sl_send ifd_to_xml_moca
where
      xml_version = :I_C_XML_VERSION
and   xml_encoding = :I_C_XML_ENCODING
and   head_evt_id = :I_C_HEAD_EVT_ID
and   parent_tag = :I_C_PARENT_TAG
and   num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
and   ifd_data_seq = :I_N_IFD_DATA_SEQ
and   ifd_data_ptr = :i_c_ifd_data_ptr
and   tail_moca_cmd = :i_c_tail_moca_cmd
and   put_nochg_absent_data = :i_c_put_nochg_absent_data
and   moca_component_name = :i_c_moca_component_name
and   moca_host = :i_c_moca_host
and   moca_port = :i_c_moca_port
and   service = :i_c_service",558,1,"20210202171439","","SLIMP_I",""
"SL_IN_IFD_DATA_DTL_FLDS","SL_RETR_MTHD_IMPL","MOCA","Get the fields of an inbound IFD Data Detail as columns (used from success/failure events)","F","F","F","F","F","F","F"," sl_list ifd_data_fld where ifd_data_seq = :i_n_sl_in_ifd_data_seq and ifd_data_dtl_seq = :i_n_ifd_data_dtl_seq",111,1,"20210202171439","","SLIMP_I",""
"SL_IN_IFD_DATA_DTL_FLDS_ROWS","SL_RETR_MTHD_IMPL","MOCA","Get the fields of an inbound IFD Data Detail as rows (used from success/failure events)","F","F","F","F","F","F","F"," sl_list ifd_data_fld where ifd_data_seq = :i_n_sl_in_ifd_data_seq and ifd_data_dtl_seq = :i_n_ifd_data_dtl_seq and return_as_projection = 'F'",142,1,"20210202171439","","SLIMP_I",""
"SL_MOVE_INB_FILE","SL_COMM","MOCA","When done, move the inbound file","F","F","F","F","F","T","F","
sl_move inb_file
where
      succ_dir = :i_c_succ_dir
and   fail_dir = :i_c_fail_dir
and   file_path = :i_v_alg_context
and   trg_ext = :i_c_trg_ext
and   trg_prefix = :i_c_trg_prefix
and   status = :i_n_status
catch(@?)
| publish data where move_status = @? |
/* Attempt to run transaction if status OK or NOT_FOUND, even if could not move file */
if(:i_n_status = 0 and :i_c_run_tran_flg = 'T')
{
  sl_process dwnld where dwnld_stat_cd = 'EPROC' and <<OVERSTACKED_ARGS>> catch (-1403)
} |
set return status where status = @move_status",537,1,"20210202171439","","SLIMP_I",""
"SL_NUM_ABS","SL_IFD_FLD","MOCA","Take Absolute Value for a number","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_abs where num = :I_C_IFD_FLD_DATA
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",197,1,"20210202171439","","SLIMP_I",""
"SL_NUM_ADD","SL_IFD_FLD","MOCA","Subtract a number from the field value.  Number to add is specified as constant valie","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_increase value where i_value = :I_C_IFD_FLD_DATA and i_increase_by = :I_C_IFD_FLD_MISC_DATA
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",255,1,"20210202171439","","SLIMP_I",""
"SL_NUM_APPLY_SQL_ON_EO_FLD","SL_IFD_FLD","MOCA","Apply SQL on the EO fields","T","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_apply sql_on_eo_fld_data where i_evt_data_ptr = :i_c_evt_data_ptr and i_sql_expr = :i_c_ifd_fld_misc_data
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",269,1,"20210202171439","","SLIMP_I",""
"SL_NUM_APPLY_SQL_ON_IFD_FLD","SL_IFD_FLD","MOCA","Apply SQL on the IFD fields","T","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_apply sql_on_ifd_fld_data where i_evt_data_ptr = :i_c_evt_data_ptr and i_ifd_fld_data_ptr = :I_C_IFD_FLD_DATA_PTR and i_ifd_fld_arr_siz = :I_N_IFD_FLD_ARR_SIZ and i_sql_expr = :i_c_ifd_fld_misc_data
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",362,1,"20210202171439","","SLIMP_I",""
"SL_NUM_DIV_INTO","SL_IFD_FLD","MOCA","Divide the field value into a number.  Number to divide into is specified as constant value","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_div_into value where i_value = :I_C_IFD_FLD_DATA and i_div_into = :I_C_IFD_FLD_MISC_DATA
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",252,1,"20210202171439","","SLIMP_I",""
"SL_NUM_GET_CHILD_EO_FLD","SL_IFD_FLD","MOCA","Get EO Field from a child segment","T","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_list eo_fld_from_evt_data_ptr where i_evt_data_ptr = :i_c_evt_data_ptr and i_eo_fld_id = :i_c_ifd_fld_misc_data
|
publish data where o_value = @o_value
|
sl_apply num_format where i_value = @o_value and i_format = :i_c_fld_fmt",315,1,"20210202171439","","SLIMP_I",""
"SL_NUM_GET_CURR_SEQUENCE","SL_IFD_FLD","MOCA","Get the current Sequence number.  The sequence name is specified as constant value","F","F","F","F","F","F","F","sl_get sequence where seq_name = :I_C_IFD_FLD_MISC_DATA and use_current = 'T' | sl_apply num_format where i_value = @SequenceValue and i_format = :I_C_FLD_FMT",158,1,"20210202171439","","SLIMP_I",""
"SL_NUM_GET_PARENT_EO_FLD","SL_IFD_FLD","MOCA","Get EO Field from a parent segment","T","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_list par_eo_fld_from_evt_data_ptr where i_evt_data_ptr = :i_c_evt_data_ptr and i_eo_fld_id = :i_c_ifd_fld_misc_data
|
publish data where o_value = @o_value
| sl_apply num_format where i_value = @o_value and i_format = :i_c_fld_fmt",319,1,"20210202171439","","SLIMP_I",""
"SL_NUM_GET_SEQUENCE","SL_IFD_FLD","MOCA","Get a Sequence number.  The sequence name is specified as constant value","F","F","F","F","F","F","F","sl_get sequence where seq_name = :I_C_IFD_FLD_MISC_DATA | sl_apply num_format where i_value = @SequenceValue and i_format = :I_C_FLD_FMT",136,1,"20210202171439","","SLIMP_I",""
"SL_NUM_IFD_FLD_DEFAULT_LOGIC","SL_IFD_FLD","MOCA","Field Default Logic for IFD Fields.  Constant Value specifies a SQL EXPRESSION.  For absent value on source system and verb of create, the expression will be evaluated to determine the value; and for change non-change of dest system will be used","F","F","F","F","F","T","F","publish data where <<OVERSTACKED_ARGS>>
|
publish data
where number_value = :i_c_ifd_fld_data
|
if ( @number_value < 0 and @number_value != -99999999998 )
{
   sl_get sys_data_attr
   where
         sys_id = :i_c_evt_sys_id
   |
   publish data where use_value=@absent_ind_char
}
else
{
   publish data where use_value=@number_value
}
|
sl_apply ifd_fld_default_logic
where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
and value = @use_value and default_value = :i_c_ifd_fld_misc_data and moca_verb = ':i_c_moca_verb'
|
sl_apply num_format where i_value = @o_value and i_format = :i_c_fld_fmt",611,1,"20210202171439","","SLIMP_I",""
"SL_NUM_KW_VAL","SL_IFD_FLD","MOCA","Get KW Value.  KW provided as constant value","F","F","F","F","F","F","F","sl_get kw_val where i_evt_data_ptr = :i_c_evt_data_ptr and kw_id = :i_c_ifd_fld_misc_data
|
sl_apply num_format where i_value = @kw_val and i_format = :I_C_FLD_FMT",163,1,"20210202171439","","SLIMP_I",""
"SL_NUM_MOD","SL_IFD_FLD","MOCA","Divide value by the number and return the remainder.  Number to divide into is specified as constant value","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_math div where num = :I_C_IFD_FLD_DATA and div_by = :I_C_IFD_FLD_MISC_DATA
| sl_apply num_format where i_value = @rem and i_format = :I_C_FLD_FMT",234,1,"20210202171439","","SLIMP_I",""
"SL_NUM_MULTIPLY","SL_IFD_FLD","MOCA","Multiply a number to the field value.  Number to multiply with is specified as constant value","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_multiply value where i_value = :I_C_IFD_FLD_DATA and i_multiply_by = :I_C_IFD_FLD_MISC_DATA
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",255,1,"20210202171439","","SLIMP_I",""
"SL_NUM_POWER","SL_IFD_FLD","MOCA","Raise the field value by this power.  Number to use as power is specified as constant value","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_power where num = :I_C_IFD_FLD_DATA and power = :I_C_IFD_FLD_MISC_DATA
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",234,1,"20210202171439","","SLIMP_I",""
"SL_NUM_SQRT","SL_IFD_FLD","MOCA","Take the square root of the field value","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_power where num = :I_C_IFD_FLD_DATA and power = '0.5'
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",217,1,"20210202171439","","SLIMP_I",""
"SL_NUM_SUBTRACT","SL_IFD_FLD","MOCA","Subtract a number from the field value.  Number to subtract is specified as constant value","F","F","F","F","F","F","F","
publish data where src_sys_id = :i_c_evt_sys_id and dest_sys_id = :i_c_dest_sys_id
|
sl_decrease value where i_value = :I_C_IFD_FLD_DATA and i_decrease_by = :I_C_IFD_FLD_MISC_DATA
|
sl_apply num_format where i_value = @o_value and i_format = :I_C_FLD_FMT",255,1,"20210202171439","","SLIMP_I",""
"SL_O_IFD_MEM_ADD","SL_COMM","MOCA","Add current IFD to the IFD memory buffer","F","F","F","F","F","F","F","sl_send ifd_data_mem_add
where alg_context = :I_V_ALG_CONTEXT
  and ifd_data_dtl_cnt = :I_N_IFD_DATA_DTL_CNT
  and ifd_data_dtl = :I_V_IFD_DATA_DTL
  and eol_delim = :I_C_EOL_DELIM",180,1,"20210202171439","","SLIMP_I",""
"SL_O_IFD_MEM_FILE","SL_COMM","MOCA","Sends ifd data into a flat file","F","F","F","F","F","F","F","try
{
   /* We send the message only if status so far was good */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data
      where full_file_name = decode(:I_C_DIRECTORY || 'X',
                   'X', :I_C_FILENAME,
                   :I_C_DIRECTORY || @dir_sep || :I_C_FILENAME)
      |
      /* Now resolve the environment variables if any */
      [[full_file_name = MocaUtils.expandEnvironmentVariables(moca,full_file_name)]]
      |
      sl_set comm_cmnt where comm_cmnt = @full_file_name
      |
      if(nvl(:i_c_Encrypt_RPBF,'F') = 'F')
      {
         sl_send ifd_data_mem_write_file
            where alg_context = :I_V_ALG_CONTEXT
              and filename = @full_file_name
              and append_flg = :I_C_APPEND_FLG
      }
      else
      {
         sl_send ifd_data_mem_get
            where alg_context = :I_V_ALG_CONTEXT
         |
         if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
         {
            encrypt data using RPBF where
               data_ptr = @data_ptr and data_len = @data_len and data=
               and block_size = :i_n_block_size
            |
            write output file where
               filename = @full_file_name and data_ptr = 
               and data_len =  and data = 
               and data_bin = @encrypted_data
           /* NOTE: append mode does not make sense */
               and mode = 'w'
         }
      }
      |
      if( :I_C_TRGFILE || 'X' != 'X')
      {
         publish data where full_trg_file_name = decode(:I_C_TRGDIR || 'X',
               'X', :I_C_TRGFILE,
               :I_C_TRGDIR || @dir_sep || :I_C_TRGFILE)
         |
         [[full_trg_file_name = MocaUtils.expandEnvironmentVariables(moca,full_trg_file_name)]]
         |
         write output file
         where filnam = @full_trg_file_name
           and data = 'Trigger file for ' || @full_file_name
      }
   }
}
finally
{
   sl_send ifd_data_mem_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",2058,1,"20210202171440","","SLIMP_I",""
"SL_O_IFD_MEM_FTP","SL_COMM","MOCA","Sends ifd data as flat file using ftp communication","F","F","F","F","F","F","F","try
{
   /* We send the message only if status so far was good */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data where full_file_name = decode(:I_C_TMPDIR || 'X',
                'X', :I_C_TMPFILE,
                :I_C_TMPDIR || @dir_sep || :I_C_TMPFILE)
      |
      /* Now resolve the environment variables if any */
      [[full_file_name = MocaUtils.expandEnvironmentVariables(moca,full_file_name)]] catch (@?)
      |
      sl_set comm_cmnt where comm_cmnt = @full_file_name
      |
      if(nvl(:i_c_Encrypt_RPBF,'F') = 'F')
      {
         sl_send ifd_data_mem_write_file
            where alg_context = :I_V_ALG_CONTEXT
              and filename = @full_file_name
      }
      else
      {
         sl_send ifd_data_mem_get
            where alg_context = :I_V_ALG_CONTEXT
         |
         if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
         {
            encrypt data using RPBF where
               data_ptr = @data_ptr and data_len = @data_len and data=
               and block_size = :i_n_block_size
            |
            write output file where
               filename = @full_file_name and data_ptr = 
               and data_len =  and data = 
               and data_bin = @encrypted_data
         }
      }
      |
      /* ftp mode is picked up off the stack */
      if (:i_c_use_sftp = 'T')
      {
         sl_send file_to_sftp
           where host = :I_C_HOST_ID
             and port = :I_N_PORT_ID
             and user = :I_C_USERID
             and pass = :I_C_PASSWD
             and pk_password = :I_C_PK_PASS
             and pk_file = :I_C_PK_FILE
             and destdir = :I_C_DESTDIR
             and destfile = :I_C_DESTFILE
             and srcdir = :I_C_TMPDIR
             and srcfile = :I_C_TMPFILE
             and trgdir = :I_C_TRGDIR
             and trgfile = :I_C_TRGFILE
             and remove_srcfile = :I_C_REMOVE_TMP_FILE
             /* Force binary mode for encyrpted files */
             and mode = decode(nvl(:i_c_Encrypt_RPBF,'F'),'T','I',:I_C_MODE)
      }
      else
      {
         sl_send file_to_ftp
           where host = :I_C_HOST_ID
             and port = :I_N_PORT_ID
             and user = :I_C_USERID
             and pass = :I_C_PASSWD
             and proxyHost = :I_C_PROXY_HOST
             and proxyPort = :I_C_PROXY_PORT
             and proxyUser = :I_C_PROXY_USER
             and proxyPass = :I_C_PROXY_PASS
             and proxyType = :I_C_PROXY_TYPE
             and destdir = :I_C_DESTDIR
             and destfile = :I_C_DESTFILE
             and srcdir = :I_C_TMPDIR
             and srcfile = :I_C_TMPFILE
             and trgdir = :I_C_TRGDIR
             and trgfile = :I_C_TRGFILE
             and remove_srcfile = :I_C_REMOVE_TMP_FILE
             /* Force binary mode for encyrpted files */
             and mode = decode(nvl(:i_c_Encrypt_RPBF,'F'),'T','I',:I_C_MODE)
      }
      |
      sl_set comm_cmnt where comm_cmnt = @full_file_name||'->'||:I_C_HOST_ID||':'||:I_C_DESTDIR||'/'||:I_C_DESTFILE

   }
}
finally
{
   sl_send ifd_data_mem_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",3208,1,"20210202171439","","SLIMP_I",""
"SL_O_IFD_MEM_INIT","SL_COMM","MOCA","Initializes IFD memory buffer","F","F","F","F","F","F","F","sl_set outbound ext_codepage where ext_codepage = :i_c_ext_codepage
|
sl_send ifd_data_mem_init
where alg_context = :I_V_ALG_CONTEXT",132,1,"20210202171439","","SLIMP_I",""
"SL_O_IFD_MEM_JMS_TOPIC","SL_COMM","MOCA","Sends ifd data via JMS Topic destination","F","F","F","F","F","T","F","try
{
/* We send the message to JMS Topic only if status so far was good */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      sl_send ifd_data_mem_get_string where alg_context = :I_V_ALG_CONTEXT
      |
      if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
      {
          publish data
          where <<OVERSTACKED_ARGS>>
            and destname = :I_C_TOPIC_NAME
            and contextfactory = :I_C_CONTEXT_FACTORY
            and pkgprefixes = :I_C_PKG_PREFIXES
            and providerURL = :I_C_PROVIDER_URL
            and connfactory = :I_C_CONN_FACTORY
            and correlation_id = :I_C_CORRELATION_ID
            and delivery_mode = :I_C_DELIVERY_MODE
            and priority = nvl(:I_C_PRIORITY, ) /*  for default value */
            and reply_to_request_attr = :I_C_REPLYTO_REQUEST_ATTR
            and time_to_live = nvl(:I_C_TIME_TO_LIVE, ) /*  for default value */
            and type = :I_C_TYPE
            and custom_properties_request_attr = :I_C_PROPERTIES_REQUEST_ATTR
          |
          /* Used to setup extra jms properties (e.g. JNDI security and createTopicConnection security */
          set extra jms properties
          |
          sl_jms send_msg
          where messagetext = @data
      }
   }
}
finally
{
   /* Free request variable */
   [[
   import javax.jms.Destination;
   String replyToReqAttr = :I_C_REPLYTO_REQUEST_ATTR
   if (replyToReqAttr !=  && !replyToReqAttr.isEmpty()) {
       Object replyTo = MocaUtils.currentContext().getRequestAttribute(replyToReqAttr);
       if (replyTo !=  && replyTo instanceof Destination) {
           replyTo = ;
           MocaUtils.currentContext().removeRequestAttribute(replyToReqAttr);
       }
   }
   String customPropReqAttr = :I_C_PROPERTIES_REQUEST_ATTR
   if (customPropReqAttr !=  && !customPropReqAttr.isEmpty()) {
       Object props = MocaUtils.currentContext().getRequestAttribute(customPropReqAttr);
       if (props !=  && props instanceof MocaResults) {
           props = ;
           MocaUtils.currentContext().removeRequestAttribute(customPropReqAttr);
       }
   }
   ]]
   |
   /* Free cache */
   sl_jms free_connection_cache
   catch(@?)
   |
   publish data where err_code = @?
   |
   try
   {
       sl_send ifd_data_mem_finish where alg_context = :I_V_ALG_CONTEXT
   }
   catch(@?)
   {
       publish data where finish_err_code = @? and finish_err_msg = @!
       |
       if(@err_code = 0)
       {
           set return status where code = @finish_err_code and message = @finish_err_msg
       }
   }
}",2572,1,"20210202171440","","SLIMP_I",""
"SL_O_IFD_MEM_JMSMQ","SL_COMM","MOCA","Sends ifd data via JMS destination","F","F","F","F","F","T","F","try
{
/* We send the message to JMS MQ only if status so far was good */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      sl_send ifd_data_mem_get_string where alg_context = :I_V_ALG_CONTEXT
      |
      if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
      {
          publish data
          where <<OVERSTACKED_ARGS>>
            and destname = :I_C_QUEUE_NAME
            and contextfactory = :I_C_CONTEXT_FACTORY
            and pkgprefixes = :I_C_PKG_PREFIXES
            and providerURL = :I_C_PROVIDER_URL
            and connfactory = :I_C_CONN_FACTORY
            and correlation_id = :I_C_CORRELATION_ID
            and delivery_mode = :I_C_DELIVERY_MODE
            and priority = nvl(:I_C_PRIORITY, ) /*  for default value */
            and reply_to_request_attr = :I_C_REPLYTO_REQUEST_ATTR
            and time_to_live = nvl(:I_C_TIME_TO_LIVE, ) /*  for default value */
            and type = :I_C_TYPE
            and custom_properties_request_attr = :I_C_PROPERTIES_REQUEST_ATTR
          |
          /* Used to setup extra jms properties (e.g. JNDI security and createQueueConnection security */
          set extra jms properties
          |
          sl_jms send_msg
          where messagetext = @data
      }
   }
}
finally
{
   /* Free request variable */
   [[
   import javax.jms.Destination;
   String replyToReqAttr = :I_C_REPLYTO_REQUEST_ATTR
   if (replyToReqAttr !=  && !replyToReqAttr.isEmpty()) {
       Object replyTo = MocaUtils.currentContext().getRequestAttribute(replyToReqAttr);
       if (replyTo !=  && replyTo instanceof Destination) {
           replyTo = ;
           MocaUtils.currentContext().removeRequestAttribute(replyToReqAttr);
       }
   }
   String customPropReqAttr = :I_C_PROPERTIES_REQUEST_ATTR
   if (customPropReqAttr !=  && !customPropReqAttr.isEmpty()) {
       Object props = MocaUtils.currentContext().getRequestAttribute(customPropReqAttr);
       if (props !=  && props instanceof MocaResults) {
           props = ;
           MocaUtils.currentContext().removeRequestAttribute(customPropReqAttr);
       }
   }
   ]]
   |
   /* Free cache */
   sl_jms free_connection_cache
   catch(@?)
   |
   publish data where err_code = @?
   |
   try
   {
       sl_send ifd_data_mem_finish where alg_context = :I_V_ALG_CONTEXT
   }
   catch(@?)
   {
       publish data where finish_err_code = @? and finish_err_msg = @!
       |
       if(@err_code = 0)
       {
           set return status where code = @finish_err_code and message = @finish_err_msg
       }
   }
}",2569,1,"20210202171440","","SLIMP_I",""
"SL_O_IFD_MEM_JSOCKET","SL_COMM","MOCA","Sends ifd data as a message through socket (based on JAVA)","F","F","F","F","F","F","F","if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
    sl_send ifd_data_mem_get_string where alg_context = :I_V_ALG_CONTEXT
    |
    if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
    {
        :I_C_MOCA_NQ_SEND_MSG_CMD
          where hostid = :I_C_HOSTID
            and portnum = :I_N_PORTNUM
            and reconnect_wait = :I_N_RECONNECT_WAIT
            and reconnect_attempts = :I_N_RECONNECT_ATTEMPTS
            and ack_timeout = :I_N_ACK_TIMEOUT
            and message = @data
            and ext_charset = :I_C_EXT_CHARSET
    }
} catch(@?)
|
publish data where err_num = @?
|
sl_send ifd_data_mem_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num <> 0)
{
    set return status where status = @err_num
} else {
    set return status where status = @finish_err_num
}",830,1,"20210202171440","","SLIMP_I",""
"SL_O_IFD_MEM_MQSERIES","SL_COMM","MOCA","Obsolete (no implementation) Sends ifd data as a message to  MQSeries","F","F","F","F","F","F","F","/* We send the message to MQ Series only if status so far was good */
if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
   sl_send ifd_data_mem_get where alg_context = :I_V_ALG_CONTEXT
   |
   sl_mqs send_msg
   where queue_manager_name = :I_C_QUEUE_MANAGER_NAME
     and queue_name = :I_C_QUEUE_NAME
     and channel = :I_C_CHANNEL
     and connection = :I_C_CONNECTION
     and max_message_len = :I_N_MAX_MESSAGE_LEN
     and message_ptr = @data_ptr
     and message_len = @data_len
     and appl_identity_data = :I_C_APPL_IDENTITY_DATA
} catch(@?)
/* We need to be careful to preserve the original error code.
 * Unfortunately we cannot preserve the original error message.
 */
|
publish data where err_num = @?
|
sl_send ifd_data_mem_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num <> 0)
{
  set return status where status = @err_num
} else {
  set return status where status = @finish_err_num
}",955,1,"20210202171439","","SLIMP_I",""
"SL_O_IFD_MEM_RCV_JSOCKET","SL_COMM","MOCA","Reply ifd data as a message through receiving socket (based on JAVA)","F","F","F","F","F","F","F","if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
    sl_send ifd_data_mem_get_string where alg_context = :I_V_ALG_CONTEXT
    |
    if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
    {
        :I_C_MOCA_NQ_REPLY_MSG_CMD
          where message = @data
            and ext_charset = :I_C_EXT_CHARSET
            and ack_timeout = nvl(:I_N_ACK_TIMEOUT,60)
    }
} catch(@?)
|
publish data where err_num = @?
|
sl_send ifd_data_mem_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num <> 0)
{
    set return status where status = @err_num
} else {
    set return status where status = @finish_err_num
}",649,1,"20210202171440","","SLIMP_I",""
"SL_O_IFD_MEM_RCV_SOCKET","SL_COMM","MOCA","Sends ifd data as a message back through receiving socket","F","F","F","F","F","F","F","/* We send the message through socket only if status so far was good */
if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
   sl_send ifd_data_mem_get where alg_context = :I_V_ALG_CONTEXT
   |
   if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
   {
      sl_sock send_msg_cur_rcv_socket
      where ack_timeout = nvl(:I_N_ACK_TIMEOUT,60)
        and check_ack_nak_cmd = nvl(:I_C_CHECK_ACK_NAK_CMD,"sl_sock check_ack_nak none")
        and get_header_and_footer_cmd = :I_C_GET_HEADER_AND_FOOTER_CMD
        and message_ptr = @data_ptr
        and message_len = @data_len
   }
} catch(@?)
/* We need to be careful to preserve the original error code.
 * Unfortunately we cannot preserve the original error message.
 */
|
publish data where err_num = @?
|
sl_send ifd_data_mem_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num <> 0)
{
  set return status where status = @err_num
} else {
  set return status where status = @finish_err_num
}",987,1,"20210202171440","","SLIMP_I",""
"SL_O_IFD_MEM_SOCKET","SL_COMM","MOCA","Sends ifd data as a message through socket","F","F","F","F","F","F","F","/* We send the message through socket only if status so far was good */
if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
   sl_send ifd_data_mem_get where alg_context = :I_V_ALG_CONTEXT
   |
   if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
   {
      sl_sock send_msg
      where hostid = :I_C_HOSTID
        and portnum = :I_N_PORTNUM
        and reconnect_wait = :I_N_RECONNECT_WAIT
        and reconnect_attempts = :I_N_RECONNECT_ATTEMPTS
        and ack_timeout = :I_N_ACK_TIMEOUT
        and check_ack_nak_cmd = :I_C_CHECK_ACK_NAK_CMD
        and get_header_and_footer_cmd = :I_C_GET_HEADER_AND_FOOTER_CMD
        and message_ptr = @data_ptr
        and message_len = @data_len
   }
} catch(@?)
/* We need to be careful to preserve the original error code.
 * Unfortunately we cannot preserve the original error message.
 */
|
publish data where err_num = @?
|
sl_send ifd_data_mem_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num <> 0)
{
  set return status where status = @err_num
} else {
  set return status where status = @finish_err_num
}",1104,1,"20210202171440","","SLIMP_I",""
"SL_O_IFD_PTR_MEM_ADD","SL_COMM","MOCA","Add current IFD to the IFD Data Pointer Array","F","F","F","F","F","F","T","sl_send ifd_data_mem_ifd_ptr_add
where alg_context = :I_V_ALG_CONTEXT
  and ifd_data_seq = :I_N_IFD_DATA_SEQ
  and ifd_data_ptr = :I_C_IFD_DATA_PTR",147,1,"20210202171438","","SLIMP_I",""
"SL_O_IFD_PTR_MEM_INIT","SL_COMM","MOCA","Initialize IFD Data Pointer Array","F","F","F","F","F","F","T","sl_send ifd_data_mem_ifd_ptr_init
where alg_context = :I_V_ALG_CONTEXT",70,1,"20210202171438","","SLIMP_I",""
"SL_O_IFD_PTR_MEM_ODBC","SL_COMM","MOCA","Send contents of IFD Data Pointer Array to table(s) using ODBC database connection","F","F","F","F","F","F","T","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      /* Execute generic insert command remotely on the
       * MOCA service from registry.
       */
      sl_get remote_odbc_syntax
      where command = nvl(:I_C_REM_DATA_DTL_CMD,
                     'sl_change gen_maint where using_odbc_connection = "T"')
      |
      /* Publish other data needed for downstream components */
      publish data
      where table_name    = :I_C_TABLE_NAME
        and data_dtl_cmd = :I_C_DATA_DTL_CMD
        and rem_data_dtl_cmd = @remote_command
      |
      if(:I_C_PRE_CMD <> '')
      {
         /* JDE adapter - the PRE_CMD is used to generate new batch_seq,
          * procq_seq, insert a record into processing queue for upload,
          * and to publish the values of batch_seq and procq_seq
          */
         execute server command where cmd = :I_C_PRE_CMD
      }
      |
      /* This command publishes ifd data and ifd data detail pointers */
      sl_send ifd_data_mem_ifd_ptr_get
      where alg_context = :I_V_ALG_CONTEXT
      |
      /* This command publishes field values for the current ifd data detail */
      sl_list ifd_data_fld
      where ifd_data_ptr = @ifd_data_ptr
        and ifd_data_dtl_seq = @ifd_data_dtl_seq
        and ifd_id = @ifd_id
        and ifd_ver = @ifd_ver
        and return_as_projection = 'T'
        and evt_data_seq = NULL
        and ifd_data_dtl_ptr = NULL
        and ifd_seg_id = NULL
      |
      {
         if( @data_dtl_cmd )
         {
            /* JDE Adapter - this command is used to insert records into
             * processing queue detail table
             */
            execute server command where cmd = @data_dtl_cmd
         }
         ;
         if( @rem_data_dtl_cmd )
         {
            execute server command where cmd = @rem_data_dtl_cmd
         }
      }
      |
      if(:I_C_POST_CMD <> '')
      {
         /* JDE Adapter: the post command is used to update the status of new
          * records in the processing queue table from NEW to ID status.
          */
         execute server command where cmd = :I_C_POST_CMD
      }
   }
}
finally
{
   sl_send ifd_data_mem_ifd_ptr_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",2291,1,"20210202171438","","SLIMP_I",""
"SL_O_JSON_MEM_HTTP","SL_COMM","MOCA","Convert IFD to XML and send it using HTTP post","F","F","F","F","F","F","F","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      publish data
      where url = :I_C_URL
        and max_retries = :I_C_MAX_RETRIES
		and retry_wait = :I_C_RETRY_WAIT
		and proxy_host_id = :I_C_PROXY_HOST
		and proxy_port_no = :I_C_PROXY_PORT
		and proxy_usr_id = :I_C_PROXY_USER
		and proxy_usr_pswd = :I_C_PROXY_PASS
        /*
         * html_headers are extra headers that will be sent with the post
         */
        and html_headers = :I_C_HTTP_HEADERS
        /*
         *  handle_status_cmd provides local syntax for
         *  handling response status.
         *  The default logic raises a communication error whenever
         *  response status not equal to 200
         */
        and handle_status_cmd = :I_C_HANDLE_STATUS_CMD
        /*
         *  get_comm_comment_cmd provides local syntax for publishing
         *  the comm_cmnt variable, used for determining the communication
         *  comment.  By default comment is set to the body of web
         *  server response (@body)
         */
        and get_comm_comment_cmd = :I_C_GET_COMM_COMMENT_CMD
        /*
         *  handle_response_cmd provides local syntax for adding
         *  extra logic to the communication algorithm.
         *  It is invoked as the last step of the algorithm execution.
         */
        and   handle_response_cmd = :I_C_HANDLE_RESPONSE_CMD
      |
      sl_send ifd_data_mem_xml_get_xml
      where alg_context = :I_V_ALG_CONTEXT
      |
      sl_http send_msg
	   where url = @url
        and headers = @html_headers
        and body = @mxml_xml
	    and maxretries = @max_retries
		and retrywait = @retry_wait
		and proxy_host = @proxy_host_id
		and proxy_port = @proxy_port_no
		and proxy_usr = @proxy_usr_id
		and proxy_pswd = @proxy_usr_pswd
      |
      if(@handle_status_cmd)
      {
         /* Execute custom status handler */
         execute server command
         where command = @handle_status_cmd
      }
      else
      {
         /* standard status handler raises an error
          *  if return status != 200
          */
         if(@status != 200)
         {
            set return status
            where code  = 3571
              and error_message = 'HTTP Error status: ['
                         || @status || '] message: ['
                         || @reason || '] body: [' || @body || ']'
         }
      }
      |
      {
         if(@get_comm_comment_cmd)
         {
            /* custom comment command needs to publish
             * comment text as comm_cmnt
             */

            execute server command
            where command = @get_comm_comment_cmd
         }
         else
         {
            /* standard comment will be set to the value of variable body */
            publish data where comm_cmnt = @body
         }
         |
         sl_set comm_cmnt where comm_cmnt=@comm_cmnt
         ;
         if(@handle_response_cmd)
         {
            /* any post processing is done by handle_response_command */
         execute server command where command = @handle_response_cmd
         }
      }
   }
}
finally
{
   sl_send ifd_data_mem_xml_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",3246,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_ADD","SL_COMM","MOCA","Add current IFD to the IFD XML context","F","F","F","F","F","F","F","sl_send ifd_data_xml_add
where head_evt_id = :I_C_HEAD_EVT_ID
  and num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
  and parent_tag = :I_C_PARENT_TAG
  and put_nochg_absent_data = :I_C_PUT_NOCHG_ABSENT_DATA
  and xml_encoding = :I_C_XML_ENCODING
  and xml_version = :I_C_XML_VERSION
  and show_ifd_tag = :I_C_SHOW_IFD_TAG
  and ifd_data_seq = :I_N_IFD_DATA_SEQ
  and ifd_data_ptr = :I_C_IFD_DATA_PTR",403,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_FILE","SL_COMM","MOCA","Convert IFD to XML and create a file","F","F","F","F","F","F","F","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data
      where full_file_name = decode(:I_C_DIRECTORY || 'X',
                'X', :I_C_FILENAME,
                :I_C_DIRECTORY || @dir_sep || :I_C_FILENAME)
      |
      /* Now resolve the environment variables if any */
      [[full_file_name = MocaUtils.expandEnvironmentVariables(moca,full_file_name)]]
      |
      /* Set the communication comment */
      sl_set comm_cmnt where comm_cmnt = @full_file_name
      |
      sl_send ifd_data_xml_get
      |
      if(nvl(:i_c_Encrypt_RPBF,'F') = 'F')
      {
         write output file
         where filename = @full_file_name
           and data = @mxml_xml
      }
      else
      {
         encrypt data using RPBF where
            data_ptr =  and data_len =  and data=@mxml_xml
            and block_size = :i_n_block_size
         |
         write output file where
            filename = @full_file_name and data_ptr = 
            and data_len =  and data = 
            and data_bin = @encrypted_data
      }
      |
      if( :I_C_TRGFILE || 'X' != 'X')
      {
         publish data where full_trg_file_name = decode(:I_C_TRGDIR || 'X',
               'X', :I_C_TRGFILE,
               :I_C_TRGDIR || @dir_sep || :I_C_TRGFILE)
         |
         [[full_trg_file_name = MocaUtils.expandEnvironmentVariables(moca,full_trg_file_name)]]
         |
         write output file
         where filnam = @full_trg_file_name
           and data = 'Trigger file for ' || @full_file_name
      }
   }
}
finally
{
   sl_send ifd_data_xml_finish catch(@?)
}",1730,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_INIT","SL_COMM","MOCA","Initialize IFD XML context","F","F","F","F","F","F","F","sl_send ifd_data_xml_init
where xml_encoding = :I_C_XML_ENCODING
  and xml_version = :I_C_XML_VERSION",101,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_ADD","SL_COMM","MOCA","Add current IFD to the IFD XML context","F","F","F","F","F","F","F","sl_send ifd_data_mem_xml_add
where alg_context = :I_V_ALG_CONTEXT
  and head_evt_id = :I_C_HEAD_EVT_ID
  and num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
  and parent_tag = :I_C_PARENT_TAG
  and put_nochg_absent_data = :I_C_PUT_NOCHG_ABSENT_DATA
  and xml_encoding = :I_C_XML_ENCODING
  and xml_version = :I_C_XML_VERSION
  and show_ifd_tag = :I_C_SHOW_IFD_TAG
  and ifd_data_seq = :I_N_IFD_DATA_SEQ
  and ifd_data_ptr = :I_C_IFD_DATA_PTR",444,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_ADD_2","SL_COMM","MOCA","Add current IFD to the IFD XML","F","F","F","F","F","F","F","sl_send ifd_data_mem_xml_add
where alg_context = :I_V_ALG_CONTEXT
  and head_evt_id = :I_C_HEAD_EVT_ID
  and num_skip_after_parent = :I_N_NUM_SKIP_AFTER_PARENT
  and parent_tag = :I_C_PARENT_TAG
  and put_nochg_absent_data = :I_C_PUT_NOCHG_ABSENT_DATA
  and xml_encoding = :I_C_XML_ENCODING
  and xml_version = :I_C_XML_VERSION
  and show_ifd_tag = :I_C_SHOW_IFD_TAG
  and ifd_data_seq = :I_N_IFD_DATA_SEQ
  and ifd_data_ptr = :I_C_IFD_DATA_PTR
  and dont_use_legacy = 'T'",472,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_EMAIL","SL_COMM","MOCA","Convert IFD to XML and send it using email","F","F","F","F","F","F","F","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      /* Set up schema, XSL style sheet */
      publish data
        where schema_dir = :i_c_schema_dir
          and xsl_dir = :i_c_xsl_dir
      |
      [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
      |
      [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
      |
      if (:i_c_xsl_filename)
      {
        publish data
            where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
      }
      |
      if (:i_c_schema_filename)
      {
        publish data
            where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
      }
      |
      sl_send ifd_data_mem_xml_get_xml where alg_context = :I_V_ALG_CONTEXT
      |
      if ( @subject and @subject != '' )
         publish data where use_subject= :I_C_SUBJECT
      else
         publish data
         where use_subject='SL_EMAIL_ADAPTER-IFD_DATA_SEQ=' || @ifd_data_seq
      |
      send email
      where msg=@mxml_xml
        and to = :I_C_TO
        and from = :I_C_FROM
        and hostname = :I_C_HOSTNAME
        and subject = :I_C_SUBJECT
      |
      sl_set comm_cmnt where comm_cmnt=@status
   }
}
finally
{
   sl_send ifd_data_mem_xml_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",1614,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_FILE","SL_COMM","MOCA","Convert IFD to XML and create a file","F","F","F","F","F","F","F","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      /* Set up schema, XSL style sheet */
      publish data
        where schema_dir = :i_c_schema_dir
          and xsl_dir = :i_c_xsl_dir
      |
      [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
      |
      [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
      |
      if (:i_c_xsl_filename)
      {
        publish data
            where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
      }
      |
      if (:i_c_schema_filename)
      {
        publish data
            where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
      }
      |
      publish data
      where full_file_name = decode(:I_C_DIRECTORY || 'X',
                'X', :I_C_FILENAME,
                :I_C_DIRECTORY || @dir_sep || :I_C_FILENAME)
      |
      /* Now resolve the environment variables if any */
      [[full_file_name = MocaUtils.expandEnvironmentVariables(moca,full_file_name)]]
      |
      /* Set the communication comment */
      sl_set comm_cmnt
      where comm_cmnt = @full_file_name || decode(@xsl_filename || 'X',
                'X', '',
                ' XSLT (' || @xsl_filename || ')')
      |
      sl_send ifd_data_mem_xml_get_xml where alg_context = :I_V_ALG_CONTEXT
      |
      if(nvl(:i_c_Encrypt_RPBF,'F') = 'F')
      {
         write output file
         where filename = @full_file_name
           and data = @mxml_xml
      }
      else
      {
         encrypt data using RPBF where
            data_ptr =  and data_len =  and data=@mxml_xml
            and block_size = :i_n_block_size
         |
         write output file where
            filename = @full_file_name and data_ptr = 
            and data_len =  and data = 
            and data_bin = @encrypted_data
      }
      |
      if( :I_C_TRGFILE || 'X' != 'X')
      {
         publish data where full_trg_file_name = decode(:I_C_TRGDIR || 'X',
               'X', :I_C_TRGFILE,
               :I_C_TRGDIR || @dir_sep || :I_C_TRGFILE)
         |
         [[full_trg_file_name = MocaUtils.expandEnvironmentVariables(moca,full_trg_file_name)]]
         |
         write output file
         where filnam = @full_trg_file_name
           and data = 'Trigger file for ' || @full_file_name
      }
   }
}
finally
{
   sl_send ifd_data_mem_xml_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",2741,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_FTP","SL_COMM","MOCA","Sends ifd data as xml file using ftp","F","F","F","F","F","F","F","try
{
   /* Send the message through only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data where full_file_name = decode(:I_C_TMPDIR || 'X',
                   'X', :I_C_TMPFILE,
                   :I_C_TMPDIR || @dir_sep || :I_C_TMPFILE)
      |
      /* Set up schema, XSL style sheet */
      publish data
        where schema_dir = :i_c_schema_dir
          and xsl_dir = :i_c_xsl_dir
      |
      [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
      |
      [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
      |
      if (:i_c_schema_filename)
      {
        publish data
          where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
      }
      |
      if (:i_c_xsl_filename)
      {
        publish data
          where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
      }
      |
      /* Set the communication comment */
      sl_set comm_cmnt
        where comm_cmnt = @full_file_name || decode(@xsl_filename || 'X',
                'X', '',
                ' XSLT (' || @xsl_filename || ')')
      |
      sl_send ifd_data_mem_xml_get_xml where alg_context = :I_V_ALG_CONTEXT
      |
      /* Now resolve the environment variables if any */
      [[full_file_name = MocaUtils.expandEnvironmentVariables(moca,full_file_name)]] catch (@?)
      |
      if(nvl(:i_c_Encrypt_RPBF,'F') = 'F')
      {
         write output file
         where filename = @full_file_name
           and data = @mxml_xml
      }
      else
      {
         encrypt data using RPBF where
            data_ptr =  and data_len =  and data=@mxml_xml
            and block_size = :i_n_block_size
         |
         write output file where
            filename = @full_file_name and data_ptr = 
            and data_len =  and data = 
            and data_bin = @encrypted_data
      }
      |
      /* ftp mode is picked up off the stack */
      if (:i_c_use_sftp = 'T')
      {
         sl_send file_to_sftp
           where host = :I_C_HOST_ID
             and port = :I_N_PORT_ID
             and user = :I_C_USERID
             and pass = :I_C_PASSWD
             and pk_password = :I_C_PK_PASS
             and pk_file = :I_C_PK_FILE
             and destdir = :I_C_DESTDIR
             and destfile = :I_C_DESTFILE
             and srcdir = :I_C_TMPDIR
             and srcfile = :I_C_TMPFILE
             and trgdir = :I_C_TRGDIR
             and trgfile = :I_C_TRGFILE
             and remove_srcfile = :I_C_REMOVE_TMP_FILE
             /* Force binary mode for encyrpted files */
             and mode = decode(nvl(:i_c_Encrypt_RPBF,'F'),'T','I',:I_C_MODE)
      }
      else
      {
         sl_send file_to_ftp
           where host = :I_C_HOST_ID
             and port = :I_N_PORT_ID
             and user = :I_C_USERID
             and pass = :I_C_PASSWD
             and proxyHost = :I_C_PROXY_HOST
             and proxyPort = :I_C_PROXY_PORT
             and proxyUser = :I_C_PROXY_USER
             and proxyPass = :I_C_PROXY_PASS
             and proxyType = :I_C_PROXY_TYPE
             and destdir = :I_C_DESTDIR
             and destfile = :I_C_DESTFILE
             and srcdir = :I_C_TMPDIR
             and srcfile = :I_C_TMPFILE
             and trgdir = :I_C_TRGDIR
             and trgfile = :I_C_TRGFILE
             and remove_srcfile = :I_C_REMOVE_TMP_FILE
             /* Force binary mode for encyrpted files */
             and mode = decode(nvl(:i_c_Encrypt_RPBF,'F'),'T','I',:I_C_MODE)
      }
      |
      sl_set comm_cmnt where comm_cmnt = @full_file_name||'->'||:I_C_HOST_ID||':'||:I_C_DESTDIR||'/'||:I_C_DESTFILE

   }
}
finally
{
   sl_send ifd_data_mem_xml_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",4041,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_HTTP","SL_COMM","MOCA","Convert IFD to XML and send it using HTTP post","F","F","F","F","F","F","F","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      publish data
      where url = :I_C_URL
        and name_value_pairs = :I_C_NAME_VALUE_PAIRS
        and encode_data = :I_C_ENCODE_DATA
		and proxy_host_id = :I_C_PROXY_HOST
        and proxy_port_no = :I_C_PROXY_PORT
        and proxy_usr_id = :I_C_PROXY_USER
        and proxy_usr_pswd = :I_C_PROXY_PASS
        /*
         * html_headers are extra headers that will be sent with the post
         */
        and html_headers = :I_C_HTTP_HEADERS
        /*
         *  handle_status_cmd provides local syntax for
         *  handling response status.
         *  The default logic raises a communication error whenever
         *  response status not equal to 200
         */
        and handle_status_cmd = :I_C_HANDLE_STATUS_CMD
        /*
         *  get_comm_comment_cmd provides local syntax for publishing
         *  the comm_cmnt variable, used for determining the communication
         *  comment.  By default comment is set to the body of web
         *  server response (@body)
         */
        and get_comm_comment_cmd = :I_C_GET_COMM_COMMENT_CMD
        /*
         *  handle_response_cmd provides local syntax for adding
         *  extra logic to the communication algorithm.
         *  It is invoked as the last step of the algorithm execution.
         */
        and   handle_response_cmd = :I_C_HANDLE_RESPONSE_CMD
      |
      /* Set up schema, XSL style sheet */
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data
        where schema_dir = :i_c_schema_dir
          and xsl_dir = :i_c_xsl_dir
      |
      [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
      |
      [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
      |
      if (:i_c_schema_filename)
      {
        publish data
          where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
      }
      |
      if (:i_c_xsl_filename)
      {
        publish data
          where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
      }
      |
      sl_send ifd_data_mem_xml_get_xml
      where alg_context = :I_V_ALG_CONTEXT
      |
      do http request
      where url = @url
        and method = 'POST'
        and headers = @html_headers
        and body = @mxml_xml
        and encoding = :I_C_XML_ENCODING
        and proxy_host = @proxy_host_id
        and proxy_port = @proxy_port_no
        and proxy_usr = @proxy_usr_id
        and proxy_pswd = @proxy_usr_pswd
        and namevaluepairs = @name_value_pairs
      |
      if(@handle_status_cmd)
      {
         /* Execute custom status handler */
         execute server command
         where command = @handle_status_cmd
      }
      else
      {
         /* standard status handler raises an error
          *  if return status != 200
          */
         if(@status != 200)
         {
            set return status
            where code  = 3571
              and error_message = 'HTTP Error status: ['
                         || @status || '] message: ['
                         || @reason || '] body: [' || @body || ']'
         }
      }
      |
      {
         if(@get_comm_comment_cmd)
         {
            /* custom comment command needs to publish
             * comment text as comm_cmnt
             */

            execute server command
            where command = @get_comm_comment_cmd
         }
         else
         {
            /* standard comment will be set to the value of variable body */
            publish data where comm_cmnt = @body
         }
         |
         sl_set comm_cmnt where comm_cmnt=@comm_cmnt
         ;
         if(@handle_response_cmd)
         {
            /* any post processing is done by handle_response_command */
         execute server command where command = @handle_response_cmd
         }
      }
   }
}
finally
{
   sl_send ifd_data_mem_xml_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",4225,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_INIT","SL_COMM","MOCA","Initialize IFD XML context","F","F","F","F","F","F","F","sl_send ifd_data_mem_xml_init
where alg_context = :I_V_ALG_CONTEXT
  and xml_encoding = :I_C_XML_ENCODING
  and xml_version = :I_C_XML_VERSION",142,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_INIT_2","SL_COMM","MOCA","Initialize IFD XML","F","F","F","F","F","F","F","sl_send ifd_data_mem_xml_init
where alg_context = :I_V_ALG_CONTEXT
  and xml_encoding = :I_C_XML_ENCODING
  and xml_version = :I_C_XML_VERSION
  and dont_use_legacy = 'T'",170,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_JMS_TOPIC","SL_COMM","MOCA","Sends ifd data as XML via JMS destination","F","F","F","F","F","T","F","try
{
/* We send the message to JMS Topic only if status so far was good */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      /* Set up schema, XSL style sheet */
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data
        where schema_dir = :i_c_schema_dir
          and xsl_dir = :i_c_xsl_dir
      |
      [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
      |
      [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
      |
      if (:i_c_schema_filename)
      {
        publish data
          where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
      }
      |
      if (:i_c_xsl_filename)
      {
        publish data
          where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
      }
      |
      sl_send ifd_data_mem_xml_get_xml  where alg_context = :I_V_ALG_CONTEXT
      |
      if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
      {
          publish data
          where <<OVERSTACKED_ARGS>>
            and destname = :I_C_TOPIC_NAME
            and contextfactory = :I_C_CONTEXT_FACTORY
            and pkgprefixes = :I_C_PKG_PREFIXES
            and providerURL = :I_C_PROVIDER_URL
            and connfactory = :I_C_CONN_FACTORY
            and correlation_id = :I_C_CORRELATION_ID
            and delivery_mode = :I_C_DELIVERY_MODE
            and priority = nvl(:I_C_PRIORITY, ) /*  for default value */
            and reply_to_request_attr = :I_C_REPLYTO_REQUEST_ATTR
            and time_to_live = nvl(:I_C_TIME_TO_LIVE, ) /*  for default value */
            and type = :I_C_TYPE
            and custom_properties_request_attr = :I_C_PROPERTIES_REQUEST_ATTR
          |
          /* Used to setup extra jms properties (e.g. JNDI security and createTopicConnection security */
          set extra jms properties
          |
          sl_jms send_msg
          where messagetext = @mxml_xml
      }
   }
}
finally
{
   /* Free request variable */
   [[
   import javax.jms.Destination;
   String replyToReqAttr = :I_C_REPLYTO_REQUEST_ATTR
   if (replyToReqAttr !=  && !replyToReqAttr.isEmpty()) {
       Object replyTo = MocaUtils.currentContext().getRequestAttribute(replyToReqAttr);
       if (replyTo !=  && replyTo instanceof Destination) {
           replyTo = ;
           MocaUtils.currentContext().removeRequestAttribute(replyToReqAttr);
       }
   }
   String customPropReqAttr = :I_C_PROPERTIES_REQUEST_ATTR
   if (customPropReqAttr !=  && !customPropReqAttr.isEmpty()) {
       Object props = MocaUtils.currentContext().getRequestAttribute(customPropReqAttr);
       if (props !=  && props instanceof MocaResults) {
           props = ;
           MocaUtils.currentContext().removeRequestAttribute(customPropReqAttr);
       }
   }
   ]]
   |
   /* Free cache */
   sl_jms free_connection_cache
   catch(@?)
   |
   publish data where err_code = @?
   |
   try
   {
       sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT
   }
   catch(@?)
   {
       publish data where finish_err_code = @? and finish_err_msg = @!
       |
       if(@err_code = 0)
       {
           set return status where code = @finish_err_code and message = @finish_err_msg
       }
   }
}",3449,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_JMSMQ","SL_COMM","MOCA","Sends ifd data as XML via JMS destination","F","F","F","F","F","T","F","try
{
/* We send the message to JMS MQ only if status so far was good */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      /* Set up schema, XSL style sheet */
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data
        where schema_dir = :i_c_schema_dir
          and xsl_dir = :i_c_xsl_dir
      |
      [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
      |
      [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
      |
      if (:i_c_schema_filename)
      {
        publish data
          where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
      }
      |
      if (:i_c_xsl_filename)
      {
        publish data
          where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
      }
      |
      sl_send ifd_data_mem_xml_get_xml  where alg_context = :I_V_ALG_CONTEXT
      |
      if(nvl(:I_C_EXT_CP_FAILURE_FLG, 'F') != 'T')
      {
          publish data
          where <<OVERSTACKED_ARGS>>
            and destname = :I_C_QUEUE_NAME
            and contextfactory = :I_C_CONTEXT_FACTORY
            and pkgprefixes = :I_C_PKG_PREFIXES
            and providerURL = :I_C_PROVIDER_URL
            and connfactory = :I_C_CONN_FACTORY
            and correlation_id = :I_C_CORRELATION_ID
            and delivery_mode = :I_C_DELIVERY_MODE
            and priority = nvl(:I_C_PRIORITY, ) /*  for default value */
            and reply_to_request_attr = :I_C_REPLYTO_REQUEST_ATTR
            and time_to_live = nvl(:I_C_TIME_TO_LIVE, ) /*  for default value */
            and type = :I_C_TYPE
            and custom_properties_request_attr = :I_C_PROPERTIES_REQUEST_ATTR
          |
          /* Used to setup extra jms properties (e.g. JNDI security and createQueueConnection security */
          set extra jms properties
          |
          sl_jms send_msg
          where messagetext = @mxml_xml
      }
   }
}
finally
{
   /* Free request variable */
   [[
   import javax.jms.Destination;
   String replyToReqAttr = :I_C_REPLYTO_REQUEST_ATTR
   if (replyToReqAttr !=  && !replyToReqAttr.isEmpty()) {
       Object replyTo = MocaUtils.currentContext().getRequestAttribute(replyToReqAttr);
       if (replyTo !=  && replyTo instanceof Destination) {
           replyTo = ;
           MocaUtils.currentContext().removeRequestAttribute(replyToReqAttr);
       }
   }
   String customPropReqAttr = :I_C_PROPERTIES_REQUEST_ATTR
   if (customPropReqAttr !=  && !customPropReqAttr.isEmpty()) {
       Object props = MocaUtils.currentContext().getRequestAttribute(customPropReqAttr);
       if (props !=  && props instanceof MocaResults) {
           props = ;
           MocaUtils.currentContext().removeRequestAttribute(customPropReqAttr);
       }
   }
   ]]
   |
   /* Free cache */
   sl_jms free_connection_cache
   catch(@?)
   |
   publish data where err_code = @?
   |
   try
   {
       sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT
   }
   catch(@?)
   {
       publish data where finish_err_code = @? and finish_err_msg = @!
       |
       if(@err_code = 0)
       {
           set return status where code = @finish_err_code and message = @finish_err_msg
       }
   }
}",3446,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_JSOCKET","SL_COMM","MOCA","Send ifd data as XML through socket (based on JAVA)","F","F","F","F","F","F","F","if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
    /* Set up schema, XSL style sheet */
    [[dir_sep = java.io.File.separator;]] catch (@?)
    |
    publish data
      where schema_dir = :i_c_schema_dir
        and xsl_dir = :i_c_xsl_dir
    |
    [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
    |
    [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
    |
    if (:i_c_schema_filename)
    {
        publish data
          where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
    }
    |
    if (:i_c_xsl_filename)
    {
        publish data
          where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
    }
    |
    sl_send ifd_data_mem_xml_get_xml where alg_context = :I_V_ALG_CONTEXT
    |
    :I_C_MOCA_NQ_SEND_MSG_CMD
      where hostid = :I_C_HOSTID
        and portnum = :I_N_PORTNUM
        and reconnect_wait = :I_N_RECONNECT_WAIT
        and reconnect_attempts = :I_N_RECONNECT_ATTEMPTS
        and ack_timeout = :I_N_ACK_TIMEOUT
        and message = @mxml_xml
        and ext_charset = :I_C_EXT_CHARSET
} catch(@?)
|
publish data where err_num = @?
|
sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num)
{
    set return status where status = @err_num
}
|
if(@finish_err_num)
{
    set return status where status = @finish_err_num
}",1587,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_MOCA","SL_COMM","MOCA","Convert IFD to XML and execute a MOCA Component that gets this XML","F","F","F","F","F","F","F","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      publish data
      where moca_component_name = :I_C_MOCA_COMPONENT_NAME
        and moca_host = :I_C_MOCA_HOST
        and moca_port = :I_C_MOCA_PORT
        and service = :I_C_SERVICE
      |
      /* Set up schema, XSL style sheet */
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data
        where schema_dir = :i_c_schema_dir
          and xsl_dir = :i_c_xsl_dir
      |
      [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
      |
      [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
      |
      if (:i_c_schema_filename)
      {
        publish data
          where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
      }
      |
      if (:i_c_xsl_filename)
      {
        publish data
          where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
      }
      |
      sl_send ifd_data_mem_xml_get_xml where alg_context = :I_V_ALG_CONTEXT
      |
      /*
       * Execute the moca component
       */
      if ( @service and @service != '' )
         publish data where moca_remote_str = 'Remote(''' || @service || ''')'
      else if ( @moca_host and @moca_host != '' )
         publish data where moca_remote_str='Remote(''' || @moca_host || ':' || @moca_port || ''')'
      else
         publish data where moca_remote_str=''
      |
      execute server command
      where cmd = @moca_remote_str || @moca_component_name
        and xml = @mxml_xml
      |
      sl_set comm_cmnt where comm_cmnt=@cmd
   }
}
finally
{
   sl_send ifd_data_mem_xml_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",1931,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_MQSERIES","SL_COMM","MOCA","Obsolete (no implementation) Send IFD ifd data as XML to MQSeries","F","F","F","F","F","F","F","/* Send the message to MQ Series only if we had a good status so far */
if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
   sl_send ifd_data_mem_xml_get where alg_context = :I_V_ALG_CONTEXT
   |
   sl_mqs send_msg
   where queue_manager_name = :I_C_QUEUE_MANAGER_NAME
     and queue_name = :I_C_QUEUE_NAME
     and channel = :I_C_CHANNEL
     and connection = :I_C_CONNECTION
     and max_message_len = :I_N_MAX_MESSAGE_LEN
     and message_ptr = @data_ptr
     and message_len = @data_len
     and appl_identity_data = :I_C_APPL_IDENTITY_DATA
} catch(@?)
/* We need to be careful to preserve the original error code.
 * Unfortunately we cannot preserve the original error message.
 */
|
publish data where err_num = @?
|
sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num)
{
  set return status where status = @err_num
}
|
if(@finish_err_num)
{
  set return status where status = @finish_err_num
}",977,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_PTR","SL_COMM","MOCA","Convert IFD to XML and returns a pointer to that XML","F","F","F","F","F","F","F","try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      sl_send ifd_data_mem_xml_get_ctxt where alg_context = :I_V_ALG_CONTEXT
      |
      execute server command
      where cmd = :I_C_TAIL_MOCA_CMD
        and mxml_ctxt = @mxml_ctxt
   }
}
finally
{
   sl_send ifd_data_mem_xml_finish_legacy
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",415,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_RCV_JSOCKET","SL_COMM","MOCA","Reply ifd data as XML through receiving socket (based on JAVA)","F","F","F","F","F","F","F","if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
    /* Set up schema, XSL style sheet */
    [[dir_sep = java.io.File.separator;]] catch (@?)
    |
    publish data
      where schema_dir = :i_c_schema_dir
        and xsl_dir = :i_c_xsl_dir
    |
    [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
    |
    [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
    |
    if (:i_c_schema_filename)
    {
        publish data
          where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
    }
    |
    if (:i_c_xsl_filename)
    {
        publish data
          where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
    }
    |
    sl_send ifd_data_mem_xml_get_xml where alg_context = :I_V_ALG_CONTEXT
    |
    :I_C_MOCA_NQ_REPLY_MSG_CMD
      where message = @mxml_xml
        and ext_charset = :I_C_EXT_CHARSET
        and ack_timeout = nvl(:I_N_ACK_TIMEOUT,60)
} catch(@?)
|
publish data where err_num = @?
|
sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num)
{
    set return status where status = @err_num
}
|
if(@finish_err_num)
{
    set return status where status = @finish_err_num
}",1422,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_RCV_SOCKET","SL_COMM","MOCA","Send ifd data as XML back through receiving socket","F","F","F","F","F","F","F","/* Send the message through socket only if we had a good status so far */
if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
   sl_send ifd_data_mem_xml_get where alg_context = :I_V_ALG_CONTEXT
   |
   sl_sock send_msg_cur_rcv_socket
   where ack_timeout = nvl(:I_N_ACK_TIMEOUT,60)
     and check_ack_nak_cmd = nvl(:I_C_CHECK_ACK_NAK_CMD,"sl_sock check_ack_nak none")
     and get_header_and_footer_cmd = :I_C_GET_HEADER_AND_FOOTER_CMD
     and message_ptr = @data_ptr
     and message_len = @data_len
} catch(@?)
/* We need to be careful to preserve the original error code.
 * Unfortunately we cannot preserve the original error message.
 */
|
publish data where err_num = @?
|
sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num)
{
  set return status where status = @err_num
}
|
if(@finish_err_num)
{
  set return status where status = @finish_err_num
}",933,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_SAPJCO_IDOC","SL_COMM","MOCA","Sends ifd data using SAP Jco IDoc XML format","F","F","F","F","F","F","F","try
{
/* We send the message to SAPJCO only if status so far was good */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      /* Set up schema, XSL style sheet */
      [[dir_sep = java.io.File.separator;]] catch (@?)
      |
      publish data
        where schema_dir = :i_c_schema_dir
          and xsl_dir = :i_c_xsl_dir
      |
      [[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
      |
      [[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
      |
      if (:i_c_schema_filename)
      {
        publish data
          where schema_filename = decode(@schema_dir || 'X',
                    'X', :i_c_schema_filename,
                    @schema_dir || @dir_sep || :i_c_schema_filename)
      }
      |
      if (:i_c_xsl_filename)
      {
        publish data
          where xsl_filename = decode(@xsl_dir || 'X',
                    'X', :i_c_xsl_filename,
                    @xsl_dir || @dir_sep || :i_c_xsl_filename)
      }
      |
      sl_send ifd_data_mem_xml_get_xml  where alg_context = :I_V_ALG_CONTEXT
      |
      send sap idoc xml where xml=@mxml_xml
         and ifd_data_seq = :i_n_ifd_data_seq
         and destination = :i_c_sap_destination
      |
      sl_set comm_cmnt where comm_cmnt = 'TID: '||@tid||' to destination '||:i_c_sap_destination
   }
}
finally
{
   publish data where err_code = @?
   |
   try
   {
       sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT
   }
   catch(@?)
   {
       publish data where finish_err_code = @? and finish_err_msg = @!
       |
       if(@err_code = 0)
       {
           set return status where code = @finish_err_code and message = @finish_err_msg
       }
   }
}",1706,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_SOCKET","SL_COMM","MOCA","Send ifd data as XML through socket","F","F","F","F","F","F","F","/* Send the message through socket only if we had a good status so far */
if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
{
   sl_send ifd_data_mem_xml_get where alg_context = :I_V_ALG_CONTEXT
   |
   sl_sock send_msg
   where hostid = :I_C_HOSTID
     and portnum = :I_N_PORTNUM
     and reconnect_wait = :I_N_RECONNECT_WAIT
     and reconnect_attempts = :I_N_RECONNECT_ATTEMPTS
     and ack_timeout = :I_N_ACK_TIMEOUT
     and check_ack_nak_cmd = :I_C_CHECK_ACK_NAK_CMD
     and get_header_and_footer_cmd = :I_C_GET_HEADER_AND_FOOTER_CMD
     and message_ptr = @data_ptr
     and message_len = @data_len
} catch(@?)
/* We need to be careful to preserve the original error code.
 * Unfortunately we cannot preserve the original error message.
 */
|
publish data where err_num = @?
|
sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
|
publish data where finish_err_num = @?
|
if(@err_num)
{
  set return status where status = @err_num
}
|
if(@finish_err_num)
{
  set return status where status = @finish_err_num
}",1038,1,"20210202171440","","SLIMP_I",""
"SL_O_XML_MEM_XSL_MERGE","SL_COMM","MOCA","Merge IFD output (rendered as XML) with XSLT to produce output document","F","F","F","F","F","F","F","publish data where directory = :i_c_directory
| [[directory = MocaUtils.expandEnvironmentVariables(moca,directory)]]
| publish data where output_filename = @directory || '/' || :i_c_filename
| [select replace(replace(@output_filename, '.html','.xml'), ' ', '_') temp_filename from dual ]
|
try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      sl_send which_xml_ctxt
      |
      if (@xml_ctxt != 'DOM')
      {
          /* Original XML */
          sl_send ifd_data_xml_get
          | write output file where filename = @temp_filename and data = @mxml_xml
          /* Transformed HTML */
          | publish data where xsl_directory = :i_c_xsl_directory
          | [[xsl_directory = MocaUtils.expandEnvironmentVariables(moca,xsl_directory)]]
          | publish data where xsl_filename = @xsl_directory || '/' || :i_c_xsl_filename
          | sl_get transformed_xml_string where str = @mxml_xml and xsl_filename = @xsl_filename
          | sl_convert xml_data_by_unescaping where xml = @xml
          |
          if(nvl(:i_c_Encrypt_RPBF,'F') = 'F')
          {
             write output file
                where filename = @output_filename
                  and data = @xml
          }
          else
          {
             encrypt data using RPBF where
                data_ptr =  and data_len =  and data = @xml
                and block_size = :i_n_block_size
             |
             write output file where
                filename = @output_filename and data_ptr = 
                and data_len =  and data = 
                and data_bin = @encrypted_data
          }
      }
      else
      {
          sl_send ifd_data_mem_xml_get_ctxt where alg_context = :I_V_ALG_CONTEXT
          | write xml file where filename= @temp_filename and mxml_ctxt=@mxml_ctxt and mxml_write_raw = 'F'
          | sl_send ifd_data_mem_xml_finish where alg_context = :I_V_ALG_CONTEXT catch(@?)
          | parse xml where mxml_ctxt =  and filename = @temp_filename
          | publish data where xsl_directory = :i_c_xsl_directory
          | [[xsl_directory = MocaUtils.expandEnvironmentVariables(moca,xsl_directory)]]
          | publish data where xsl_filename = @xsl_directory || '/' || :i_c_xsl_filename and ifd_data_mxml_ctxt = @mxml_ctxt
          | apply stylesheet where filename = @xsl_filename and mxml_ctxt=@mxml_ctxt
          | sl_set comm_cmnt where comm_cmnt=@output_filename
          | get xml where mxml_ctxt=@mxml_ctxt and mxml_get_raw = 'T'
          |
          if(nvl(:i_c_Encrypt_RPBF,'F') = 'F')
          {
             write output file
                where filename = @output_filename
                  and data = @mxml_xml
          }
          else
          {
             encrypt data using RPBF where
                data_ptr =  and data_len =  and data=@mxml_xml
                and block_size = :i_n_block_size
             |
             write output file where
                filename = @output_filename and data_ptr = 
                and data_len =  and data = 
                and data_bin = @encrypted_data
          }
          | stop xml parser
          | stop xml parser where mxml_ctxt = @ifd_data_mxml_ctxt
      }
   }
}
finally
{
   if(@? != 0)
   {
      remove file where filnam = @output_filename catch(@?)
   }
   |
   sl_send ifd_data_mem_xml_finish
     where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",3476,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_FILE","SL_COMM","MOCA","Process an inbound file","F","F","F","F","F","F","F","/* Set up schema, XSL style sheet */
[[dir_sep = java.io.File.separator;]] catch (@?)
|
publish data
  where schema_dir = :i_c_schema_dir
    and xsl_dir = :i_c_xsl_dir
|
[[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
|
[[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
|
if (@use_gui_xsl_schema <> 'T' and :i_c_schema_filename)
{
    publish data
      where schema_filename = decode(@schema_dir || 'X',
                'X', :i_c_schema_filename,
                @schema_dir || @dir_sep || :i_c_schema_filename)
}
|
if (@use_gui_xsl_schema <> 'T' and :i_c_xsl_filename)
{
    publish data
      where xsl_filename = decode(@xsl_dir || 'X',
                'X', :i_c_xsl_filename,
                @xsl_dir || @dir_sep || :i_c_xsl_filename)
}
|
sl_proc inb_file
where
      filename = :i_v_alg_context
and   sys_id = :i_c_sys_id
and   run_tran_flg = :i_c_run_tran_flg
and   xml_file_flg = :i_c_xml_file_flg
and   data_parent_node = :i_c_data_parent_node
and   ignore_seg_list = :i_c_ignore_seg_list
and   merge_from_sibling_seg = :i_c_merge_from_sibling_seg
and   decrypt_RPBF = :i_c_decrypt_RPBF
and   block_size = :i_n_block_size
and   ext_codepage = :i_c_ext_codepage
and   schema_filename = @schema_filename
and   xsl_filename = @xsl_filename
and   blocking_flg = :i_c_blocking_flg",1323,1,"20210202171439","","SLIMP_I",""
"SL_PROC_INB_HTTP","SL_COMM","MOCA","Process from inbound JMS","F","F","F","F","F","T","F","publish data
          where <<OVERSTACKED_ARGS>>
            and sys_id = :I_C_SYS_ID
            and provider_URL = :I_C_PROVIDER_ENDPOINT
			and response_provider = :I_C_RESPONSE_PROVIDER",190,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_HTTP_POST","SL_COMM","MOCA","Process from inbound HTTP post-algorithm","F","F","F","F","F","F","F","publish data where context = 'OK'",33,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_HTTP_PRE","SL_COMM","MOCA","Process from inbound HTTP pre-algorithm","F","F","F","F","F","F","F","publish data where context = 'OK'",33,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_JMS_TOPIC","SL_COMM","MOCA","Process from inbound JMS Topic","F","F","F","F","F","T","F","publish data
          where <<OVERSTACKED_ARGS>>
            and sys_id = :I_C_SYS_ID
            and providerURL = :I_C_PROVIDER_URL
            and destName = :I_C_TOPIC_NAME
            and contextfactory = :I_C_CONTEXT_FACTORY
            and pkgprefixes = :I_C_PKG_PREFIXES
            and connfactory = :I_C_CONN_FACTORY
            and selector = :I_C_SELECTOR
			and enable_durable_topic_subscription = :I_C_DURABLE_TOPIC_SUBR
			and topic_subscription_client_id = :I_C_TOPIC_SUBR_CLIENT_ID
			and topic_subscription_subscriber_name = :I_C_TOPIC_SUBR_SUBSCRIBER_NAME
|
/* Set up schema, XSL style sheet */
[[dir_sep = java.io.File.separator;]] catch (@?)
|
publish data
  where schema_dir = :i_c_schema_dir
    and xsl_dir = :i_c_xsl_dir
|
[[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
|
[[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
|
if (:i_c_schema_filename)
{
    publish data
      where schema_filename = decode(@schema_dir || 'X',
                'X', :i_c_schema_filename,
                @schema_dir || @dir_sep || :i_c_schema_filename)
}
|
if (:i_c_xsl_filename)
{
    publish data
      where xsl_filename = decode(@xsl_dir || 'X',
                'X', :i_c_xsl_filename,
                @xsl_dir || @dir_sep || :i_c_xsl_filename)
}
|
/* Used to setup extra jms properties (e.g. JNDI security and createTopicConnection security */
set extra jms properties
|
sl_jms proc_inb where
  alg_context = :I_V_ALG_CONTEXT
  and ext_codepage = :I_C_EXT_CODEPAGE
  and run_tran_flg = :I_C_RUN_TRAN_FLG
  and xml_flg = :I_C_XML_FLG
  and idle_timeout = :I_N_TIMEOUT
  and blocking_flg = :I_C_BLOCKING_FLG",1656,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_JMS_TOPIC_POST","SL_COMM","MOCA","Process from inbound JMS Topic post-algorithm","F","F","F","F","F","F","F","sl_jms free_connection_cache",28,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_JMS_TOPIC_PRE","SL_COMM","MOCA","Process from inbound JMS Topic pre-algorithm","F","F","F","F","F","F","F","publish data where context = 'OK'",33,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_JMSMQ","SL_COMM","MOCA","Process from inbound JMS Queue","F","F","F","F","F","T","F","publish data
          where <<OVERSTACKED_ARGS>>
            and sys_id = :I_C_SYS_ID
            and providerURL = :I_C_PROVIDER_URL
            and destName = :I_C_QUEUE_NAME
            and contextfactory = :I_C_CONTEXT_FACTORY
            and pkgprefixes = :I_C_PKG_PREFIXES
            and connfactory = :I_C_CONN_FACTORY
            and selector = :I_C_SELECTOR
			and close_consumer_on_consumption = :I_C_CLOSE_CONSUMER
|
/* Set up schema, XSL style sheet */
[[dir_sep = java.io.File.separator;]] catch (@?)
|
publish data
  where schema_dir = :i_c_schema_dir
    and xsl_dir = :i_c_xsl_dir
|
[[schema_dir = MocaUtils.expandEnvironmentVariables(moca,schema_dir)]]
|
[[xsl_dir = MocaUtils.expandEnvironmentVariables(moca,xsl_dir)]]
|
if (:i_c_schema_filename)
{
    publish data
      where schema_filename = decode(@schema_dir || 'X',
                'X', :i_c_schema_filename,
                @schema_dir || @dir_sep || :i_c_schema_filename)
}
|
if (:i_c_xsl_filename)
{
    publish data
      where xsl_filename = decode(@xsl_dir || 'X',
                'X', :i_c_xsl_filename,
                @xsl_dir || @dir_sep || :i_c_xsl_filename)
}
|
/* Used to setup extra jms properties (e.g. JNDI security and createQueueConnection security */
set extra jms properties
|
sl_jms proc_inb where
  alg_context = :I_V_ALG_CONTEXT
  and ext_codepage = :I_C_EXT_CODEPAGE
  and run_tran_flg = :I_C_RUN_TRAN_FLG
  and xml_flg = :I_C_XML_FLG
  and idle_timeout = :I_N_TIMEOUT
  and blocking_flg = :I_C_BLOCKING_FLG",1508,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_JMSMQ_POST","SL_COMM","MOCA","Process from inbound JMS Queue post-algorithm","F","F","F","F","F","F","F","sl_jms free_connection_cache",28,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_JMSMQ_PRE","SL_COMM","MOCA","Process from inbound JMS Queue pre-algorithm","F","F","F","F","F","F","F","publish data where context = 'OK'",33,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_JSOCKET","SL_COMM","MOCA","Inbound algorithm used to help dummy up Java socket communication method","F","F","F","F","F","F","F","noop
where portnum = :i_n_portnum
and proc_inb_cmd = :i_c_proc_inb_cmd
and ext_charset = :i_c_ext_charset
and ext_codepage = :i_c_ext_codepage
and extra_cmd_args = :i_c_extra_cmd_args
and pool_size = :i_n_pool_size
and run_tran_flg = :i_c_run_tran_flg
and run_tran_queue = :i_c_run_tran_queue
and xml_flg = :i_c_xml_flg
and schema_dir = :i_c_schema_dir
and schema_filename = :i_c_schema_filename
and xsl_dir = :i_c_xsl_dir
and xsl_filename = :i_c_xsl_filename",459,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_MQS","SL_COMM","MOCA","Obsolete (no implementation) Process from inbound MQSeries","F","F","F","F","F","F","F","sl_mqs proc_inb
where alg_context = :I_V_ALG_CONTEXT
  and sys_id = :I_C_SYS_ID
  and queue_manager_name = :I_C_QUEUE_MANAGER_NAME
  and queue_name = :I_C_QUEUE_NAME
  and channel = :I_C_CHANNEL
  and connection = :I_C_CONNECTION
  and timeout = :I_N_TIMEOUT
  and run_tran_flg = :I_C_RUN_TRAN_FLG
  and xml_flg = :I_C_XML_FLG",326,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_MQS_POST","SL_COMM","MOCA","Obsolete (no implementation) Process from inbound MQSeries post-algorithm","F","F","F","F","F","F","F","sl_mqs proc_inb_close where alg_context = :I_V_ALG_CONTEXT",58,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_MQS_PRE","SL_COMM","MOCA","Obsolete (no implementation) Process from inbound MQSeries pre-algorithm","F","F","F","F","F","F","F","sl_mqs proc_inb_open
where queue_manager_name = :I_C_QUEUE_MANAGER_NAME
  and queue_name = :I_C_QUEUE_NAME
  and channel = :I_C_CHANNEL
  and connection = :I_C_CONNECTION
  and max_message_len = :I_N_MAX_MESSAGE_LEN",215,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_NOOP","SL_COMM","MOCA","Inbound algorithm used to help dummy up communication method","F","F","F","F","F","F","F","noop",4,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_SOCKET","SL_COMM","MOCA","Process from inbound socket","F","F","F","F","F","F","F","sl_sock proc_inb
where sys_id = :I_C_SYS_ID
  and port = :I_N_PORT
  and idle_timeout = :I_N_IDLE_TIMEOUT
  and parse_packet_cmd = :I_C_PARSE_PACKET_CMD
  and run_tran_flg = :I_C_RUN_TRAN_FLG
  and xml_flg = :I_C_XML_FLG
  and on_disconnect_log_err = :I_C_ON_DISC_LOG_ERR
  and ext_codepage = :I_C_EXT_CODEPAGE",310,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_SOCKET_POST","SL_COMM","MOCA","Process from inbound socket","F","F","F","F","F","F","F","publish data where context = 'OK'",33,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_SOCKET_PRE","SL_COMM","MOCA","Process from inbound socket pre-algorithm","F","F","F","F","F","F","F","publish data where context = 'OK'",33,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_XML_SAPJCO_IDOC","SL_COMM","MOCA","Inbound algorithm used to help dummy up SAP Jco communication method","F","F","F","F","F","F","F","noop
where run_tran_flg = :i_c_run_tran_flg
and   jcoserver = :i_c_jcoserver
and   num_connections = :i_n_num_connections
and   schema_dir = :i_c_schema_dir
and   schema_filename = :i_c_schema_filename
and   xsl_dir = :i_c_xsl_dir
and   xsl_filename = :i_c_xsl_filename",269,1,"20210202171440","","SLIMP_I",""
"SL_PROC_INB_XML_STRING","SL_COMM","MOCA","Obsolete (no implementation) Process inbound data presented to this algorithm as an XML string","F","F","F","F","F","F","F","sl_proc inb_xml_string
where
      sys_id = :i_c_sys_id
and   run_tran_flg = :i_c_run_tran_flg
and   data_parent_node = :i_c_data_parent_node
and   ignore_seg_list = :i_c_ignore_seg_list
and   merge_from_sibling_seg = :i_c_merge_from_sibling_seg
and   context = :i_v_alg_context",278,1,"20210202171439","","SLIMP_I",""
"SL_PROC_RESRVD_COMM_MTHD","SL_COMM","MOCA","Inbound algorithm used to prevent speical communication method used by general inbound adapter","F","F","F","F","F","F","F","set return status where status = 3053",37,1,"20210202171440","","SLIMP_I",""
"SL_SYS_COMM_FAIL_TO_FILE","SL_CONTROL","MOCA","Write information to a flat file for Communication Failure","F","F","F","F","F","T","F","sl_handle event_control_file where sl_info='Communication Failure' and <<OVERSTACKED_ARGS>>",91,1,"20210202171439","","SLIMP_I",""
"SL_T_IF_DUP_TID","SL_IFD_BLOCK","MOCA","Returns 'T' if a duplicated TID is encountered; used for blocking.","F","F","F","F","F","T","F","sl_get is_dup_tid",17,1,"20210202171440","","SLIMP_I",""
"SL_XML_XSL_MERGE","SL_COMM","MOCA","Merge IFD output (rendered as  XML) with XSLT to produce output document","F","T","F","F","F","T","F","sl_send ifd_to_xml_common where <<OVERSTACKED_ARGS>>
| publish data where directory = :i_c_directory
| [[directory = MocaUtils.expandEnvironmentVariables(moca,directory)]]
| publish data where output_filename = @directory || '/' || :i_c_filename
| [select  replace(replace(@output_filename, '.html','.xml'), ' ', '_') temp_filename from dual ]
| write xml file where filename= @temp_filename and mxml_ctxt=@mxml_ctxt and mxml_write_raw = 'F'
| stop xml parser
| parse xml where mxml_ctxt =  and filename = @temp_filename
| publish data where xsl_directory = :i_c_xsl_directory
| [[xsl_directory = MocaUtils.expandEnvironmentVariables(moca,xsl_directory)]]
| publish data where xsl_filename = @xsl_directory || '/' || :i_c_xsl_filename and ifd_data_mxml_ctxt = @mxml_ctxt
| apply stylesheet where filename = @xsl_filename and mxml_ctxt=@mxml_ctxt
| sl_set comm_cmnt where comm_cmnt=@output_filename
| write xml file where filename= @output_filename and mxml_ctxt=@mxml_ctxt and mxml_write_raw = 'T'
| stop xml parser
| stop xml parser where mxml_ctxt = @ifd_data_mxml_ctxt",1075,1,"20210202171439","","SLIMP_I",""
"TO_WIPSUP_FROM_STO","SL_IFD_BLOCK","MOCA","Block when the reason code on an Inventory Move is NOT    =    TO_WIPSUP_FROM_STO","F","F","F","F","F","F","T","[select decode(:i_c_reacod, 'TO_WIPSUP_FROM_STO', 'F', 'T') from dual ]",71,1,"20210202172858","","SLIMP_I",""
"UC_AUCTION_DATE_PROC","SL_IFD_SEG_PROC","MOCA","UC_AUCTION_DATE_PROC","F","F","F","F","F","T","F","/* UC_AUCTION_DATE_PROC */
publish data 
where <<OVERSTACKED_ARGS>>
|
validate stack variable not 
 where name = 'trntyp'
|
validate stack variable not 
 where name = 'wh_id'
|
validate stack variable not 
 where name = 'date'
|
validate stack variable not 
 where name = 'uc_action'
|
/* note: ignoring updates for today or earlier dates */
[select 'x'
   from dual
  where convert(datetime, stuff(stuff(stuff(@date, 9, 0, ' '), 12, 0, ':'), 15, 0, ':')) > convert(datetime, convert(varchar, sysdate, 112))] catch(-1403)
|
if (@? = 0)
{
    /* note: ignoring all flags: if it's an auction date, the date should NOT be present in the calmst with type P, 
       if uc_action = 1, meaning the auction date is blocked, then the date MUST be present in the calmst with type P*/
    if (@uc_action = 0)
    {
        [delete
           from calmst
          where cal_typ = 'P'
            and dcsdte = convert(datetime, stuff(stuff(stuff(@date, 9, 0, ' '), 12, 0, ':'), 15, 0, ':'))
            and wh_id = @wh_id] catch(-1403)
    }
    else if (@uc_action = 1)
    {
        [select 'x'
           from calmst
          where cal_typ = 'P'
            and dcsdte = convert(datetime, stuff(stuff(stuff(@date, 9, 0, ' '), 12, 0, ':'), 15, 0, ':'))
            and wh_id = @wh_id] catch(-1403)
        |
        if (@? = -1403)
        {
            generate next number
             where numcod = 'cal_id'
            |
            publish data
             where cal_id = @nxtnum
            |
            [insert
               into calmst(wh_id, dcsdte, cal_id, cal_typ, wrkflg, cycflg, pckflg, endflg, mod_usr_id, moddte)
             values (@wh_id, convert(datetime, stuff(stuff(stuff(@date, 9, 0, ' '), 12, 0, ':'), 15, 0, ':')), @cal_id, 'P', 1, 1, 0, 0, @usr_id, sysdate)]
        }
    }
}",1813,4,"20210216161607","","SLIMP",""
"USR_ADD_LODNUM_PREF","SL_IFD_FLD","MOCA","Add prefix of asn load (if applicable)","F","F","F","F","F","T","","publish data
 where <<OVERSTACKED_ARGS>>
|
[select rtstr1 as prefix_cmd
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'ASN_PRE'
    and wh_id = @wh_id
    and rtnum1 = 1] catch(@?)
|
if (@? = 0 and @prefix_cmd != '')
{
    execute server command
     where cmd = @prefix_cmd
    |
    validate stack variable not 
     where name = 'prefix_lodnum'
    |
    publish data
     where prefix_lodnum = @prefix_lodnum
}
else
{
    publish data
     where prefix_lodnum = @ifd_fld_data
}",542,4,"20210216161335","","SLIMP",""
"USR_ADD_PART_COLOR","ITEM","MOCA","USR_ADD_PART_COLOR (RFH specific","F","F","F","F","F","F","T","
    [select 1
       from prtstyle_attr
     where attr_colnam = 'prtcolor'
         and attr_codnam = :i_c_ifd_fld_data] catch(-1403)
    |
    if (@? = -1403 and :i_c_ifd_fld_data!='' and :i_c_ifd_fld_data!=)
    {
        Publish data where attr_colnam = 'prtcolor'
           and attr_codnam = :i_c_ifd_fld_data
        |
        create record where table = 'prtstyle_attr'
    }
|
publish data where res = :I_C_IFD_FLD_DATA",433,4,"20210216161210","","SLIMP",""
"USR_BLOCK_INV_ATTR_CHANGE","SL_IFD_SEG_BLOCK","MOCA","User Block Inventory attribute change","F","F","F","F","F","F","T","[select count(sl_eo_data_dtl.eo_seg_data) as result from sl_eo_data_dtl, sl_eo_data_hdr where sl_eo_data_hdr.eo_data_seq=sl_eo_data_dtl.eo_data_seq and  sl_eo_data_hdr.evt_data_seq=:i_n_evt_data_seq and sl_eo_data_dtl.eo_seg_id in ('INV_SEG','ASSET_SEG')] 
|
if (@result>0)
{
   publish data where blkval = 'F'
}   
else 
{
  publish data where blkval = 'T'
}",359,4,"20210216160332","","SLIMP",""
"USR_BLOCK_INV_RCV","SL_IFD_SEG_BLOCK","MOCA","User Block INV_RCV interface","F","F","F","F","F","F","T","[select 1
   from invlod
  where lodnum = :i_c_lodnum] catch(-1403)
|
if (@? = -1403)
{
   publish data where blkval = 'T'
}   
else 
{
  publish data where blkval = 'F'
}",171,4,"20210216160638","","SLIMP",""
"USR_BLOCK_INVENTORY_ADJUST","SL_IFD_SEG_BLOCK","MOCA","User Block Inventory Receipt Trans","F","F","F","F","F","F","T","if (:i_c_ATTR_CHG_FLG = 1)
{
    publish data
     where blkval = 'T'
}
else
{
    publish data
     where blkval = 'F'
}",121,4,"20210216160248","","SLIMP",""
"USR_BLOCK_INVENTORY_RECEIPT","SL_IFD_SEG_BLOCK","MOCA","User Block Inventory Receipt Trans","F","F","F","F","F","F","T","[select 1
   from rcvtrk
  where rcvtrk_stat != 'EX'
    and trknum = :i_c_trknum] catch(-1403)
|
if (@? = -1403)
{
   publish data where blkval = 'F'
}   
else 
{
  publish data where blkval = 'T'
}",199,4,"20210216161336","","SLIMP",""
"USR_CHECK_IP_FTP","SL_IFD_SEG_BLOCK","MOCA","Check For IP Footprint","F","F","F","F","F","F","T","{get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
[select rtnum1 as case_each
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-CASE'
    and wh_id = @wh_id] catch(-1403)
|
if ( (nvl(to_number(:i_n_INV_ATTR_INT5),0) < 1) or (@case_each=1))
    publish data where blkval = 'T' else    publish data where blkval = 'F'}",387,4,"20210216161336","","SLIMP",""
"USR_CHECK_PACKAGE_TYPE","SL_IFD_FLD","MOCA","Checks if the package type exists and is valid","F","F","F","F","F","F","T","[select * from usr_packing_map where uc_code=:I_C_IFD_FLD_DATA] catch (-1403)
|
if (@?=-1403)
{
set return status where code=2003 
                            and error_message="invalid value ("||:I_C_IFD_FLD_DATA ||") for package type" 
                            and message="invalid value ("||:I_C_IFD_FLD_DATA ||") for package type" 
                            and argdsc = 'package type'
                            and argval = :I_C_IFD_FLD_DATA
}
else
publish data where res=:I_C_IFD_FLD_DATA",501,4,"20210216161336","","SLIMP",""
"USR_CONVERT_HOLD","SL_IFD_FLD","MOCA","Conversion of hold code to host","F","F","F","F","F","F","","[select rtstr2 as hosthld from poldat_view where polcod='USR-INTEGRATOR' and poldat_view.polvar='TRANSACTIONS' and poldat_view.polval='CONVERT_HOLD' and poldat_view.wh_id=:i_c_trans_wh_id and poldat_view.rtint1=1 and poldat_view.rtstr1=:I_C_IFD_FLD_DATA] catch (@?)
|
if (@?=0)
{
publish data where correct_hldnum=@hosthld
}else{
publish data where correct_hldnum=:I_C_IFD_FLD_DATA
}",383,8,"20210216160248","","SLIMP",""
"USR_COPY_INV_ATTR_STR5","SL_IFD_FLD","MOCA","created for CR803600 - algorithm will copy invtyp to inv_attr_str5 under certain conditions","F","F","F","F","F","F","F","/*2019-11-14 Tim van den Akker & Salem Hamze CR803600*/
/* Get the destination system data indicators. */
[select _ind_char as dest__ind_char,
        nochg_ind_char as dest_nochg_ind_char,
        absent_ind_char as dest_absent_ind_char
   from sl_sys_def
  where sys_id = :i_c_dest_sys_id] catch(-1403)
|
/* Get the parent eo field value (for invtyp). */
sl_list par_eo_fld_from_evt_data_ptr
 where i_evt_data_ptr = :i_c_evt_data_ptr
   and i_eo_fld_id = :i_c_ifd_fld_misc_data
|
/* Publish the fields we will sue, and make inv_attr_str5  if it is one of the data indicators . */
publish data
 where wh_id = :i_c_wh_id
   and invtyp = @o_value
   and inv_attr_str5 = decode(:i_c_inv_attr_str5, @dest__ind_char, , @dest_nochg_ind_char, , @dest_absent_ind_char, , :i_c_inv_attr_str5)
|
/* Check in the policies if we need to modify inv_attr_str5 fro this invtyp. */
[select *
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'INV_ATTR_STR5'
    and wh_id = @wh_id
    and rtstr1 = @invtyp
    and rtnum1 = 1] catch(-1403)
|
if (@? = 0)
{
    /* If the policy is setup return invtyp and the existing inv_atttr_str5 separated by a dash, if inv_attr_str5 was empty just return invtyp. */
    publish data
     where inv_attr_str5 = @invtyp || iif(@inv_attr_str5 != '', '-' || @inv_attr_str5, '')
}
else
{
    /* If the policy is not setup just return the original inv_attr_str5. */
    publish data
     where inv_attr_str5 = @inv_attr_str5
}",1521,4,"20210216161336","","SLIMP",""
"USR_GEN_FTPCOD","SL_IFD_FLD","MOCA","Generate footprint code","F","F","F","F","F","F","T","get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
[select rtnum1 as case_each
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-CASE'
    and wh_id = @wh_id] catch(-1403)
|
if (@case_each=1){
publish data where res = :i_n_UC_TRP_HGHT || '-'  || :i_n_UC_TRP_WID || '-' || :i_n_UC_TRP_LEN || '-CS' 
}
else
{if (nvl(to_number(:i_n_INV_ATTR_INT5),0) < 1 )
{
publish data where res = :i_n_UC_TRP_HGHT || '-'  || :i_n_UC_TRP_WID || '-' || :i_n_UC_TRP_LEN || '-' || to_number(:i_n_INV_ATTR_INT2) 
}else{
publish data where res = :i_n_UC_TRP_HGHT || '-'  || :i_n_UC_TRP_WID || '-' || :i_n_UC_TRP_LEN || '-' || to_number(:i_n_INV_ATTR_INT2) || '-' || to_number(:i_n_INV_ATTR_INT5)
}
}",745,4,"20210216161336","","SLIMP",""
"USR_GET_ADJUST ASSETS","SL_RETR_MTHD_IMPL","MOCA","get adjustment Assets","F","F","F","F","F","F","F","if (:i_c_lodnum = '')
{
    publish data
     where lotnum = :i_c_lotnum
       and prtnum = :i_c_prtnum
       and prt_client_id = :i_c_prt_client_id
       and inv_attr_str4 = :i_c_inv_attr_str4
       and inv_attr_str9 = :i_c_inv_attr_str9
    |
    [select invlod.lodnum as invtid
       from invdtl
      inner
       join invsub
         on (invsub.subnum = invdtl.subnum)
      inner
       join invlod
         on (invsub.lodnum = invlod.lodnum)
      inner
       join prtmst_view
         on (invdtl.prt_client_id = prtmst_view.prt_client_id and invdtl.prtnum = prtmst_view.prtnum and invlod.wh_id = prtmst_view.wh_id and prtmst_view.prdflg = 1 and prtmst_view.prtadjflg = 1)
      inner
       join locmst
         on locmst.stoloc = invlod.stoloc
        and locmst.wh_id = invlod.wh_id
      inner
       join loc_typ
         on loc_typ.loc_typ_id = locmst.loc_typ_id
      where invdtl.lotnum = @lotnum
        and invdtl.prtnum = @prtnum
        and invdtl.prt_client_id = @prt_client_id
        and invdtl.inv_attr_str4 = @inv_attr_str4
        and invdtl.inv_attr_str9 = @inv_attr_str9
        and loc_typ.fwiflg = 1
      group by invlod.lodnum] catch(-1403)
}
else
{
    publish data
     where asset_typ = :i_c_asset_typ
       and invtid = :i_c_lodnum
       and asset_qty = :i_n_asset_qty
}
|
[select nvl(@invtid, inv_asset.invtid) as invtid,
        iif(asset_typ.asset_typ = @asset_typ, nvl(inv_asset.untqty, 0), :i_n_sys_num__ind_char) as to_untqty,
        iif(asset_typ.asset_typ = @asset_typ, (nvl(inv_asset.untqty, 0) - @asset_qty), inv_asset.untqty) as from_qty,
        asset_typ.asset_typ
   from (select *
           from asset_typ
          where asset_typ = @asset_typ
             or asset_typ in (select asset_typ
                                from inv_asset
                               where invtid = @invtid)) asset_typ
   left
   join (select *
           from inv_asset
          where inv_asset.invtid = @invtid) inv_asset
     on inv_asset.asset_typ = asset_typ.asset_typ] catch(-1403) >> res_assets
|
if (@? = -1403)
{
    /* backup part for deletion, get the asset information from the receipt as the stock is moved to perm-adjust */
    publish data
     where lotnum = :i_c_lotnum
       and prtnum = :i_c_prtnum
       and prt_client_id = :i_c_prt_client_id
       and inv_attr_str4 = :i_c_inv_attr_str4
       and inv_attr_str9 = :i_c_inv_attr_str9
    |
    [select invdtl.rcvkey,
            invdtl.prt_client_id,
            invlod.wh_id,
            invlod.lodnum as invtid
       from invdtl
      inner
       join invsub
         on (invsub.subnum = invdtl.subnum)
      inner
       join invlod
         on (invsub.lodnum = invlod.lodnum)
      inner
       join prtmst_view
         on (invdtl.prt_client_id = prtmst_view.prt_client_id and invdtl.prtnum = prtmst_view.prtnum and invlod.wh_id = prtmst_view.wh_id and prtmst_view.prdflg = 1 and prtmst_view.prtadjflg = 1)
      inner
       join locmst
         on locmst.stoloc = invlod.stoloc
        and locmst.wh_id = invlod.wh_id
      inner
       join loc_typ
         on loc_typ.loc_typ_id = locmst.loc_typ_id
      where invdtl.lotnum = @lotnum
        and invdtl.prtnum = @prtnum
        and invdtl.prt_client_id = @prt_client_id
        and invdtl.inv_attr_str4 = @inv_attr_str4
        and invdtl.inv_attr_str9 = @inv_attr_str9
      group by invdtl.rcvkey,
            invdtl.prt_client_id,
            invlod.wh_id,
            invlod.lodnum]
    |
    [select @invtid as invtid,
            '' as to_qty,
            rcv_asset.rcvqty as from_qty,
            rcv_asset.asset_typ
       from rcvlin,
            rcv_asset
      where rcvlin.rcvkey = @rcvkey
        and rcvlin.client_id = @prt_client_id
        and rcvlin.wh_id = @wh_id
        and rcvlin.trknum = rcv_asset.trknum
        and rcvlin.invnum = rcv_asset.invnum
        and rcvlin.supnum = rcv_asset.supnum
        and rcvlin.wh_id = rcv_asset.wh_id
        and rcvlin.client_id = rcv_asset.client_id
        and rcv_asset.asset_typ in (select rtstr1
                                                  from poldat_view
                                                where polcod = 'USR-RF-FORM'
                                                    and polvar = 'ASSET_IDENTIFY'
                                                    and polval = 'ASSET_GROUPS'
                                                    and rtstr2 = 'LADINGDRAGER'
                                                    and wh_id = rcv_asset.wh_id)] >> res_assets
}
|
publish top rows
 where resultset = @res_assets
   and rows = 2",4596,8,"20210216160248","","SLIMP",""
"USR_GET_ADJUST DETAILS","SL_RETR_MTHD_IMPL","MOCA","get adjustment details","F","F","F","F","F","F","T","publish data
 where lotnum = :i_c_lotnum
   and prtnum = :i_c_prtnum
   and prt_client_id = :i_c_prt_client_id
   and inv_attr_str4 = :i_c_inv_attr_str4
   and inv_attr_str9 = :i_c_inv_attr_str9
|
if (:i_c_asset_typ != '' and :i_c_lodnum != '' and nvl(:i_n_asset_qty, 0) != 0)
{
    [select distinct lotnum,
            prtnum,
            prt_client_id,
            inv_attr_str4,
            inv_attr_str9
       from inventory_view
      where lodnum = :i_c_lodnum]
}
|
[select max(invdtl.subnum) as subnum,
        max(invdtl.dtlnum) as dtlnum,
        sum(invdtl.untqty) as dtl_totqty,
        invdtl.prtnum,
        '' as to_prtnum,
        invdtl.prt_client_id,
        '' as to_prt_client_id,
        max(invdtl.ftpcod) as ftpcod,
        max(invdtl.untcas) as untcas,
        max(invdtl.untpak) as untpak,
        invdtl.lotnum,
        '' as to_lotnum,
        max(invdtl.sup_lotnum) as sup_lotnum,
        '' as to_sup_lotnum,
        max(invdtl.revlvl) as revlvl,
        '' as to_revlvl,
        max(invdtl.orgcod) as orgcod,
        '' as to_orgcod,
        max(invdtl.catch_qty) as catch_qty,
        max(invdtl.mandte) as mandte,
        '' as to_mandte,
        max(invdtl.expire_dte) as expire_dte,
        '' as to_expire_dte,
        max(invdtl.supnum) as supnum,
        '' as to_supnum,
        max(invdtl.invsts) as invsts,
        '' as to_invsts,
        max(invdtl.cstms_bond_flg) as cstms_bond_flg,
        '' as to_cstms_bond_flg,
        max(invdtl.dty_stmp_flg) as dty_stmp_flg,
        '' as to_dty_stmp_flg,
        max(invdtl.cnsg_flg) as cnsg_flg,
        '' as to_cnsg_flg,
        max(invdtl.inv_attr_str1) as inv_attr_str1,
        '' as to_inv_attr_str1,
        max(invdtl.inv_attr_str2) as inv_attr_str2,
        '' as to_inv_attr_str2,
        max(invdtl.inv_attr_str3) as inv_attr_str3,
        '' as to_inv_attr_str3,
        invdtl.inv_attr_str4,
        '' as to_inv_attr_str4,
        max(invdtl.inv_attr_str5) as inv_attr_str5,
        '' as to_inv_attr_str5,
        max(invdtl.inv_attr_str6) as inv_attr_str6,
        '' as to_inv_attr_str6,
        max(invdtl.inv_attr_str7) as inv_attr_str7,
        '' as to_inv_attr_str7,
        max(invdtl.inv_attr_str8) as inv_attr_str8,
        '' as to_inv_attr_str8,
        invdtl.inv_attr_str9,
        '' as to_inv_attr_str9,
        max(invdtl.inv_attr_str10) as inv_attr_str10,
        '' as to_inv_attr_str10,
        max(invdtl.inv_attr_str11) as inv_attr_str11,
        '' as to_inv_attr_str11,
        max(invdtl.inv_attr_str12) as inv_attr_str12,
        '' as to_inv_attr_str12,
        max(invdtl.inv_attr_str13) as inv_attr_str13,
        '' as to_inv_attr_str13,
        max(invdtl.inv_attr_str14) as inv_attr_str14,
        '' as to_inv_attr_str14,
        max(invdtl.inv_attr_str15) as inv_attr_str15,
        '' as to_inv_attr_str15,
        max(invdtl.inv_attr_str16) as inv_attr_str16,
        '' as to_inv_attr_str16,
        max(invdtl.inv_attr_str17) as inv_attr_str17,
        '' as to_inv_attr_str17,
        max(invdtl.inv_attr_str18) as inv_attr_str18,
        '' as to_inv_attr_str18,
        max(invdtl.inv_attr_int1) as inv_attr_int1,
        '' as to_inv_attr_int1,
        max(invdtl.inv_attr_int2) as inv_attr_int2,
        '' as to_inv_attr_int2,
        max(invdtl.inv_attr_int3) as inv_attr_int3,
        '' as to_inv_attr_int3,
        max(invdtl.inv_attr_int4) as inv_attr_int4,
        '' as to_inv_attr_int4,
        max(invdtl.inv_attr_int5) as inv_attr_int5,
        '' as to_inv_attr_int5,
        max(invdtl.inv_attr_flt1) as inv_attr_flt1,
        '' as to_inv_attr_flt1,
        max(invdtl.inv_attr_flt2) as inv_attr_flt2,
        '' as to_inv_attr_flt2,
        max(invdtl.inv_attr_flt3) as inv_attr_flt3,
        '' as to_inv_attr_flt3,
        max(invdtl.inv_attr_dte1) as inv_attr_dte1,
        '' as to_inv_attr_dte1,
        max(invdtl.inv_attr_dte2) as inv_attr_dte2,
        '' as to_inv_attr_dte2,
        max(invlod.lodnum) as lodnum,
        '' as to_lodnum,
        max(invlod.stoloc) as lodnum,
        max(invlod.load_attr1_flg) as load_attr1_flg,
        '' as to_load_attr1_flg,
        max(invlod.load_attr2_flg) as load_attr2_flg,
        '' as to_load_attr2_flg,
        max(invlod.load_attr3_flg) as load_attr3_flg,
        '' as to_load_attr3_flg,
        max(invlod.load_attr4_flg) as load_attr4_flg,
        '' as to_load_attr4_flg,
        max(invlod.load_attr5_flg) as load_attr5_flg,
        '' as to_load_attr5_flg,
        '' as add_hld_flg,
        max(invhld.hldnum) as hldnum,
        max(invhld.hldpfx) as hldpfx,
        max(locmst.arecod) as arecod,
        max(invlod.stoloc) as stoloc
   from invdtl
  inner
   join invsub
     on (invsub.subnum = invdtl.subnum)
  inner
   join invlod
     on (invsub.lodnum = invlod.lodnum)
  inner
   join prtmst_view
     on (invdtl.prt_client_id = prtmst_view.prt_client_id and invdtl.prtnum = prtmst_view.prtnum and invlod.wh_id = prtmst_view.wh_id and prtmst_view.prdflg = 1 and prtmst_view.prtadjflg = 1)
  inner
   join locmst
     on locmst.stoloc = invlod.stoloc
    and locmst.wh_id = invlod.wh_id
  inner
   join loc_typ
     on loc_typ.loc_typ_id = locmst.loc_typ_id
   left
   join invhld
     on (invhld.dtlnum = invdtl.dtlnum and invhld.wh_id = invlod.wh_id)
  where invdtl.lotnum = @lotnum
    and invdtl.prtnum = @prtnum
    and invdtl.prt_client_id = @prt_client_id
    and invdtl.inv_attr_str4 = @inv_attr_str4
    and invdtl.inv_attr_str9 = @inv_attr_str9
    and loc_typ.fwiflg = 1
  group by invdtl.lotnum,
        invdtl.prt_client_id,
        invdtl.prtnum,
        invdtl.inv_attr_str4,
        invdtl.inv_attr_str9] catch(-1403) >> result_data
|
if (@? = -1403)
{
    /*if no restults this is probably an adjust to 0, select again without loc_typ.fwiflg = 1 flag*/
    [select max(invdtl.subnum) as subnum,
            max(invdtl.dtlnum) as dtlnum,
            0 as dtl_totqty,
            invdtl.prtnum,
            '' as to_prtnum,
            invdtl.prt_client_id,
            '' as to_prt_client_id,
            max(invdtl.ftpcod) as ftpcod,
            max(invdtl.untcas) as untcas,
            max(invdtl.untpak) as untpak,
            invdtl.lotnum,
            '' as to_lotnum,
            max(invdtl.sup_lotnum) as sup_lotnum,
            '' as to_sup_lotnum,
            max(invdtl.revlvl) as revlvl,
            '' as to_revlvl,
            max(invdtl.orgcod) as orgcod,
            '' as to_orgcod,
            max(invdtl.catch_qty) as catch_qty,
            max(invdtl.mandte) as mandte,
            '' as to_mandte,
            max(invdtl.expire_dte) as expire_dte,
            '' as to_expire_dte,
            max(invdtl.supnum) as supnum,
            '' as to_supnum,
            max(invdtl.invsts) as invsts,
            '' as to_invsts,
            max(invdtl.cstms_bond_flg) as cstms_bond_flg,
            '' as to_cstms_bond_flg,
            max(invdtl.dty_stmp_flg) as dty_stmp_flg,
            '' as to_dty_stmp_flg,
            max(invdtl.cnsg_flg) as cnsg_flg,
            '' as to_cnsg_flg,
            max(invdtl.inv_attr_str1) as inv_attr_str1,
            '' as to_inv_attr_str1,
            max(invdtl.inv_attr_str2) as inv_attr_str2,
            '' as to_inv_attr_str2,
            max(invdtl.inv_attr_str3) as inv_attr_str3,
            '' as to_inv_attr_str3,
            invdtl.inv_attr_str4,
            '' as to_inv_attr_str4,
            max(invdtl.inv_attr_str5) as inv_attr_str5,
            '' as to_inv_attr_str5,
            max(invdtl.inv_attr_str6) as inv_attr_str6,
            '' as to_inv_attr_str6,
            max(invdtl.inv_attr_str7) as inv_attr_str7,
            '' as to_inv_attr_str7,
            max(invdtl.inv_attr_str8) as inv_attr_str8,
            '' as to_inv_attr_str8,
            invdtl.inv_attr_str9,
            '' as to_inv_attr_str9,
            max(invdtl.inv_attr_str10) as inv_attr_str10,
            '' as to_inv_attr_str10,
            max(invdtl.inv_attr_str11) as inv_attr_str11,
            '' as to_inv_attr_str11,
            max(invdtl.inv_attr_str12) as inv_attr_str12,
            '' as to_inv_attr_str12,
            max(invdtl.inv_attr_str13) as inv_attr_str13,
            '' as to_inv_attr_str13,
            max(invdtl.inv_attr_str14) as inv_attr_str14,
            '' as to_inv_attr_str14,
            max(invdtl.inv_attr_str15) as inv_attr_str15,
            '' as to_inv_attr_str15,
            max(invdtl.inv_attr_str16) as inv_attr_str16,
            '' as to_inv_attr_str16,
            max(invdtl.inv_attr_str17) as inv_attr_str17,
            '' as to_inv_attr_str17,
            max(invdtl.inv_attr_str18) as inv_attr_str18,
            '' as to_inv_attr_str18,
            max(invdtl.inv_attr_int1) as inv_attr_int1,
            '' as to_inv_attr_int1,
            max(invdtl.inv_attr_int2) as inv_attr_int2,
            '' as to_inv_attr_int2,
            max(invdtl.inv_attr_int3) as inv_attr_int3,
            '' as to_inv_attr_int3,
            max(invdtl.inv_attr_int4) as inv_attr_int4,
            '' as to_inv_attr_int4,
            max(invdtl.inv_attr_int5) as inv_attr_int5,
            '' as to_inv_attr_int5,
            max(invdtl.inv_attr_flt1) as inv_attr_flt1,
            '' as to_inv_attr_flt1,
            max(invdtl.inv_attr_flt2) as inv_attr_flt2,
            '' as to_inv_attr_flt2,
            max(invdtl.inv_attr_flt3) as inv_attr_flt3,
            '' as to_inv_attr_flt3,
            max(invdtl.inv_attr_dte1) as inv_attr_dte1,
            '' as to_inv_attr_dte1,
            max(invdtl.inv_attr_dte2) as inv_attr_dte2,
            '' as to_inv_attr_dte2,
            max(invlod.lodnum) as lodnum,
            '' as to_lodnum,
            max(invlod.stoloc) as lodnum,
            max(invlod.load_attr1_flg) as load_attr1_flg,
            '' as to_load_attr1_flg,
            max(invlod.load_attr2_flg) as load_attr2_flg,
            '' as to_load_attr2_flg,
            max(invlod.load_attr3_flg) as load_attr3_flg,
            '' as to_load_attr3_flg,
            max(invlod.load_attr4_flg) as load_attr4_flg,
            '' as to_load_attr4_flg,
            max(invlod.load_attr5_flg) as load_attr5_flg,
            '' as to_load_attr5_flg,
            '' as add_hld_flg,
            max(invhld.hldnum) as hldnum,
            max(invhld.hldpfx) as hldpfx,
            max(locmst.arecod) as arecod,
            max(invlod.stoloc) as stoloc
       from invdtl
      inner
       join invsub
         on (invsub.subnum = invdtl.subnum)
      inner
       join invlod
         on (invsub.lodnum = invlod.lodnum)
      inner
       join prtmst_view
         on (invdtl.prt_client_id = prtmst_view.prt_client_id and invdtl.prtnum = prtmst_view.prtnum and invlod.wh_id = prtmst_view.wh_id and prtmst_view.prdflg = 1 and prtmst_view.prtadjflg = 1)
      inner
       join locmst
         on locmst.stoloc = invlod.stoloc
        and locmst.wh_id = invlod.wh_id
      inner
       join loc_typ
         on loc_typ.loc_typ_id = locmst.loc_typ_id
       left
       join invhld
         on (invhld.dtlnum = invdtl.dtlnum and invhld.wh_id = invlod.wh_id)
      where invdtl.lotnum = @lotnum
        and invdtl.prtnum = @prtnum
        and invdtl.prt_client_id = @prt_client_id
        and invdtl.inv_attr_str4 = @inv_attr_str4
        and invdtl.inv_attr_str9 = @inv_attr_str9
        and loc_typ.adjflg = 1
      group by invdtl.lotnum,
            invdtl.prt_client_id,
            invdtl.prtnum,
            invdtl.inv_attr_str4,
            invdtl.inv_attr_str9] >> result_data
}
|
publish data combination
 where result = @result_data",11583,4,"20210216160248","","SLIMP",""
"USR_GET_ADJUST_ATTR ASSETS","SL_RETR_MTHD_IMPL","MOCA","get adjustment Assets","F","F","F","F","F","F","F","if (:i_c_lodnum = '' and :i_c_to_lodnum = '')
{
    [select invtid,
            '' as to_qty,
            untqty as from_qty,
            asset_typ
       from inv_asset
      where invtid in (select lodnum
                   from invsub,
                        invdtl
                  where invdtl.subnum = invsub.subnum
                    and (invdtl.dtlnum = :i_c_adj_ref2 or invdtl.lotnum = :i_c_from_lotnum and invdtl.prtnum = :i_c_from_prtnum and invdtl.inv_attr_str4 = :i_c_from_inv_attr_str4 and invdtl.inv_attr_str9 = :i_c_from_inv_attr_str9))] catch(-1403)
    }
    else
    {
        [select invtid,
                '' as to_qty,
                untqty as from_qty,
                asset_typ
           from inv_asset
          where invtid = nvl(:i_c_to_lodnum, :i_c_lodnum)] catch(-1403)
    }",810,4,"20210216160332","","SLIMP",""
"USR_GET_ADJUST_ATTR_DTL_SIMPLE","SL_RETR_MTHD_IMPL","MOCA","get adjustment details (attribute change) Details are not splitted when multiple to_values are sent (with a few exceptions).","F","F","F","F","F","F","T","if (:i_c_lodnum != '' and  :i_c_adj_ref2!='')
{
    [select distinct lotnum,
            prtnum,
            prt_client_id,
            inv_attr_str4
       from inventory_view
      where dtlnum =  :i_c_adj_ref2] catch(-1403)
| 
if (@?=-1403)
{
publish data
 where lotnum = :i_c_from_lotnum
   and prtnum = :i_c_from_prtnum
   and prt_client_id = :i_c_from_prt_client_id
   and inv_attr_str4 = :i_c_from_inv_attr_str4
}
}
else
{
    [select distinct lotnum,
            prtnum,
            prt_client_id,
            inv_attr_str4
       from inventory_view
      where lodnum = :i_c_lodnum] catch(-1403)
| 
if (@?=-1403)
{
publish data
 where lotnum = :i_c_from_lotnum
   and prtnum = :i_c_from_prtnum
   and prt_client_id = :i_c_from_prt_client_id
   and inv_attr_str4 = :i_c_from_inv_attr_str4
}
}
|
[select 
            invdtl.subnum,
            invdtl.dtlnum,
            invdtl.untqty,
            nvl(:i_c_from_prtnum, invdtl.prtnum) as prtnum,
            decode(nvl(:i_c_to_prtnum, ''), nvl(:i_c_from_prtnum, ''), '', nvl(:i_c_to_prtnum, '')) as to_prtnum,
            nvl(:i_c_from_prt_client_id, invdtl.prt_client_id) as prt_client_id,
            decode(nvl(:i_c_to_prt_client_id, ''), nvl(:i_c_from_prt_client_id, ''), '', nvl(:i_c_to_prt_client_id, '')) as to_prt_client_id,
            invdtl.ftpcod,
            invdtl.untcas,
            invdtl.untpak,
            nvl(:i_c_from_lotnum, invdtl.lotnum) as lotnum,
            decode(nvl(:i_c_to_lotnum, ''), nvl(:i_c_from_lotnum, ''), '', nvl(:i_c_to_lotnum, '')) as to_lotnum,
            nvl(:i_c_from_sup_lotnum, invdtl.sup_lotnum) as sup_lotnum,
            decode(nvl(:i_c_to_sup_lotnum, ''), nvl(:i_c_from_sup_lotnum, ''), '', nvl(:i_c_to_sup_lotnum, '')) as to_sup_lotnum,
            nvl(:i_c_from_revlvl, invdtl.revlvl) as revlvl,
            decode(nvl(:i_c_to_revlvl, ''), nvl(:i_c_from_revlvl, ''), '', nvl(:i_c_to_revlvl, '')) as to_revlvl,
            nvl(:i_c_from_orgcod, invdtl.orgcod) as orgcod,
            decode(nvl(:i_c_to_orgcod, ''), nvl(:i_c_from_orgcod, ''), '', nvl(:i_c_to_orgcod, '')) as to_orgcod,
            invdtl.catch_qty,
            nvl(to_date(:i_d_from_mandte, 'YYYYMMDDHH24MISS'), invdtl.mandte) as mandte,
            decode(nvl(to_date(:i_d_to_mandte, 'YYYYMMDDHH24MISS'), ''), nvl(to_date(:i_d_from_mandte, 'YYYYMMDDHH24MISS'), ''), '', nvl(to_date(:i_d_to_mandte, 'YYYYMMDDHH24MISS'), '')) as to_mandte,
            nvl(to_date(:i_d_from_expire_dte, 'YYYYMMDDHH24MISS'), invdtl.expire_dte) as expire_dte,
            decode(nvl(to_date(:i_d_to_expire_dte, 'YYYYMMDDHH24MISS'), ''), nvl(to_date(:i_d_from_expire_dte, 'YYYYMMDDHH24MISS'), ''), '', nvl(to_date(:i_d_to_expire_dte, 'YYYYMMDDHH24MISS'), '')) as to_expire_dte,
            nvl(:i_c_from_supnum, invdtl.supnum) as supnum,
            decode(nvl(:i_c_to_supnum, ''), nvl(:i_c_from_supnum, ''), '', nvl(:i_c_to_supnum, '')) as to_supnum,
            nvl(:i_c_from_invsts, invdtl.invsts) as invsts,
            decode(nvl(:i_c_to_invsts, ''), nvl(:i_c_from_invsts, ''), '', nvl(:i_c_to_invsts, '')) as to_invsts,
            nvl(:i_n_from_cstms_bond_flg, invdtl.cstms_bond_flg) as cstms_bond_flg,
            decode(nvl(:i_n_to_cstms_bond_flg, ''), nvl(:i_n_from_cstms_bond_flg, ''), '', nvl(:i_n_to_cstms_bond_flg, '')) as to_cstms_bond_flg,
            nvl(:i_n_from_dty_stmp_flg, invdtl.dty_stmp_flg) as dty_stmp_flg,
            decode(nvl(:i_n_to_dty_stmp_flg, ''), nvl(:i_n_from_dty_stmp_flg, ''), '', nvl(:i_n_to_dty_stmp_flg, '')) as to_dty_stmp_flg,
            nvl(:i_n_from_cnsg_flg, invdtl.cnsg_flg) as cnsg_flg,
            decode(nvl(:i_n_to_cnsg_flg, ''), nvl(:i_n_from_cnsg_flg, ''), '', nvl(:i_n_to_cnsg_flg, '')) as to_cnsg_flg,
            nvl(:i_c_from_inv_attr_str1, invdtl.inv_attr_str1) as inv_attr_str1,
            decode(nvl(:i_c_to_inv_attr_str1, ''), nvl(:i_c_from_inv_attr_str1, ''), '', nvl(:i_c_to_inv_attr_str1, '')) as to_inv_attr_str1,
            nvl(:i_c_from_inv_attr_str2, invdtl.inv_attr_str2) as inv_attr_str2,
            decode(nvl(:i_c_to_inv_attr_str2, ''), nvl(:i_c_from_inv_attr_str2, ''), '', nvl(:i_c_to_inv_attr_str2, '')) as to_inv_attr_str2,
            nvl(:i_c_from_inv_attr_str3, invdtl.inv_attr_str3) as inv_attr_str3,
            decode(nvl(:i_c_to_inv_attr_str3, ''), nvl(:i_c_from_inv_attr_str3, ''), '', nvl(:i_c_to_inv_attr_str3, '')) as to_inv_attr_str3,
            nvl(:i_c_from_inv_attr_str4, invdtl.inv_attr_str4) as inv_attr_str4,
            decode(nvl(:i_c_to_inv_attr_str4, ''), nvl(:i_c_from_inv_attr_str4, ''), '', nvl(:i_c_to_inv_attr_str4, '')) as to_inv_attr_str4,
            nvl(:i_c_from_inv_attr_str5, invdtl.inv_attr_str5) as inv_attr_str5,
            decode(nvl(:i_c_to_inv_attr_str5, ''), nvl(:i_c_from_inv_attr_str5, ''), '', nvl(:i_c_to_inv_attr_str5, '')) as to_inv_attr_str5,
            nvl(:i_c_from_inv_attr_str6, invdtl.inv_attr_str6) as inv_attr_str6,
            decode(nvl(:i_c_to_inv_attr_str6, ''), nvl(:i_c_from_inv_attr_str6, ''), '', nvl(:i_c_to_inv_attr_str6, '')) as to_inv_attr_str6,
            nvl(:i_c_from_inv_attr_str7, invdtl.inv_attr_str7) as inv_attr_str7,
            decode(nvl(:i_c_to_inv_attr_str7, ''), nvl(:i_c_from_inv_attr_str7, ''), '', nvl(:i_c_to_inv_attr_str7, '')) as to_inv_attr_str7,
            nvl(:i_c_from_inv_attr_str8, invdtl.inv_attr_str8) as inv_attr_str8,
            decode(nvl(:i_c_to_inv_attr_str8, ''), nvl(:i_c_from_inv_attr_str8, ''), '', nvl(:i_c_to_inv_attr_str8, '')) as to_inv_attr_str8,
            nvl(:i_c_from_inv_attr_str9, invdtl.inv_attr_str9) as inv_attr_str9,
            decode(nvl(:i_c_to_inv_attr_str9, ''), nvl(:i_c_from_inv_attr_str9, ''), '', nvl(:i_c_to_inv_attr_str9, ''))  as to_inv_attr_str9,
            nvl(:i_c_to_inv_attr_str10, invdtl.inv_attr_str10) as inv_attr_str10,
            decode(nvl(:i_c_to_inv_attr_str10, ''), nvl(:i_c_from_inv_attr_str10, ''), '', nvl(:i_c_to_inv_attr_str10, '')) as to_inv_attr_str10,
            nvl(:i_c_from_inv_attr_str11, invdtl.inv_attr_str11) as inv_attr_str11,
            decode(nvl(:i_c_to_inv_attr_str11, ''), nvl(:i_c_from_inv_attr_str11, ''), '', nvl(:i_c_to_inv_attr_str11, '')) as to_inv_attr_str11,
            nvl(:i_c_from_inv_attr_str12, invdtl.inv_attr_str12) as inv_attr_str12,
            decode(nvl(:i_c_to_inv_attr_str12, ''), nvl(:i_c_from_inv_attr_str12, ''), '', nvl(:i_c_to_inv_attr_str12, '')) as to_inv_attr_str12,
            nvl(:i_c_from_inv_attr_str13, invdtl.inv_attr_str13) as inv_attr_str13,
            decode(nvl(:i_c_to_inv_attr_str13, ''), nvl(:i_c_from_inv_attr_str13, ''), '', nvl(:i_c_to_inv_attr_str13, '')) as to_inv_attr_str13,
            nvl(:i_c_from_inv_attr_str14, invdtl.inv_attr_str14) as inv_attr_str14,
            decode(nvl(:i_c_to_inv_attr_str14, ''), nvl(:i_c_from_inv_attr_str14, ''), '', nvl(:i_c_to_inv_attr_str14, '')) as to_inv_attr_str14,
            nvl(:i_c_from_inv_attr_str15, invdtl.inv_attr_str15) as inv_attr_str15,
            decode(nvl(:i_c_to_inv_attr_str15, ''), nvl(:i_c_from_inv_attr_str15, ''), '', nvl(:i_c_to_inv_attr_str15, '')) as to_inv_attr_str15,
            nvl(:i_c_from_inv_attr_str16, invdtl.inv_attr_str16) as inv_attr_str16,
            decode(nvl(:i_c_to_inv_attr_str16, ''), nvl(:i_c_from_inv_attr_str16, ''), '', nvl(:i_c_to_inv_attr_str16, '')) as to_inv_attr_str16,
            nvl(:i_c_from_inv_attr_str17, invdtl.inv_attr_str17) as inv_attr_str17,
            decode(nvl(:i_c_to_inv_attr_str17, ''), nvl(:i_c_from_inv_attr_str17, ''), '', nvl(:i_c_to_inv_attr_str17, '')) as to_inv_attr_str17,
            nvl(:i_c_from_inv_attr_str18, invdtl.inv_attr_str18) as inv_attr_str18,
            decode(nvl(:i_c_to_inv_attr_str18, ''), nvl(:i_c_from_inv_attr_str18, ''), '', nvl(:i_c_to_inv_attr_str18, '')) as to_inv_attr_str18,
            nvl(:i_n_from_inv_attr_int1, invdtl.inv_attr_int1) as inv_attr_int1,
            decode(nvl(:i_n_to_inv_attr_int1, ''), nvl(:i_n_from_inv_attr_int1, ''), '', nvl(:i_n_to_inv_attr_int1, '')) as to_inv_attr_int1,
            nvl(:i_n_from_inv_attr_int2, invdtl.inv_attr_int2) as inv_attr_int2,
            decode(nvl(:i_n_to_inv_attr_int2, ''), nvl(:i_n_from_inv_attr_int2, ''), '', nvl(:i_n_to_inv_attr_int2, ''))  as to_inv_attr_int2,
            nvl(:i_n_from_inv_attr_int3, invdtl.inv_attr_int3) as inv_attr_int3,
            decode(nvl(:i_n_to_inv_attr_int3, ''), nvl(:i_n_from_inv_attr_int3, ''), '', nvl(:i_n_to_inv_attr_int3, '')) as to_inv_attr_int3,
            nvl(:i_n_from_inv_attr_int4, invdtl.inv_attr_int4) as inv_attr_int4,
            decode(nvl(:i_n_to_inv_attr_int4, ''), nvl(:i_n_from_inv_attr_int4, ''), '', nvl(:i_n_to_inv_attr_int4, '')) as to_inv_attr_int4,
            nvl(:i_n_from_inv_attr_int5, invdtl.inv_attr_int5) as inv_attr_int5,
            decode(nvl(:i_n_to_inv_attr_int5, ''), nvl(:i_n_from_inv_attr_int5, ''), '', nvl(:i_n_to_inv_attr_int5, '')) as to_inv_attr_int5,
            nvl(:i_n_from_inv_attr_flt1, invdtl.inv_attr_flt1) as inv_attr_flt1,
            decode(nvl(:i_n_to_inv_attr_flt1, ''), nvl(:i_n_from_inv_attr_flt1, ''), '', nvl(:i_n_to_inv_attr_flt1, '')) as to_inv_attr_flt1,
            nvl(:i_n_from_inv_attr_flt2, invdtl.inv_attr_flt2) as inv_attr_flt2,
            decode(nvl(:i_n_to_inv_attr_flt2, ''), nvl(:i_n_from_inv_attr_flt2, ''), '', nvl(:i_n_to_inv_attr_flt2, '')) as to_inv_attr_flt2,
            nvl(:i_n_from_inv_attr_flt3, invdtl.inv_attr_flt3) as inv_attr_flt3,
            decode(nvl(:i_n_to_inv_attr_flt3, ''), nvl(:i_n_from_inv_attr_flt3, ''), '', nvl(:i_n_to_inv_attr_flt3, ''))  as to_inv_attr_flt3,
            nvl(to_date(:i_d_from_inv_attr_dte1, 'YYYYMMDDHH24MISS'), invdtl.inv_attr_dte1) as inv_attr_dte1,
            decode(nvl(to_date(:i_d_to_inv_attr_dte1, 'YYYYMMDDHH24MISS'), ''), nvl(to_date(:i_d_from_inv_attr_dte1, 'YYYYMMDDHH24MISS'), ''), '', nvl(to_date(:i_d_to_inv_attr_dte1, 'YYYYMMDDHH24MISS'), ''))  as to_inv_attr_dte1,
            nvl(to_date(:i_d_from_inv_attr_dte2, 'YYYYMMDDHH24MISS'), invdtl.inv_attr_dte2) as inv_attr_dte2,
            decode(nvl(to_date(:i_d_to_inv_attr_dte2, 'YYYYMMDDHH24MISS'), ''), nvl(to_date(:i_d_from_inv_attr_dte2, 'YYYYMMDDHH24MISS'), ''), '', nvl(to_date(:i_d_to_inv_attr_dte2, 'YYYYMMDDHH24MISS'), '')) as to_inv_attr_dte2,
            nvl(:i_c_from_lodnum, invlod.lodnum) as lodnum,
            decode(nvl(:i_c_to_lodnum, ''), nvl(:i_c_from_lodnum, ''), '', nvl(:i_c_to_lodnum, '')) as to_lodnum,
            invlod.stoloc as stoloc,
            nvl(:i_n_from_load_attr1_flg, invlod.load_attr1_flg) as load_attr1_flg,
            decode(nvl(:i_n_to_load_attr1_flg, ''), nvl(:i_n_from_load_attr1_flg, ''), '', nvl(:i_n_to_load_attr1_flg, '')) as to_load_attr1_flg,
            nvl(:i_n_from_load_attr2_flg, invlod.load_attr2_flg) as load_attr2_flg,
            decode(nvl(:i_n_to_load_attr2_flg, ''), nvl(:i_n_from_load_attr2_flg, ''), '', nvl(:i_n_to_load_attr2_flg, ''))  as to_load_attr2_flg,
            nvl(:i_n_from_load_attr3_flg, invlod.load_attr3_flg) as load_attr3_flg,
            decode(nvl(:i_n_to_load_attr3_flg, ''), nvl(:i_n_from_load_attr3_flg, ''), '', nvl(:i_n_to_load_attr3_flg, '')) as to_load_attr3_flg,
            nvl(:i_n_from_load_attr4_flg, invlod.load_attr4_flg) as load_attr4_flg,
            decode(nvl(:i_n_to_load_attr4_flg, ''), nvl(:i_n_from_load_attr4_flg, ''), '', nvl(:i_n_to_load_attr4_flg, '')) as to_load_attr4_flg,
            nvl(:i_n_from_load_attr5_flg, invlod.load_attr5_flg) as load_attr5_flg,
            decode(nvl(:i_n_to_load_attr5_flg, ''), nvl(:i_n_from_load_attr5_flg, ''), '', nvl(:i_n_to_load_attr5_flg, '')) as to_load_attr5_flg,
            @hold as add_hld_flg,
            nvl(:i_c_hldnum, invhld.hldnum) as hldnum,
            nvl(:i_c_hldpfx, invhld.hldpfx) as hldpfx,
            locmst.arecod
       from invdtl
       join invsub
         on (invsub.subnum = invdtl.subnum)
       join invlod
         on (invsub.lodnum = invlod.lodnum)
       join locmst
         on (invlod.stoloc = locmst.stoloc)
       join prtmst_view
         on (invdtl.prt_client_id = prtmst_view.prt_client_id and invdtl.prtnum = prtmst_view.prtnum and invlod.wh_id = prtmst_view.wh_id and prtmst_view.prdflg = 1 and prtmst_view.prtadjflg = 1)
       left
       join invhld
         on (invhld.dtlnum = invdtl.dtlnum and invhld.wh_id = invlod.wh_id)
      where invdtl.dtlnum = :i_c_adj_ref2
         or (invdtl.lotnum = @lotnum and invdtl.prtnum = @prtnum and invdtl.inv_attr_str4 = @inv_attr_str4 and :i_c_adj_ref2 is )]
",12501,4,"20210216160332","","SLIMP",""
"USR_GET_DCS_PRT_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the part whether it be create or change.","F","F","F","F","F","F","F","[select decode(min(prtnum), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from prtmst
where
prtnum = :i_c_prtnum
and wh_id_tmpl = nvl(:i_c_whse_id,:i_c_wh_id)]",170,4,"20210216161210","","SLIMP",""
"USR_GET_DCS_PRTFTP_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the Item footprint whether it be create or change.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
   from prtftp
 where ftpcod = :i_c_ftpcod
    and prtnum = :i_c_prtnum
    and prt_client_id = :i_c_prt_client_id
    and wh_id = nvl(:i_c_whse_id,:i_c_wh_id)]
}",270,8,"20210216161211","","SLIMP",""
"USR_GET_DCS51_DESCR","SL_IFD_FLD","MOCA","Get Description Verb","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
 from :i_c_moca_nq_tablename
 where colnam = :i_c_colnam
   and colval = :i_c_prtnum || '|' || :i_c_prt_client_id || '|' || nvl(:i_c_whse_id,:i_c_wh_id)
   and locale_id = :i_c_locale_id
]
}",298,4,"20210216161211","","SLIMP",""
"USR_GET_DEF_MASS","SL_IFD_FLD","MOCA","Get default uom as per the host policies if empty.","F","F","F","F","F","F","T","publish data where fld_nam = :i_c_ifd_fld_id and fld_data = to_char(:i_n_ifd_fld_data)
                      and sysid = :i_c_evt_sys_id
|
if (@fld_data = '')
{
    [select decode(rtstr1, @fld_nam, decode(polvar,@sysid,1,2),
                          decode(rtstr1, 'DEFAULT', decode(polvar, @sysid, 3, 4), 5) )   policy_order,
               poldat_view.*
       from poldat_view
     where polcod = 'HOST-MU'
        and polval =  'MASS'
        and wh_id = nvl (@wh_id, '----')
        and polvar = nvl (@sysid,'DEFAULT')
     order by wh_id,  policy_order] catch (-1403)
    |
    if (@? = 0)
    {
        publish data
          where fld_data = @rtstr2
    }
}
|
    publish data where fld_data = to_char(@fld_data)
",722,8,"20210216161211","","SLIMP",""
"USR_GET_DEFAULT_WAREHOUSE","SL_IFD_FLD","MOCA","Get the Default Warehouse","F","F","F","F","F","F","","sl_get sys_data_attr where sys_id = :i_c_evt_sys_id
|
[select LPAD(@nochg_ind_char, length(nvl(:i_c_whse_id,:i_c_wh_id)), @nochg_ind_char) nochg_char,
        LPAD(@absent_ind_char, length(nvl(:i_c_whse_id,:i_c_wh_id)), @absent_ind_char) abs_char
   from dual]
|
if (nvl(:i_c_whse_id,:i_c_wh_id) = '' or
    nvl(:i_c_whse_id,:i_c_wh_id)= @abs_char or
    nvl(:i_c_whse_id,:i_c_wh_id)= @nochg_char)
{
    get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
}
else
    publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)",530,8,"20210216161211","","SLIMP",""
"USR_GET_FAIL_DATA","SL_RETR_MTHD_IMPL","MOCA","Get failData","F","F","F","F","F","F","F","/* USR_GET_FAIL_DATA
 * retrieves data based on ifd_data_seq for success reply interface
 * Version history:
 *  2018-10-08  Jasper Ringoir  Initial version.
 */
[select sl_ifd_data_hdr.ifd_data_seq,
        sl_ifd_data_hdr.evt_data_seq,
        sl_ifd_data_hdr.dwnld_seq,
        sl_ifd_data_hdr.ifd_id,
        sl_ifd_data_hdr.ifd_ver,
        sl_ifd_data_hdr.sys_id,
        sl_ifd_data_hdr.cre_dt,
        sl_ifd_data_hdr.ins_user_id,
        sl_msg_log.stat,
        sl_msg_log.msg_log_data
   from sl_ifd_data_hdr
  inner
   join sl_msg_log
     on sl_ifd_data_hdr.ifd_data_seq = sl_msg_log.in_ifd_data_seq
  inner
   join (select min(msg_log_seq) m_msg_log_seq,
                in_ifd_data_seq
           from sl_msg_log
          group by in_ifd_data_seq) min_sl_msg_log
     on sl_msg_log.in_ifd_data_seq = min_sl_msg_log.in_ifd_data_seq
  where min_sl_msg_log.m_msg_log_seq = sl_msg_log.msg_log_seq
    and sl_ifd_data_hdr.ifd_data_seq = :I_C_SL_IN_IFD_DATA_SEQ]
|
sl_list ifd_data_fld
 where ifd_data_seq = :I_C_SL_IN_IFD_DATA_SEQ
   and ifd_seg_id = 'CTRL_SEG'
   and ifd_fld_id = 'WH_ID'
   and return_as_projection = 'F'
|
publish data
 where ifd_data_seq = @ifd_data_seq
   and evt_data_seq = @evt_data_seq
   and dwnld_seq = @dwnld_seq
   and ifd_id = @ifd_id
   and ifd_ver = @ifd_ver
   and sys_id = @sys_id
   and cre_dt = @cre_dt
   and ins_user_id = @ins_user_id
   and stat = @stat
   and msg_log_data = @msg_log_data
   and wh_id = @value",1461,32,"20210216160146","","SLIMP",""
"USR_GET_FTP_EA_SIZE","SL_IFD_FLD","MOCA","USR_GET_FTP_EA_SIZE","F","F","F","F","F","F","F","/* 11-02-2020 March Schouwenaar
 * 16-04-2020 Radina Ivanova convert values to the correct measurement unit
* Algorithm to calculate sizes for each footprint based on case sizes given 
*/
if (nvl(:i_n_UC_TRP_WID, 0) = 0 or nvl(:i_n_UC_TRP_LEN, 0) = 0 or nvl(:i_n_UC_TRP_HGHT, 0) = 0)
{
    /* Package height, width and length are required */
    set return status where status = 90022
}
|
get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
[select rtnum1 as case_each
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-CASE'
    and wh_id = @wh_id] catch(-1403)
|
if (@case_each =1)
{
    if (:i_c_ifd_fld_id='WID')
    {
        get usr linear value
        where fld_nam = 'WID' 
           and fld_data = :i_n_UC_TRP_WID
           and wh_id = @wh_id
           and sysid = :i_c_evt_sys_id
        |
        publish data where untqty = @fld_data 
    }
    else if (:i_c_ifd_fld_id='LEN')
   {
       get usr linear value
       where fld_nam = 'LEN'
          and fld_data = :i_n_UC_TRP_LEN
          and wh_id = @wh_id
          and sysid = :i_c_evt_sys_id
       |
       publish data where untqty = @fld_data
   }
   else
   {
       get usr linear value
       where fld_nam = :i_c_ifd_fld_id
          and fld_data = :i_n_ifd_fld_data
          and wh_id = @wh_id
          and sysid = :i_c_evt_sys_id
       |
       publish data where untqty = @fld_data
   }
}
else
{
    if (:i_c_ifd_fld_id='WID')
    {
               get usr linear value
       where fld_nam = 'WID'
          and fld_data = :i_n_UC_TRP_WID
          and wh_id = @wh_id
          and sysid = :i_c_evt_sys_id
       |
       [select  round(to_number(@fld_data)/:i_n_inv_attr_int2, 2) as untqty from dual]
    }

    else
    {
       get usr linear value
       where fld_nam = :i_c_ifd_fld_id
          and fld_data = :i_n_ifd_fld_data
          and wh_id = @wh_id
          and sysid = :i_c_evt_sys_id
       |
       publish data where untqty = @fld_data
    }
}",2013,4,"20210216161336","","SLIMP",""
"USR_GET_FTP_IP_SIZE","SL_IFD_FLD","MOCA","USR_GET_FTP_IP_SIZE","F","F","F","F","F","F","F","/* 11-02-2020 March Schouwenaar
 * 16-04-2020 Radina Ivanova convert values to the correct measurement unit
* Algorithm to calculate sizes for INNER PACK footprint based on case sizes given 
* Checks for values are made in the blocking algorithm of the footprint
*/
get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
 if (:i_c_ifd_fld_id='WID')
{
        get usr linear value
        where fld_nam = 'WID' 
           and fld_data = :i_n_UC_TRP_WID
           and wh_id = @wh_id
           and sysid = :i_c_evt_sys_id
        |
     
   [select  round(to_number(@fld_data)/(:i_n_inv_attr_int2 / :i_n_inv_attr_int5), 2) as untqty from dual]
}
else
{
       get usr linear value
       where fld_nam = :i_c_ifd_fld_id
          and fld_data = :i_n_ifd_fld_data
          and wh_id = @wh_id
          and sysid = :i_c_evt_sys_id
       |
       publish data where untqty=to_number(@fld_data)
}",901,4,"20210216161336","","SLIMP",""
"USR_GET_FTPCOD_PA_HGT","SL_IFD_FLD","MOCA","Get footprint height","F","F","F","F","F","F","T","get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
[select rtstr1 as pa_asset
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-PALLET'
    and wh_id = @wh_id] catch(-1403)
|
[select * from asset_typ where asset_typ=@pa_asset] catch(-1403)
|
if (@asset_hgt > 0){
publish data where res =@asset_hgt
}
else{
publish data where res = 1000
}",406,4,"20210216161336","","SLIMP",""
"USR_GET_FTPCOD_PA_LEN","SL_IFD_FLD","MOCA","Get footprint length","F","F","F","F","F","F","T","get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
[select rtstr1 as pa_asset
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-PALLET'
    and wh_id = @wh_id] catch(-1403)
|
[select * from asset_typ where asset_typ=@pa_asset] catch(-1403)
|
if (@asset_len > 0){
publish data where res =@asset_len
}
else{
publish data where res = 1000
}",406,4,"20210216161336","","SLIMP",""
"USR_GET_FTPCOD_PA_QTY","SL_IFD_FLD","MOCA","Calculate pallet qty","F","F","F","F","F","F","T","
get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
[select rtstr1 as pa_asset
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-PALLET'
    and wh_id = @wh_id] catch(-1403)
|
get usr linear value
where fld_nam = 'LEN'
   and fld_data = :i_n_UC_TRP_LEN
   and wh_id = @wh_id
   and sysid = :i_c_evt_sys_id
|
publish data where len = @fld_data
|
get usr linear value
where fld_nam = 'WID'
   and fld_data = :i_n_UC_TRP_WID
   and wh_id = @wh_id
   and sysid = :i_c_evt_sys_id
|
publish data where wid = @fld_data
|
get usr linear value
where fld_nam = 'HGT'
   and fld_data = :i_n_UC_TRP_HGHT
   and wh_id = @wh_id
   and sysid = :i_c_evt_sys_id
|
publish data where hgt = @fld_data
|
[select ceil ((asset_len * asset_wid * asset_hgt)/( @hgt * @wid * @len))-1 as res from asset_typ where asset_typ=@pa_asset] catch(-1403)
|
if (@res<1){
  publish data where res = 999999
}
|
[select rtnum1 as case_each
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-CASE'
    and wh_id = @wh_id] catch(-1403)
|
if (@case_each=1){
  publish data where res = @res
}
else{
  publish data where res =  @res * :i_n_inv_attr_int2
}
",1239,4,"20210216161336","","SLIMP",""
"USR_GET_FTPCOD_PA_TRESHHOLD","SL_IFD_FLD","MOCA","Calculate pallet treshhold","F","F","F","F","F","F","T","/* 2020-01-24 Marco Schouwenaar
 * Algoritme to determine treshhold value on footprint PA
 * default percentage (rtnum1), if total quantity based on percentage is higher then the value int rtnum2, 
 * percentage will be recalculated to the minimum value set in rtnum2 */
get warehouse id
 where wh_id = nvl(:i_c_whse_id, :i_c_wh_id)
|
[select rtnum1 as pa_asset_tresh,
        rtnum2 as pa_asset_trqty
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-PALLET-TRESH'
    and wh_id = @wh_id] catch(-1403)
|
if (@pa_asset_tresh > 0)
{
    [select rtnum1 as case_each
       from poldat_view
      where polcod = 'USR-INTEGRATOR'
        and polvar = 'TRANSACTIONS'
        and polval = 'FTP-CASE'
        and wh_id = @wh_id] catch(-1403)
    |
    if (@case_each = 1)
    {
        publish data
         where cases = to_number(:i_n_untqty)
    }
    else
    {
        publish data
         where cases = to_number(:i_n_untqty) / :i_n_inv_attr_int2
    }
    |
    if (@pa_asset_trqty < (@cases / 100 * @pa_asset_tresh))
    {
        [select ceil(100/(@cases / @pa_asset_trqty)) -1 as res
           from dual]
        |
        if (@res > 100)
        {
            publish data
             where res = 100
        }
        else if (@res < 1)
        {
            publish data
             where res = 1
        }
        else
        {
            publish data
             where res = @res
        }
    }
        else
    {
        publish data
         where res = @pa_asset_tresh
    }
}
else
{
    publish data
     where res = 100
}",1600,4,"20210216161336","","SLIMP",""
"USR_GET_FTPCOD_PA_WID","SL_IFD_FLD","MOCA","Get footprint width","F","F","F","F","F","F","T","get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
[select rtstr1 as pa_asset
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-PALLET'
    and wh_id = @wh_id] catch(-1403)
|
[select * from asset_typ where asset_typ=@pa_asset] catch(-1403)
|
if (@asset_wid > 0){
publish data where res =@asset_wid
}
else{
publish data where res = 1000
}",406,4,"20210216161336","","SLIMP",""
"USR_GET_FTPQTY_CS","SL_IFD_FLD","MOCA","Get case footprint quantity based on policy","F","F","F","F","F","F","","get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
[select rtnum1 as case_each
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-CASE'
    and wh_id = @wh_id] catch(-1403)
|
if (@case_each =1)
   publish data where untqty=1
else 
   publish data where untqty=:i_n_inv_attr_int2",346,4,"20210216161336","","SLIMP",""
"USR_GET_HOLD_FLG","SL_IFD_FLD","MOCA","get value for hold flag","F","F","F","F","F","F","","if(:i_c_from_hld_flg=0 and :i_c_to_hld_flg=1)
  publish data where value='1'
else
{
if(:i_c_from_hld_flg=1 and :i_c_to_hld_flg=0)
  publish data where value='0'
else
  publish data where value= 
}
",201,4,"20210216160332","","SLIMP",""
"USR_GET_INV_RCV_SUMM_SEG","SL_RETR_MTHD_IMPL","MOCA","Get user INV-RCV Summary Segment RFH","F","F","F","F","F","F","T","list usr inventory receipt rm
   where summFlg = 0
      and client_id = :i_c_client_id
      and wh_id = :i_c_wh_id
      and lodnum = :i_c_lodnum
|
[select 'x' from device_context where dev_varnam = 'USR_IDENTIFY_LOAD_ADJ_DTL|DTLNUM:' || @dtlnum and value like 'UNTQTY%' and @expqty != @rcvqty] catch(-1403)
|
if (@? = 0)
{
    publish data where uc_rcv_indicator = "CORRECTION"
}
else
{
    publish data where uc_rcv_indicator = ""
}
|
filter data where moca_filter_level = 3 and uc_rcv_indicator = @uc_rcv_indicator
",520,4,"20210216160638","","SLIMP",""
"USR_GET_LOAD_DETAILS","SHIPPING","MOCA","Get the Load Actuals","F","F","F","F","F","F","T","list usr inventory for load detail
where lodnum=:i_c_lodnum and wh_id=:i_c_wh_id",80,4,"20210216160421","","SLIMP",""
"USR_GET_LOAD_DETAILS_SHP_RM","SHIPPING","MOCA","Get the Load Actuals","F","F","F","F","F","F","T","list usr inventory for load detail
 where ship_id =:i_c_ship_id 
   and ship_line_id =:i_c_ship_line_id 
   and ordnum =:i_c_ordnum 
   and ordlin =:i_c_ordlin 
   and client_id =:i_c_client_id 
   and wh_id =:i_c_wh_id",219,4,"20210216160458","","SLIMP",""
"USR_GET_NEW_QTY","SL_IFD_FLD","MOCA","Get total quantity","F","F","F","F","F","F","","if (:i_n_untqty = 0)
{
publish data where tot_qty = 
}
else
{
publish data where tot_qty=nvl(:i_n_DTL_TOTQTY,0)
}",117,4,"20210216160248","","SLIMP",""
"USR_GET_PART_RPKCLS_MOCA_VERB","SL_IFD_FLD","MOCA","Get MOCA Verb For Item Repack Class","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
from prtrpk
where
prtnum = :i_c_prtnum
and prt_client_id = :i_c_prt_client_id
and wh_id = nvl(:i_c_whse_id,:i_c_wh_id)]
}",229,4,"20210216161211","","SLIMP",""
"USR_GET_PRTFTP_DTL_MOCA_VERB","SL_IFD_FLD","MOCA","Get the MOCA verb for the Item footprint detail whether it be create or change.","F","F","F","F","F","F","T",":i_c_moca_nq_remote_str
{
[select decode(min('x'), , 'create', 'change') moca_verb /* :o_c_moca_verb */
   from prtftp_dtl
 where ftpcod = :i_c_ftpcod
    and prtnum = :i_c_prtnum
    and prt_client_id = :i_c_prt_client_id
    and uomcod = :i_c_uomcod
    and wh_id = nvl(:i_c_whse_id,:i_c_wh_id)]
}",303,8,"20210216161211","","SLIMP",""
"USR_GET_REACOD","SL_IFD_FLD","MOCA","Get reasoncode","F","F","F","F","F","F","","[select rtstr1 as reacod_fallback
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'REACOD_FALLBACK'
    and rtnum1 = 1
    and wh_id = nvl(:i_c_wh_id, '----')] catch(-1403)
|
publish data where reacod=nvl(:i_c_REACOD, @reacod_fallback)",290,8,"20210216160248","","SLIMP",""
"USR_GET_SHIPMENT_ACTUAL","SHIPPING","MOCA","Get the Shipment Actuals (RFH specific","F","F","F","F","F","F","T","List usr Shipments For Carrier Move RM where ship_id = :i_c_ship_id
|
get translated warehouse ID
|
[select @car_move_id car_move_id,
        @src_host src_host,
        @src_port src_port,
        @trans_wh_id trans_wh_id,
        shipment.*
   from shipment
  where shipment.ship_id = @ship_id]
",297,4,"20210216160421","","SLIMP",""
"USR_GET_SHIPMENT_LINE_ACTUAL","SHIPPING","MOCA","Get the Shipment Line Actuals","F","F","F","F","F","F","T","List usr Shipment Lines With Part RM
where ship_id = :i_c_ship_id and ship_line_id= :i_c_ship_line_id and ordnum=:i_c_ordnum and client_id=:i_c_client_id catch (-1403, 510)",172,8,"20210216160421","","SLIMP",""
"USR_GET_SHIPMENT_PRT_ACTUAL","SHIPPING","MOCA","Get the Shipment Actuals (RFH specific  + printer)","F","F","F","F","F","T","T","List Shipments For Carrier Move RM where car_move_id = :i_c_car_move_id  and stop_id  =:i_c_stop_id and dstloc =:i_c_dstloc 
|
get translated warehouse ID
|
publish data where dstloc =:i_c_dstloc 
|
if (@dstloc <> '')
{
    publish data
     where stagloc = @dstloc
}
else
{
    [select frstol as stagloc,
            devcod
       from dlytrn
      where ship_id = @ship_id
        and actcod = 'TRLR_LOAD'
      group by frstol,
            devcod]
}
|
[select *
   from locmst
  where stoloc = @stagloc]
|
if (@prtadr <> '')
{
    [select tcpadr,
            prtque
       from prsmst
      where prtadr = @prtadr] catch(-1403)
}
|
[select @car_move_id car_move_id,
        @src_host src_host,
        @src_port src_port,
        @trans_wh_id trans_wh_id,
        shipment.*,
        @tcpadr uc_prtadr,
        @prtque uc_prtque
   from shipment
  where shipment.ship_id = @ship_id]",885,4,"20210216160458","","SLIMP",""
"USR_GET_SUCCESS_CDATA","SL_RETR_MTHD_IMPL","MOCA","Get success Data","F","F","F","F","F","F","F","/* usr success ifd content data
 * retrieves data based on ifd_data_seq for success reply interface
 * Version history:
 *  2018-10-05  Jasper Ringoir/Marco Schouwenaar  Initial version.
 */
sl_list ifd_data_fld
 where ifd_data_seq = :I_C_SL_IN_IFD_DATA_SEQ
   and ifd_seg_id = 'PART_SEG'
   and ifd_fld_id = 'PRTNUM'
   and return_as_projection = 'F'
|
publish data
 where ifd_data_seq = @ifd_data_seq
 and value1 = @value
 and key1 = @ifd_fld_id
 and value2 = 
 and key2 = 
 and value3 = 
 and key3 = ",519,8,"20210216160218","","SLIMP",""
"USR_GET_SUCCESS_DATA","SL_RETR_MTHD_IMPL","MOCA","Get success Data","F","F","F","F","F","F","F","/* USR_GET_SUCCESS_DATA
 * retrieves data based on ifd_data_seq for success reply interface
 * Version history:
 *  2018-10-03  Jasper Ringoir  Initial version.
 */
[select sl_ifd_data_hdr.ifd_data_seq,
        sl_ifd_data_hdr.evt_data_seq,
        sl_ifd_data_hdr.dwnld_seq,
        sl_ifd_data_hdr.ifd_id,
        sl_ifd_data_hdr.ifd_ver,
        sl_ifd_data_hdr.sys_id,
        sl_ifd_data_hdr.cre_dt,
        sl_ifd_data_hdr.ins_user_id
   from sl_ifd_data_hdr
  where sl_ifd_data_hdr.ifd_data_seq = :I_C_SL_IN_IFD_DATA_SEQ]
|
sl_list ifd_data_fld
 where ifd_data_seq = :I_C_SL_IN_IFD_DATA_SEQ
   and ifd_seg_id = 'CTRL_SEG'
   and ifd_fld_id = 'WH_ID'
   and return_as_projection = 'F'
|
publish data
 where ifd_data_seq = @ifd_data_seq
 and evt_data_seq = @evt_data_seq
 and dwnld_seq = @dwnld_seq
 and ifd_id = @ifd_id
 and ifd_ver = @ifd_ver
 and sys_id = @sys_id
 and cre_dt = @cre_dt
 and ins_user_id = @ins_user_id
 and wh_id = @value",945,8,"20210216160218","","SLIMP",""
"USR_GET_TOT_QTY","SL_IFD_FLD","MOCA","Get total quantity","F","F","F","F","F","F","","publish data where tot_qty=:i_n_DTL_TOTQTY-:i_n_untqty",54,4,"20210216160248","","SLIMP",""
"USR_LM_PROCESS_USER","SL_IFD_SEG_PROC","MOCA","Algorithm used to process EMP0101 records","F","F","F","F","F","T","","
process usr user where <<OVERSTACKED_ARGS>> and SL_EVT_SEQ_NUM = :i_n_evt_data_seq",83,4,"20210216161544","","SLIMP",""
"USR_PRC_DCS_PART_ALT_PRTNUM","SL_IFD_SEG_POST","MOCA","Maintain Item Alternate Item Number","F","F","F","F","F","T","T","publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
    |
    /* If warehouse id is not passed,then default it to ---- */
    if(nvl(:i_c_whse_id,:i_c_wh_id) = '' or
       nvl(:i_c_whse_id,:i_c_wh_id) = @nochg_ind_char or
       nvl(:i_c_whse_id,:i_c_wh_id) = @absent_ind_char)
    {
        publish data where wh_id = '----'
    }
|
process host alternate part where <<OVERSTACKED_ARGS>>",393,4,"20210216161211","","SLIMP",""
"USR_PRC_HOST_ASSET_ASN","SL_IFD_SEG_PROC","MOCA","This algorithm is used to create ASN details for Empty and Non Empty Handling Units.","F","F","F","F","T","T","T","execute integrator transaction
    where validate_override_cmd = 'Validate Host Asset ASN'
      and override_cmd = 'Process Usr Host Asset ASN'
      and <<OVERSTACKED_ARGS>>",175,4,"20210216161335","","SLIMP",""
"USR_PRC_HOST_PART","SL_IFD_SEG_POST","MOCA","User Process Host Part","F","F","F","F","T","T","T","{publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)| Process Host Part where <<OVERSTACKED_ARGS>>}",103,4,"20210216161210","","SLIMP",""
"USR_PRC_HOST_RCPT_ASN","RECEIVING","MOCA","user Process host receipt ASN","F","F","F","F","T","T","T","execute integrator transaction
    where validate_override_cmd = 'Validate Host Receipt ASN'
      and override_cmd = 'Process usr Host Receipt ASN'
      and <<OVERSTACKED_ARGS>>",179,4,"20210216161336","","SLIMP",""
"USR_PRC_HOST_RCPT_TRLR","SL_IFD_SEG_POST","MOCA","Processing algorithm to process trailer information","F","F","F","F","T","T","T","get warehouse id where wh_id = nvl(:i_c_whse_id, :i_c_wh_id)
|
publish data
    where stoloc_wh_id = nvl(:i_c_stoloc_wh_id, @wh_id )
       and yard_loc_wh_id = nvl(:i_c_yard_loc_wh_id, @wh_id )
|
process host receipt trailer where <<OVERSTACKED_ARGS>> and stoloc_wh_id=@stoloc_wh_id and yard_loc_wh_id=@yard_loc_wh_id",318,4,"20210216161336","","SLIMP",""
"USR_PRC_PART_FOOTPRINT_DETAIL","SL_IFD_SEG_PROC","MOCA","Process Item Footprint Detail","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
   /* We create prtftp_dtl for the specified warehouse */
    publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
    |
    execute integrator transaction
        where <<OVERSTACKED_ARGS>>
          and resource = 'part footprint detail'
          and moca_verb = 'create' catch(2966)
}",317,8,"20210216161211","","SLIMP",""
"USR_PROCESS_DCS_PRT_RPKCLS","SL_IFD_SEG_POST","MOCA","Maintain Item Repack Class","F","F","F","F","F","T","T","{publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
if (':i_c_moca_verb' = 'change')
{
    execute integrator transaction
          where moca_verb = 'remove'
            and resource = 'part repack class'
            and <<OVERSTACKED_ARGS>>
    |
    execute integrator transaction
          where moca_verb = 'create'
            and resource = 'part repack class'
            and skip_custom_validation = true
            and  <<OVERSTACKED_ARGS>>
}
else
{
    execute integrator transaction
          where moca_verb = 'create'
            and resource = 'part repack class'
            and <<OVERSTACKED_ARGS>>
}
}",627,4,"20210216161211","","SLIMP",""
"USR_PROCESS_DCS_SER_NUM_TYP","SL_IFD_SEG_POST","MOCA","Maintain Serial Number Type","F","F","F","F","T","T","T","{publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id) | process host part serial number type where <<OVERSTACKED_ARGS>>}",123,4,"20210216161211","","SLIMP",""
"USR_PROCESS_DCS50_ORD_PREPARE","SL_IFD_PRE","MOCA","Prepare Sales Order For  Edit","F","F","F","F","F","F","T","{     publish data where client_id = :i_c_client_id     |     if (@client_id='')      {         sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'    |       publish data where client_id = @sysparmvalue     }     |     /* Update Order Line EDTFLG  */     {[update   ord_line set edtflg = 0       where     ordnum = :i_c_ordnum       and  client_id = @client_id and wh_id = nvl(:i_c_whse_id,:i_c_wh_id)]} catch (@?)     |     /* Update Order Header Notes EDTFLG  */     {[update ord_note set edtflg = 0        where ordnum = :i_c_ordnum       and client_id = @client_id and wh_id = nvl(:i_c_whse_id,:i_c_wh_id)]} catch (@?)     |     /* Update Order Detail Notes EDTFLG */     {[update ord_line_note        set edtflg = 0        where ordnum = :i_c_ordnum and client_id = @client_id and wh_id = nvl(:i_c_whse_id,:i_c_wh_id)]} catch (@?)     |     save session variable where name = 'ordnum_list' and value =  }",918,4,"20210216160948","","SLIMP",""
"USR_PROCESS_DCS60_PART_CLEANUP","SL_IFD_POST","MOCA","Create default Item description, if none was created for them during the download. Also we need to validate the details of the Item footprints.","F","F","F","F","F","T","T","/* PROCESS_DCS60_PART_CLEANUP */
{
if (:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
{
    sl_get sys_data_attr where sys_id = :i_c_sys_id
    |
    publish data where wh_id = nvl(:i_c_whse_id, :i_c_wh_id)
    |
    /* If warehouse id is not passed,then default it to ---- */
    if(nvl(:i_c_whse_id,:i_c_wh_id) = '' or
       nvl(:i_c_whse_id,:i_c_wh_id) = @nochg_ind_char or
       nvl(:i_c_whse_id,:i_c_wh_id) = @absent_ind_char)
    {
        publish data where wh_id = '----'
    }
    |
    /* Create a default description for part, if none exists after download */
    if (:i_c_prt_client_id = '' or :i_c_prt_client_id = @absent_ind_char)
    {
        if (:i_c_client_id != '' and :i_c_client_id != @absent_ind_char)
        {
            publish data where prtnum_client = :i_c_prtnum||'|'||:i_c_client_id || '|' || @wh_id
        }
        else
        {
            sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
            |
            publish data where prtnum_client = :i_c_prtnum||'|'||@SysParmValue || '|' || @wh_id
        }
    }
    else
    {
         publish data where prtnum_client = :i_c_prtnum||'|'||:i_c_prt_client_id || '|' || @wh_id
    }
    |
    [select *
       from prtdsc
      where colnam = 'prtnum|prt_client_id|wh_id_tmpl'
        and colval = @prtnum_client] catch (-1403)
    |
    if (@? = -1403)
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_LOCALE_ID'
        |
        create description where colnam = 'prtnum|prt_client_id|wh_id_tmpl'
                             and colval = @prtnum_client
                             and locale_id = @SysParmValue
                             and lngdsc = @prtnum_client
    }
    ;
    /* Validate all the footprint and details of the specific prtnum at here  */
    [select distinct ftpcod, wh_id
       from prtftp
      where prtnum = :i_c_prtnum
        and prt_client_id = :i_c_prt_client_id] catch (-1403)
    |
    if (@? = 0)
    {
        validate details for part footprint
           where prtnum = :i_c_prtnum
             and ftpcod = @ftpcod
             and prt_client_id = :i_c_prt_client_id
             and wh_id = @wh_id catch(@?)
        |
        if (@? != 0)
       {
             log full validation error message
                where <<OVERSTACKED_ARGS>>
                  and client_id = :i_c_prt_client_id
                  and err_code = @?
                  and precompiled_msg = @!
        }
     }
}
|
post full validation status
}",2464,4,"20210216161210","","SLIMP",""
"USR_PROCESS_DCS61_RCPT_CLEANUP","SL_IFD_POST","MOCA","Remove Unneeded Receipt Lines After Refresh","F","F","F","F","T","T","T","post full validation status
|
publish data where trknum = :i_c_trknum
|
if (@trknum != '')
{
    get warehouse id where wh_id = nvl(:i_c_whse_id, :i_c_wh_id)
    |
    if (:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
    {
       /* Auto Allocation of unplanned orders
        * Plan and allocate auto created orders for distros.
        */
       [select distinct 'x'
          from auto_alc_rule
         where incl_unpln_ord_flg = 1
           and ena_flg = 1
           and auto_alc_mtd in ('D','SCHD')
           and rule_type = 'ORD'
           and wh_id = @wh_id] catch(-1403)
       |
       if (@? = 0)
       {
           [select distinct ord_line.client_id
              from rcvlin,
                   distro,
                   ord_line
             where rcvlin.invnum = distro.invnum
               and rcvlin.invlin = distro.invlin
               and rcvlin.invsln = distro.invsln
               and distro.distro_id = ord_line.distro_id
               and distro.wh_id = ord_line.wh_id
               and distro.client_id = ord_line.client_id
               and rcvlin.trknum = @trknum
               and rcvlin.wh_id = @wh_id] catch(-1403)
           |
           if (@? = 0)
           {
               process auto allocation
                 where rulmod = 'O'
                   and oprmod = 'D'
                   and client_id = @client_id
                   and wh_id = @wh_id catch (@?)
                |
                if (@? != 0)
                {
                    publish data where post_error_code = @?
                        and post_error_msg = @!
                    |
                    get inbound full validation flag
                    |
                    if (@inb_full_vld_flg)
                    {
                        log full validation error message
                            where err_code = -1 * @post_error_code
                              and def_err_msg = @post_error_msg
                    }
                    else
                    {
                        set return status
                            where status = -1 * @post_error_code
                              and message = @post_error_msg
                    }
                }
               |
               process asn distribution download
                   where trknum = :i_c_trknum
                      and wh_id = @wh_id
           }
        }
    }
    |
    if (:i_c_trntyp = 'R' or :i_c_trntyp = 'C')
    {
        postprocess host receipt asn
            where trntyp = :i_c_trntyp
              and trknum = :i_c_trknum
              and wh_id = @wh_id catch (@?)
        |
        if (@? != 0)
        {
            publish data
              where post_error_code = @?
                and post_error_msg = @!
            |
            get inbound full validation flag
            |
            if (@inb_full_vld_flg)
            {
                log full validation error message
                    where err_code = -1 * @post_error_code
                      and def_err_msg = @post_error_msg
            }
            else
            {
                set return status
                    where status = -1 * @post_error_code
                      and message = @post_error_msg
            }
        }
    }
    |
    process host receipt cleanup where
}",3307,4,"20210216161335","","SLIMP",""
"USR_PROCESS_DCS61_RCPT_PREPARE","SL_IFD_PRE","MOCA","User Prepare Receipt Lines For Refresh","F","F","F","F","F","T","T","/* USR_PROCESS_DCS61_RCPT_PREPARE
 * Version history:
 *  2018-11-05  Jasper, Tim - Added logic to remove Asset Records
 *  2019-11-07  Salem, Jasper - Changed prefix logic
 */
publish data
 where <<OVERSTACKED_ARGS>>
|
post full validation status
|
publish data
 where trknum = :i_c_trknum
|
if (@trknum != '')
{
    get warehouse id
     where wh_id = nvl(:i_c_whse_id, :i_c_wh_id)
    |
    publish data
     where client_id = :i_c_client_id
    |
    if (@client_id = '')
    {
        sl_get sys_parm
         where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        [select @sysparmvalue client_id
           from dual]
    }
    |
    if (:i_c_trntyp = 'R' or :i_c_trntyp = 'C')
    {
        [update rcvlin
            set edtflg = 0
          where trknum = :i_c_trknum
            and wh_id = @wh_id] catch(-1403)
        |
        preprocess host receipt asn
         where trntyp = :i_c_trntyp
           and trknum = :i_c_trknum
           and wh_id = @wh_id catch(@?)
        |
        if (@? != 0)
        {
            publish data
             where post_error_code = @?
               and post_error_msg = @!
            |
            get inbound full validation flag
            |
            if (@inb_full_vld_flg)
            {
                log full validation error message
                 where err_code = -1 * @post_error_code
                   and def_err_msg = @post_error_msg
            }
            else
            {
                set return status
                 where status = -1 * @post_error_code
                   and message = @post_error_msg
            }
        }
    }
    |
    /*added logic:*/
    if (:i_c_trntyp = 'R' or :i_c_trntyp = 'C' or :i_c_trntyp = 'D')
        /*Delete Assets*/
    {
        {
            [select rcv_asset_key
               from rcv_asset
              where trknum = :i_c_trknum
                and client_id = @client_id
                and wh_id = @wh_id] catch(-1403)
            |
            if (@? = 0)
            {
                remove receive asset
                 where rcv_asset_key = @rcv_asset_key
                   and client_id = @client_id
                   and wh_id = @wh_id catch(-1403)
            }
        };
        noop
        |
        {
            [select sl_ifd_data_dtl.ifd_data_seq,
                    sl_ifd_data_dtl.ifd_data_dtl_seq
               from sl_ifd_data_hdr
              inner
               join sl_ifd_data_dtl
                 on sl_ifd_data_dtl.ifd_data_seq = sl_ifd_data_hdr.ifd_data_seq
              where sl_ifd_data_dtl.ifd_seg_id = 'RCPT_ASN_SEG'
                and sl_ifd_data_hdr.dwnld_seq = @dwnld_seq] catch(-1403)
            |
            if (@? = 0)
            {
                sl_list ifd_data_fld
                 WHERE ifd_data_seq = @ifd_data_seq
                   and ifd_data_dtl_seq = @ifd_data_dtl_seq
                |
                [select rtstr1 as prefix_cmd
                   from poldat_view
                  where polcod = 'USR-INTEGRATOR'
                    and polvar = 'TRANSACTIONS'
                    and polval = 'ASN_PRE'
                    and wh_id = @wh_id
                    and rtnum1 = 1] catch(@?)
                |
                if (@? = 0 and @prefix_cmd != '')
                {
                    execute server command
                     where cmd = @prefix_cmd
                    |
                    validate stack variable not 
                     where name = 'prefix_lodnum'
                    |
                    [select asset_typ,
                            invtid
                       from inv_asset
                      where invtid = @prefix_lodnum] catch(-1403)
                }
                else
                {
                    [select asset_typ,
                            invtid
                       from inv_asset
                      where invtid in (@lodnum, @subnum)] catch(-1403)
                }
                |
                if (@? = 0)
                {
                    remove record
                     where table = 'inv_asset'
                       and asset_typ = @asset_typ
                       and invtid = @invtid catch(-1403)
                }
            }
        };
        noop
        |
        [select 1
           from rcvtrk
          where rcvtrk_stat = 'EX'
            and trknum = @trknum] catch(-1403)
        |
        if (@? = 0)
        {
            [select *
               from rcvinv
              where trknum = @trknum] catch(-1403)
            |
            remove invoice
        }
    }
}",4588,4,"20210216161335","","SLIMP",""
"USR_PROCESS_PART_DESCR","SL_IFD_SEG_POST","MOCA","Maintain","F","F","F","F","T","T","T","{publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)|process host part description}",87,4,"20210216161211","","SLIMP",""
"USR_PROCESS_PART_FOOTPRINT","SL_IFD_SEG_PROC","MOCA","Process Item Footprint","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
    /* We create and change footprints for the specified warehouse */
    publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
    |
    execute integrator transaction
        where <<OVERSTACKED_ARGS>>
          and resource = 'part footprint' catch (-1403,10576,11588)
    |
    execute integrator transaction
        where moca_verb = 'remove'
          and resource = 'part footprint detail'
          and prt_client_id = :i_c_prt_client_id
          and wh_id = @wh_id
          and ftpcod = :i_c_ftpcod catch (-1403,10576,11588) 
}",566,41,"20200114153124","20200907072659","SLIMP","940409"
"USR_PROCESS_SAL10_ADDRESS","SL_IFD_SEG_PROC","MOCA","PROCESS ADDRESS  MASTER ADD/CHANGE","F","F","F","F","T","T","T","{
  /* Log TMS Event trigger on create address component fails with 'Invalid Warehouse ID' error if global warehouse id is not set
   * or if we try to download supplier using inbound adapter and not through Process Inbound IFD GUI as WH_ID value will not be
   * on stack. Hence use the warehouse ID value in the input XML (WHSE_ID) and publish wh_id value on stack to be used by
   * create address
   */
   publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
   |
   execute integrator transaction
    where resource = 'address'
       and <<OVERSTACKED_ARGS>>
}",569,16,"20210216160832","","SLIMP",""
"USR_PROCESS_SAL10_ADRMST_DEL","SL_IFD_SEG_PROC","MOCA","Remove Addresses","F","F","F","F","F","T","T","
{
    if (:i_c_host_ext_id = '')
    {
      [select count(*) cnt
      from adrmst
     where adr_id = :i_c_adr_id and
           client_id = :i_c_client_id]
     |
     if (@cnt>0)
     {
             execute integrator transaction
                 where moca_verb = 'remove'
                   and resource = 'address'
                   and adr_id = :i_c_adr_id
                   and client_id = :i_c_client_id
/*                   and <<OVERSTACKED_ARGS>>*/
       }
    }
    else
    {
      [select count(*) cnt
         from adrmst
        where host_ext_id = :i_c_host_ext_id and
              client_id = :i_c_client_id]
      |
      if (@cnt>0)
      {
             execute integrator transaction
                 where moca_verb = 'remove'
                   and resource = 'address'
                   and host_ext_id = :i_c_host_ext_id
                   and client_id = :i_c_client_id
/*                   and <<OVERSTACKED_ARGS>>*/
       }
 }
}",965,4,"20210216160832","","SLIMP",""
"USR_REM_LODNUM_PREF","SL_IFD_FLD","MOCA","Remove prefix of asn load (if applicable)","F","F","F","F","F","T","","publish data
 where <<OVERSTACKED_ARGS>>
|
[select rtstr2 as remove_prefix_cmd
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'ASN_PRE'
    and wh_id = @wh_id
    and rtnum1 = 1] catch(@?)
|
if (@? = 0 and @remove_prefix_cmd != '')
{
    execute server command
     where cmd = @remove_prefix_cmd
    |
    validate stack variable not 
     where name = 'remove_prefix_lodnum'
    |
    publish data
     where remove_prefix_lodnum = @remove_prefix_lodnum
}
else
{
    publish data
     where remove_prefix_lodnum = @ifd_fld_data
}",591,4,"20210216160638","","SLIMP",""
"USR_SL_O_JSON_MEM_HTTP","SL_COMM","MOCA","Convert IFD to XML and send it using HTTP post","F","F","F","F","F","F","F","/* USR_SL_O_JSON_MEM_HTTP
 * Convert IFD to XML and send it using HTTP post
 * Version history:
 *  2018-09-13  Jasper Ringoir Initial USR_ version, added http status 201 as success
 */

try
{
   /* Send the message only if we had a good status so far */
   if(:I_N_STATUS = 0 or :I_N_STATUS = -1403)
   {
      publish data
      where url = :I_C_URL
        and max_retries = :I_C_MAX_RETRIES
		and retry_wait = :I_C_RETRY_WAIT
		and proxy_host_id = :I_C_PROXY_HOST
		and proxy_port_no = :I_C_PROXY_PORT
		and proxy_usr_id = :I_C_PROXY_USER
		and proxy_usr_pswd = :I_C_PROXY_PASS
        /*
         * html_headers are extra headers that will be sent with the post
         */
        and html_headers = :I_C_HTTP_HEADERS
        /*
         *  handle_status_cmd provides local syntax for
         *  handling response status.
         *  The default logic raises a communication error whenever
         *  response status not equal to 200
         */
        and handle_status_cmd = :I_C_HANDLE_STATUS_CMD
        /*
         *  get_comm_comment_cmd provides local syntax for publishing
         *  the comm_cmnt variable, used for determining the communication
         *  comment.  By default comment is set to the body of web
         *  server response (@body)
         */
        and get_comm_comment_cmd = :I_C_GET_COMM_COMMENT_CMD
        /*
         *  handle_response_cmd provides local syntax for adding
         *  extra logic to the communication algorithm.
         *  It is invoked as the last step of the algorithm execution.
         */
        and   handle_response_cmd = :I_C_HANDLE_RESPONSE_CMD
      |
      sl_send ifd_data_mem_xml_get_xml
      where alg_context = :I_V_ALG_CONTEXT
      |
      sl_http send_msg
	   where url = @url
        and headers = @html_headers
        and body = @mxml_xml
	    and maxretries = @max_retries
		and retrywait = @retry_wait
		and proxy_host = @proxy_host_id
		and proxy_port = @proxy_port_no
		and proxy_usr = @proxy_usr_id
		and proxy_pswd = @proxy_usr_pswd
      |
      if(@handle_status_cmd)
      {
         /* Execute custom status handler */
         execute server command
         where command = @handle_status_cmd
      }
      else
      {
         /* standard status handler raises an error
          *  if return status != 200 (or 201 added JR)
          */
         if(@status != 200 and @status != 201)
         {
            set return status
            where code  = 3571 
              and error_message = 'HTTP Error status: ['
                         || @status || '] message: ['
                         || @reason || '] body: [' || @body || ']'
         }
      }
      |
      {
         if(@get_comm_comment_cmd)
         {
            /* custom comment command needs to publish
             * comment text as comm_cmnt
             */

            execute server command
            where command = @get_comm_comment_cmd
         }
         else
         {
            /* standard comment will be set to the value of variable body */
            publish data where comm_cmnt = @body
         }
         |
         sl_set comm_cmnt where comm_cmnt=@comm_cmnt
         ;
         if(@handle_response_cmd)
         {
            /* any post processing is done by handle_response_command */
         execute server command where command = @handle_response_cmd
         }
      }
   }
}
finally
{
   sl_send ifd_data_mem_xml_finish
   where alg_context = :I_V_ALG_CONTEXT catch(@?)
}",3471,60,"20210216160146","","SLIMP",""
"USR_UC_SHIPBY","SL_IFD_FLD","MOCA","fill uc_shipby from EO with algorithm if empty","F","F","F","F","T","T","T","publish data where <<OVERSTACKED_ARGS>>
|
[select _ind_char as dest__ind_char,
        nochg_ind_char as dest_nochg_ind_char,
        absent_ind_char as dest_absent_ind_char
   from sl_sys_def
  where sys_id = :i_c_dest_sys_id] catch(-1403)
|
/* Get the parent eo field value (for invtyp). 
sl_list par_eo_fld_from_evt_data_ptr
 where i_evt_data_ptr = :i_c_evt_data_ptr
   and i_eo_fld_id = :i_c_ifd_fld_misc_data
|*/
/* set uc_shipby as  if empty, else fill value from eo */
publish data
 where uc_shipby = decode(:i_c_uc_shipby, @dest__ind_char, , @dest_nochg_ind_char, , @dest_absent_ind_char, , :i_c_uc_shipby)
|
if (@uc_shipby is )
{
    /* fallback to old methode before used for ord.uc_shipby. */
    validate stack variable not 
     where name = 'ordnum'
    |
    validate stack variable not 
     where name = 'wh_id'
    |
    validate stack variable not 
     where name = 'client_id'
    |
    /* Check if custom consolidation logic is enabled and if we should override it if it is already set. */
    list policies
     where wh_id = @wh_id
       and polcod = 'USR-ORDER-CONSOLIDATION'
       and polvar = 'CONSOLIDATION'
       and polval = 'ENABLED' catch(-1403)
    |
    /* Put the policies in some more user friendly variables. */
    publish data
     where pol_usr_cons_enabled = @rtnum1
       and pol_usr_cons_override = @rtnum2
    |
    /* Check if custom consolidation logic is enabled.
     * The override value indicates if we should override any passed uc_shipby, so if it is enabled just set it.
     * Otherwise only set it if uc_shipby is empty.
     */
    if (@pol_usr_cons_enabled = 1 and (@pol_usr_cons_override = 1))
    {
        get usr shipby consolidation key
         where ordnum = @ordnum
           and client_id = @client_id
           and wh_id = @wh_id
    }
    |
    publish data
      where uc_shipby = @uc_shipby
}
else
{
    /* If the policy is not setup just return the original. */
    publish data where uc_shipby = @uc_shipby
}",2030,23,"20201001160943","20210412133548","939161","938673"
"USR_VALIDATE_HOST_ORDER","SL_IFD_POST","MOCA","Validate Host Order Download","F","F","F","F","F","T","T","publish data where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|
execute integrator transaction
    where validate_override_cmd = 'validate post process host order'
      and override_cmd = 'post process host order'
      and <<OVERSTACKED_ARGS>>",239,4,"20210216160948","","SLIMP",""
"USR_VALIDATE_UC_TRP_FIELDS","SL_IFD_PRE","MOCA","USR_VALIDATE_UC_TRP_FIELDS","F","F","F","F","F","F","F","if (!(nvl(:i_n_UC_TRP_WID, 0) > 0)
or !(nvl(:i_n_UC_TRP_LEN, 0) > 0)
or !(nvl(:i_n_UC_TRP_HGHT, 0) >0))
{
    /* Package height, width and length are required */
    set return status where status = 90022
}
;
get warehouse id where wh_id = nvl(:i_c_whse_id,:i_c_wh_id)
|

[select rtnum1 as case_each
   from poldat_view
  where polcod = 'USR-INTEGRATOR'
    and polvar = 'TRANSACTIONS'
    and polval = 'FTP-CASE'
    and wh_id = @wh_id] catch(-1403)
|
if (@case_each!=1){
    if (!(nvl(:i_n_inv_attr_int2, 0) > 0))
    {
        /* inv_attr_int2 field is required */
        set return status where status = 90023
    }
}",622,4,"20210216161336","","SLIMP",""
"USR-PRC_HOST_ORDLINE_ALG","SHIPPING","MOCA","Process Host Order Line Download","F","F","F","F","T","T","T","publish data where <<OVERSTACKED_ARGS>>
|
if (:i_c_trntyp != 'D' and :i_c_cancelled_flg != '1')
translate for simple rules where proc_typ ='I' and trntyp = :i_c_trntyp
|
Process Host Order Line",193,4,"20210216160948","","SLIMP",""
"VALID_PCFDTL_DETAILS","SL_IFD_SEG_PROC","MOCA","Check Item exists and qty > 0","F","F","F","F","F","F","T","[select decode(min(prtnum), , 'F', 'T')
 from prtmst where prtnum = rpad(:i_c_prtnum, 20) and :i_c_rcvqty > 0]",114,1,"20210202172858","","SLIMP_I",""
"VALIDATE_DETAILS_FOR_PARTFOOT","SL_IFD_POST","MOCA","Validate Details For Item Footprint","F","F","F","F","T","T","T",":i_c_moca_nq_remote_str
{
    publish data where wh_id = :i_c_whse_id
    |
    validate details for part footprint
        where <<OVERSTACKED_ARGS>> catch (@?)
    |
    if(@? != 0)
    {
        publish data where post_error_code = @?
            and post_error_msg = @!
        |
        get inbound full validation flag
        |
        if (@inb_full_vld_flg)
        {
            log full validation error message
                where err_code = -1 * @post_error_code
                  and def_err_msg = @post_error_msg
                  and ifd_seg_id = 'PARTFOOT_DTL_SEG'
        }
        else
        {
            set return status where status = @post_error_code
                and message = @post_error_msg
        }
    }
}
|
post full validation status",771,1,"20210202172858","","SLIMP_I",""
"VALIDATE_HOST_CAR_MOVE","SL_IFD_POST","MOCA","Validate Host Shipment Download","T","T","F","F","T","T","T","{Validate Host Shipment  where <<OVERSTACKED_ARGS>>
| /* Remove Unneeded Shipment lines */
get session variable where name ='moca_verb_shipment' catch (@?)
|if (@? != 0) publish data where value = 'change'
|
if (@value = 'change')
{
   publish data where host_ext_id = :i_c_host_ship_id and client_id = :i_c_client_id
   |
   if (@client_id ='')
   {
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
        publish data where client_id = @sysparmvalue
   }
   else
   {
    publish data where client_id= :i_c_client_id
   }
   |/* Loop through all shipment lines for the order that are flagged for delete */        {[select sl.ship_line_id
     from   shipment_line sl
     where  nvl(sl.edtflg,0) = 0
     and    sl.ship_id in ( select ship_id
                from shipment
                where host_client_id = @client_id
                and host_ext_id = @host_ext_id)]} catch (-1403)
    |
    if (@? = 0)
    {
           remove shipment line
    }
    |/* Remove Shipment Header if no Shipment Lines */
    {[select count(*) cnt
        from shipment_line
        where ship_id in (select ship_id from shipment
               where host_client_id = @client_id
               and host_ext_id = @host_ext_id)]
      |
      if (@cnt=0)
        [delete from shipment
         where host_ext_id= @host_ext_id and host_client_id= @client_id]}
}
}",1366,1,"20210202172858","","SLIMP_I",""
"VALIDATE_HOST_ORDER","SL_IFD_POST","MOCA","Validate Host Order Download","F","F","F","F","F","T","T","publish data where wh_id = :i_c_whse_id
|
execute integrator transaction
    where validate_override_cmd = 'validate post process host order'
      and override_cmd = 'post process host order'
      and <<OVERSTACKED_ARGS>>",223,1,"20210202172858","","SLIMP_I",""
"VALIDATE_HOST_ORDER_LINE","SL_IFD_POST","MOCA","Validate Host Order Line","F","F","F","F","T","T","T","get warehouse id where wh_id = :i_c_whse_id
|
{
Validate Host Order where <<OVERSTACKED_ARGS>> and wh_id = :i_c_whse_id
|
publish data where ordnum = :i_c_ordnum and client_id = :i_c_client_id
|
if (@client_id ='')
{
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
    publish data where client_id = @sysparmvalue
}
|
if (:i_c_trntyp != 'D')
{
    process order for tms
      where ordnum = @ordnum
        and client_id = @client_id
        and wh_id = @wh_id
}
}
|
if(:i_c_trntyp = 'A' or :i_c_trntyp = 'C')
{
   /* Auto Allocation of unplanned orders
    * Plan and allocate auto created orders.
    */
   [select distinct 'x'
      from auto_alc_rule
     where incl_unpln_ord_flg = 1
       and ena_flg = 1
       and auto_alc_mtd in ('D','SCHD')
       and rule_type = 'ORD'
       and wh_id = :i_c_whse_id] catch(-1403)
   |
   if(@? = 0)
   {
        if (@client_id ='')
        {
           sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
           |
           publish data where client_id = @sysparmvalue
        }
        else
        {
           publish data where client_id= @client_id
        }
        |
        process auto allocation
          where rulmod = 'O'
            and oprmod = 'D'
            and client_id = @client_id
            and wh_id = :i_c_whse_id
   }
}",1320,1,"20210202172858","","SLIMP_I",""
"VALIDATE_HOST_SHIPMENT","SL_IFD_POST","MOCA","Validate Host Shipment Download","F","F","F","F","T","T","T","{
    Validate Host Shipment  where <<OVERSTACKED_ARGS>>
    |
    get warehouse id where wh_id = :i_c_whse_id
    |
    get session variable where name ='moca_verb_shipment' catch (@?)
    |
    if (@? != 0) publish data where value = 'change'
    |
    publish data where host_ext_id = :i_c_host_ship_id and client_id = :i_c_client_id
    |
    if (@client_id ='')
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        publish data where client_id = @sysparmvalue
    }
    else
    {
        publish data where client_id= :i_c_client_id
    }
    | /* Remove Unneeded Shipment lines */
    if ((@value = 'change') and (:i_c_trntyp = 'R' or :i_c_trntyp = 'r'))
    {

        /* Loop through all shipment lines for the order that are flagged for delete */
        {
            [select sl.ship_line_id
               from shipment_line sl
              where nvl(sl.edtflg,0) = 0
                and sl.ship_id in ( select ship_id
                                       from shipment
                                        where host_client_id = @client_id
                                        and host_ext_id = @host_ext_id)]} catch (-1403)
            |
            if (@? = 0)
            {
                   remove shipment line
            }
            |
            /* Remove Shipment Header if no Shipment Lines */
            {
                [select count(*) cnt
                from shipment_line
                where ship_id in (select ship_id from shipment
                       where host_client_id = @client_id
                       and host_ext_id = @host_ext_id)]
                |
              if (@cnt=0)
                [delete from shipment
                 where host_ext_id= @host_ext_id and host_client_id= @client_id]
            }
    }
    else if ((:i_c_trntyp = 'A' or :i_c_trntyp = 'a') or (:i_c_trntyp = 'C' or :i_c_trntyp = 'c'))
    {
      get session variable list where name = 'shipId_list'  catch (-1403)
      |
       publish data where shipId = @value
      |
      [[
            import com.redprairie.moca.*;
            import com.redprairie.moca.util.*;

            MocaContext ctx = MocaUtils.currentContext();
            String[] shipmentList = ctx.getVariable("shipId").split(",");
            for(int i = 0; i < shipmentList.length; i++)
            {
                moca.executeCommand("set parcel shipment activity where shipId = @shipId",
                        new MocaArgument("ship_id", shipmentList[i]));

                moca.executeCommand(
                        """ identify carton routing group
                               where ship_id = @ship_id
                                 and wh_id  = @wh_id """,
                                new MocaArgument("ship_id", shipmentList[i]),
                                new MocaArgument("wh_id", wh_id));
            }
      ]]
      |
      [select sh.ship_id,
            sh.srvlvl,
            sh.src_sys,
            cm.carcod
       from shipment sh,
            stop st,
            car_move cm
      where sh.host_ext_id = @host_ext_id
        and sh.host_client_id = @client_id
        and cm.car_move_id = st.car_move_id
        and st.stop_id = sh.stop_id] catch(-1403)
      |
      process auto allocation
          where host_ext_id = @host_ext_id
            and host_client_id = @client_id
            and ship_id = @ship_id
            and client_id = @client_id
            and wh_id = @wh_id
            and rulmod = 'O'
            and oprmod = 'D'
            and carcod = @carcod
            and srvlvl = @srvlvl
            and src_sys= @src_sys
    }
}",3635,1,"20210202172858","","SLIMP_I",""
"VALIDATE_HOST_SHIPMENT_LINE","SL_IFD_POST","MOCA","Validate Shipment Line","F","F","F","F","T","T","T","{
    Validate Host Shipment
       where <<OVERSTACKED_ARGS>>
    |
    get warehouse id where wh_id = :i_c_whse_id
    |
    publish data where host_ext_id = :i_c_host_ship_id and client_id = :i_c_client_id
    |
    if (@client_id ='')
    {
        sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
        |
        publish data where client_id = @sysparmvalue
    }
    else
    {
        publish data where client_id= :i_c_client_id
    }
    |
    if ((:i_c_trntyp = 'A' or :i_c_trntyp = 'a') or (:i_c_trntyp = 'C' or :i_c_trntyp = 'c'))
    {
      get session variable list where name = 'shipId_list'  catch (-1403)
      |
       publish data where shipId = @value
      |
      [[
            import com.redprairie.moca.*;
            import com.redprairie.moca.util.*;

            MocaContext ctx = MocaUtils.currentContext();
            String[] shipmentList = ctx.getVariable("shipId").split(",");
            for(int i = 0; i < shipmentList.length; i++)
            {
                moca.executeCommand("set parcel shipment activity where shipId = @shipId",
                        new MocaArgument("ship_id", shipmentList[i]));

                moca.executeCommand(
                        """ identify carton routing group
                               where ship_id = @ship_id
                                 and wh_id  = @wh_id """,
                                new MocaArgument("ship_id", shipmentList[i]),
                                new MocaArgument("wh_id", wh_id));
            }
      ]]
      |
      [select sh.ship_id,
            sh.srvlvl,
            sh.src_sys,
            cm.carcod
       from shipment sh,
            stop st,
            car_move cm
      where sh.host_ext_id = @host_ext_id
        and sh.host_client_id = @client_id
        and cm.car_move_id = st.car_move_id
        and st.stop_id = sh.stop_id] catch(-1403)
    |
    process auto allocation
      where host_ext_id = @host_ext_id
        and host_client_id = @client_id
        and ship_id = @ship_id
        and client_id = @client_id
        and wh_id = @wh_id
        and rulmod = 'O'
        and oprmod = 'D'
        and carcod = @carcod
        and srvlvl = @srvlvl
        and src_sys= @src_sys
    }
}",2235,1,"20210202172858","","SLIMP_I",""
"VALIDATE_HOST_TRF_PLAN","SL_IFD_POST","MOCA","Validate Host Traffic Plan Download","F","F","F","F","F","F","T","get warehouse id where wh_id = :i_c_whse_id
|
{
get session variable where name ='moca_verb_car_move' catch (@?)
|
if (@? != 0) {publish data where value = 'change'}
|
if (@value = 'change' or @value = 'create')
{
   publish data where host_ext_id = :i_c_host_car_move_id and client_id = :i_c_client_id
   |
   if (@client_id ='')
   {
    sl_get sys_parm where parm_id = 'SL_DCS_HOST_CLIENT_ID'
    |
        publish data where client_id = @sysparmvalue
   }
   else
   {
    publish data where client_id= :i_c_client_id
   }
   |
   publish data where client_id =@client_id and host_ext_id = @host_ext_id
}
|
if (@value = 'change')
{
   [select shipment.ship_id from shipment, stop, car_move where shipment.stop_id =               stop.stop_id and stop.car_move_id = car_move.car_move_id  and car_move.host_ext_id =          @host_ext_id and car_move.host_client_id = @client_id]
   |
   [select ordnum, ordlin, ordsln from shipment_line where ship_id = @ship_id and edtflg = 0] catch (-1403)
   |
   if(@? = 0) {deassign order from shipment where ordnum = @ordnum and ordlin = @ordlin and ordsln = @ordsln and wh_id = @wh_id}
}
else if (@value = 'create' and (:i_c_whse_id = '' or :i_c_whse_id = @absent_ind_char))
{
   [select distinct ord.wh_id,
           car_move.car_move_id
      from ord,
           shipment_line,
           shipment,
           stop,
           car_move
     where ord.ordnum = shipment_line.ordnum
       and ord.client_id = shipment_line.client_id
       and shipment.ship_id = shipment_line.ship_id
       and shipment.stop_id = stop.stop_id
       and stop.car_move_id = car_move.car_move_id
       and ord.wh_id is not 
       and car_move.host_ext_id = @host_ext_id
       and car_move.host_client_id = @client_id
       and rownum <2] catch (@?)
   |
   if (@wh_id != '')
   {
       change carrier move
        where car_move_id = @car_move_id
          and wh_id = @wh_id
   }
}
}",1922,1,"20210202172858","","SLIMP_I",""
"VALIDATE_INVENTORY_CRITERIA","SL_IFD_SEG_PROC","MOCA","validate inventory criteria","F","F","F","F","T","T","T","check inventory criteria for holds where <<OVERSTACKED_ARGS>> catch (@?)
|
if (@? != 0)
{
    publish data where post_error_code = @?
        and post_error_msg = @!
    |
    get inbound full validation flag
    |
    if (@inb_full_vld_flg)
    {
        log full validation error message
            where err_code = -1 * @post_error_code
              and def_err_msg = @post_error_msg
              and ifd_seg_id = 'PROCESS_HOLD'
              and <<OVERSTACKED_ARGS>>
    }
    |
    set return status where status = -1 * @post_error_code
        and message = @post_error_msg
}",584,1,"20210202172858","","SLIMP_I",""
"VALIDATE_SHIPMENT_SEG","SL_IFD_SEG_PROC","MOCA","Validate Host Shipment Download","F","F","F","F","F","F","T","[select sh.ship_id
        from shipment sh
        where sh.host_ext_id = :i_c_host_ship_id
        and sh.host_client_id = :i_c_client_id]
|
get session variable where name = 'shipId_list' catch (@?)
|
if (@? != 0)
{
    save session variable where name = 'shipId_list' and value = @ship_id
}
else
{
    save session variable where name = 'shipId_list' and value = @value || ',' || @ship_id
}",394,1,"20210202172858","","SLIMP_I",""
"VALIDATE_TM_LOAD_PLAN","SL_IFD_PRE","MOCA","Validate and cleanup the shipments after the TM TL Load Import transaction","F","F","F","F","F","F","T","get session variable where name = 'moca_verb_car_move'
|
if (@value = 'change')
{
    [select sh.ship_id
       from shipment sh,
            stop st,
            car_move cm
      where cm.car_move_id = st.car_move_id
        and st.stop_id = sh.stop_id
        and cm.tms_load_id = :i_c_loadid ] catch(-1403)
    |
    if (@? = 0)
    {
        [select ordnum,
                client_id,
                ordlin,
                ordsln
           from shipment_line
          where ship_id = @ship_id
            and edtflg = 0 ] catch(-1403)
        |
        if (@? = 0)
        {
            deassign order from shipment
               where ordnum = @ordnum
                 and client_id = @client_id
                 and ordlin = @ordlin
                 and ordsln = @ordsln
        }
    }
}
else if (@value = 'create')
{
    [select distinct ord.wh_id,
           car_move.car_move_id
      from ord,
           shipment_line,
           shipment,
           stop,
           car_move
     where ord.ordnum = shipment_line.ordnum
       and ord.client_id = shipment_line.client_id
       and shipment.ship_id = shipment_line.ship_id
       and shipment.stop_id = stop.stop_id
       and stop.car_move_id = car_move.car_move_id
       and ord.wh_id is not 
       and car_move.tms_load_id = :i_c_loadid
       and rownum <2] catch (@?)
   |
   if (@wh_id != '')
   {
       change carrier move
        where car_move_id = @car_move_id
          and wh_id = @wh_id
   }
}",1483,1,"20210202172858","","SLIMP_I",""
"VALIDATION_ERROR_STATUS","SL_IFD_POST","MOCA","check for errors during full validation","F","F","F","F","F","T","T","post full validation status",27,5,"20210202172858","","SLIMP_I",""
"WCS_BLOCK_IDNTFY","SL_IFD_BLOCK","MOCA","Used for induction event to filter out modify up adjustments.","F","F","F","F","F","F","F","if(:i_c_wcs_sys_id = :i_c_sys_id) {
  if(:i_c_actcod = 'IDNTFY') {
      publish data
       where res = 'F'
  } else {
    publish data
     where res = 'T'
  }
} else {
  publish data
   where res = 'F'
}",206,1,"20210202172858","","SLIMP_I",""
"WCS_BLOCK_INVDEL","SL_IFD_BLOCK","MOCA","Used for removal event to filter out modify down adjustments.","F","F","F","F","F","F","F","if(:i_c_wcs_sys_id = :i_c_sys_id) {
  if(:i_c_actcod = 'INVDEL' and :i_c_scanned_qty != '0') {
      publish data
       where res = 'F'
  } else {
    publish data
     where res = 'T'
  }
} else {
  publish data
   where res = 'F'
}",234,1,"20210202172858","","SLIMP_I",""
"WCS_MAP_BLOCK","SL_IFD_BLOCK","MOCA","Returns 'T' is the destination system is the same as the WCS ID event argument.","F","F","F","F","F","F","F","publish data where wcs_sys_id = :i_c_wcs_id
|
[[ :i_c_wcs_sys_id == :i_c_sys_id || wcs_sys_id == :i_c_sys_id ? 'T' : 'F'; ]]",124,1,"20210202172858","","SLIMP_I",""
"WRITE_RT_ADDRESS_FOR_GS1_LOAD","SL_IFD_FLD","MOCA","If the order type is customer order, we need to update the address detail information on the order or create a new address.","F","F","F","F","F","T","T","publish data where <<OVERSTACKED_ARGS>>
|
get warehouse id from host external id 
    where host_ext_id = :i_c_sf_pln_ext_id catch(-1403)
|
if (@? = 0)
{
    write rt address id for gs1 load
}
else
{
    publish data 
        where rt_adr_id = ''
}",248,1,"20210202173249","","SLIMP_I",""
